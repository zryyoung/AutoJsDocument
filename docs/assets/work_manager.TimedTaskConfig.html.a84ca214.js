import{_ as r}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as s,c as i,a as e,d as n,w as o,b as a,e as d,r as l}from"./app.6aa2b576.js";const h={},c=e("h1",{id:"interface-timedtaskconfig",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#interface-timedtaskconfig","aria-hidden":"true"},"#"),a(" Interface: TimedTaskConfig")],-1),m=e("p",null,"Timed task configuration.",-1),_=e("p",null,[e("strong",null,[e("code",null,[e("span",{class:"token property"},"See")])])],-1),u=e("h2",{id:"hierarchy",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#hierarchy","aria-hidden":"true"},"#"),a(" Hierarchy")],-1),p=e("code",null,[e("span",{class:"token property"},"TaskConfig")],-1),f=e("p",null,[a("\u21B3 "),e("strong",null,[e("code",null,[e("span",{class:"token property"},"TimedTaskConfig")])])],-1),k=e("h2",{id:"table-of-contents",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#table-of-contents","aria-hidden":"true"},"#"),a(" Table of contents")],-1),g=e("h3",{id:"properties",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#properties","aria-hidden":"true"},"#"),a(" Properties")],-1),T=d('<h2 id="properties-1" tabindex="-1"><a class="header-anchor" href="#properties-1" aria-hidden="true">#</a> Properties</h2><h3 id="path" tabindex="-1"><a class="header-anchor" href="#path" aria-hidden="true">#</a> path</h3><p>\u2022 <code><span class="token property">Readonly</span></code> <strong>path</strong>: <code><span class="token property">string</span></code></p><p>The script path of the task, must be a absolute path.</p><h4 id="inherited-from" tabindex="-1"><a class="header-anchor" href="#inherited-from" aria-hidden="true">#</a> Inherited from</h4>',5),w=e("hr",null,null,-1),y=e("h3",{id:"time",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#time","aria-hidden":"true"},"#"),a(" time")],-1),v=e("code",null,[e("span",{class:"token property"},"Readonly")],-1),C=e("strong",null,"time",-1),b=e("code",null,[e("span",{class:"token property"},"DateTime")],-1),x=e("p",null,"The time of the timed task. If the task is a periodic task, this time will only take the time of the corresponding period, for example, the daily task will only take the hour and minute.",-1);function N(R,V){const t=l("RouterLink");return s(),i("div",null,[e("p",null,[n(t,{to:"/en/v9/generated/"},{default:o(()=>[a("Auto.js Pro 9 Docs")]),_:1}),a(" / "),n(t,{to:"/en/v9/generated/modules/work_manager.html"},{default:o(()=>[a("work_manager")]),_:1}),a(" / TimedTaskConfig")]),c,e("p",null,[n(t,{to:"/en/v9/generated/modules/work_manager.html"},{default:o(()=>[a("work_manager")]),_:1}),a(".TimedTaskConfig")]),m,_,e("ul",null,[e("li",null,[n(t,{to:"/en/v9/generated/modules/work_manager.html#adddailytask"},{default:o(()=>[a("addDailyTask")]),_:1})]),e("li",null,[n(t,{to:"/en/v9/generated/modules/work_manager.html#addweeklytask"},{default:o(()=>[a("addWeeklyTask")]),_:1})]),e("li",null,[n(t,{to:"/en/v9/generated/modules/work_manager.html#addonetimetask"},{default:o(()=>[a("addOneTimeTask")]),_:1})])]),u,e("ul",null,[e("li",null,[e("p",null,[n(t,{to:"/en/v9/generated/interfaces/work_manager.TaskConfig.html"},{default:o(()=>[p]),_:1})]),f])]),k,g,e("ul",null,[e("li",null,[n(t,{to:"/en/v9/generated/interfaces/work_manager.TimedTaskConfig.html#path"},{default:o(()=>[a("path")]),_:1})]),e("li",null,[n(t,{to:"/en/v9/generated/interfaces/work_manager.TimedTaskConfig.html#time"},{default:o(()=>[a("time")]),_:1})])]),T,e("p",null,[n(t,{to:"/en/v9/generated/interfaces/work_manager.TaskConfig.html"},{default:o(()=>[a("TaskConfig")]),_:1}),a("."),n(t,{to:"/en/v9/generated/interfaces/work_manager.TaskConfig.html#path"},{default:o(()=>[a("path")]),_:1})]),w,y,e("p",null,[a("\u2022 "),v,a(),C,a(": "),n(t,{to:"/en/v9/generated/modules/work_manager.html#datetime"},{default:o(()=>[b]),_:1})]),x])}const I=r(h,[["render",N],["__file","work_manager.TimedTaskConfig.html.vue"]]);export{I as default};
