import{_ as p}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as l,c,a as e,d as a,w as s,b as n,e as o,r}from"./app.6aa2b576.js";const d={},u=o('<h1 id="power-manager" tabindex="-1"><a class="header-anchor" href="#power-manager" aria-hidden="true">#</a> power_manager</h1><p>This module can let you control the power policy of this application, by ignoring battery optimization to let this application run in background. Using this API may cause the battery life of the device to be affected.</p><h2 id="table-of-contents" tabindex="-1"><a class="header-anchor" href="#table-of-contents" aria-hidden="true">#</a> Table of contents</h2><h3 id="interfaces" tabindex="-1"><a class="header-anchor" href="#interfaces" aria-hidden="true">#</a> Interfaces</h3>',4),h=e("h3",{id:"functions",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#functions","aria-hidden":"true"},"#"),n(" Functions")],-1),k=o(`<h2 id="functions-1" tabindex="-1"><a class="header-anchor" href="#functions-1" aria-hidden="true">#</a> Functions</h2><h3 id="isignoringbatteryoptimizations" tabindex="-1"><a class="header-anchor" href="#isignoringbatteryoptimizations" aria-hidden="true">#</a> isIgnoringBatteryOptimizations</h3><p>\u25B8 <strong>isIgnoringBatteryOptimizations</strong>(<code>pkg<span class="token operator">?</span></code>): <code><span class="token property">any</span></code></p><p>Returns whether the application with the specify package name is enabled to ignore battery optimization.</p><p><strong><code><span class="token property">Example</span></code></strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> isIgnoringBatteryOptimizations <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;power_manager&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;isIgnoringBatteryOptimizations:&#39;</span><span class="token punctuation">,</span> <span class="token function">isIgnoringBatteryOptimizations</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Default value</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code><span class="token property">pkg</span></code></td><td style="text-align:left;"><code><span class="token property">string</span></code></td><td style="text-align:left;"><code><span class="token property">packageName</span></code></td><td style="text-align:left;">The package name of the application, default to the package name of this application.</td></tr></tbody></table><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns" aria-hidden="true">#</a> Returns</h4><p><code><span class="token property">any</span></code></p><p>Whether the application is enabled to ignore battery optimization.</p><hr><h3 id="isscreenon" tabindex="-1"><a class="header-anchor" href="#isscreenon" aria-hidden="true">#</a> isScreenOn</h3><p>\u25B8 <strong>isScreenOn</strong>(): <code><span class="token property">boolean</span></code></p><p>Returns true if the device is in an interactive state.</p><p>When this method returns true, the device is awake and ready to interact with the user (although this is not a guarantee that the user is actively interacting with the device just this moment). The main screen is usually turned on while in this state. Certain features, such as the proximity sensor, may temporarily turn off the screen while still leaving the device in an interactive state. Note in particular that the device is still considered to be interactive while dreaming (since dreams can be interactive) but not when it is dozing or asleep.</p><p>When this method returns false, the device is dozing or asleep and must be awoken before it will become ready to interact with the user again. The main screen is usually turned off while in this state. Certain features, such as &quot;ambient mode&quot; may cause the main screen to remain on (albeit in a low power state) to display system-provided content while the device dozes.</p><p><strong><code><span class="token property">Example</span></code></strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> isScreenOn <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;power_manager&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">isScreenOn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1" aria-hidden="true">#</a> Returns</h4><p><code><span class="token property">boolean</span></code></p><hr><h3 id="newwakelock" tabindex="-1"><a class="header-anchor" href="#newwakelock" aria-hidden="true">#</a> newWakeLock</h3>`,23),g=e("strong",null,"newWakeLock",-1),m=e("code",null,[e("span",{class:"token property"},"levelAndFlags")],-1),f=e("code",null,[e("span",{class:"token property"},"tag")],-1),y=e("code",null,[e("span",{class:"token property"},"WakeLock")],-1),_=e("p",null,"Creates a new wake lock with the specified level and flags.",-1),v=e("p",null,"The levelAndFlags parameter specifies a wake lock level and optional flags combined using the logical OR operator.",-1),b=e("p",null,"The wake lock levels are: PARTIAL_WAKE_LOCK, FULL_WAKE_LOCK, SCREEN_DIM_WAKE_LOCK and SCREEN_BRIGHT_WAKE_LOCK. Exactly one wake lock level must be specified as part of the levelAndFlags parameter.",-1),w=e("p",null,"The wake lock flags are: ACQUIRE_CAUSES_WAKEUP and ON_AFTER_RELEASE. Multiple flags can be combined as part of the levelAndFlags parameters.",-1),x=e("p",null,"Call acquire() on the object to acquire the wake lock, and release() when you are done.",-1),q=e("p",null,"Although a wake lock can be created without special permissions, the android.Manifest.permission.WAKE_LOCK permission is required to actually acquire or release the wake lock that is returned.",-1),O=e("p",null,"If using this to keep the screen on, you should strongly consider using android.view.WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON instead. This window flag will be correctly managed by the platform as the user moves between applications and doesn't require a special permission. Additionally using the flag will keep only the appropriate screen on in a multi-display scenario while using a wake lock will keep every screen powered on.",-1),z=e("p",null,[e("strong",null,[e("code",null,[e("span",{class:"token property"},"See")])])],-1),L={href:"https://developer.android.com/reference/android/os/PowerManager#newWakeLock(int,%20java.lang.String)",target:"_blank",rel:"noopener noreferrer"},E=o('<h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code><span class="token property">levelAndFlags</span></code></td><td style="text-align:left;"><code><span class="token property">number</span></code></td><td style="text-align:left;">Combination of wake lock level and flag values defining the requested behavior of the WakeLock.</td></tr><tr><td style="text-align:left;"><code><span class="token property">tag</span></code></td><td style="text-align:left;"><code><span class="token property">string</span></code></td><td style="text-align:left;">Your class name (or other tag) for debugging purposes.</td></tr></tbody></table><h4 id="returns-2" tabindex="-1"><a class="header-anchor" href="#returns-2" aria-hidden="true">#</a> Returns</h4>',3),W=e("code",null,[e("span",{class:"token property"},"WakeLock")],-1),I=o(`<hr><h3 id="requestignorebatteryoptimizations" tabindex="-1"><a class="header-anchor" href="#requestignorebatteryoptimizations" aria-hidden="true">#</a> requestIgnoreBatteryOptimizations</h3><p>\u25B8 <strong>requestIgnoreBatteryOptimizations</strong>(<code>forceRequest<span class="token operator">?</span></code>, <code>pkg<span class="token operator">?</span></code>): <code><span class="token keyword">void</span></code></p><p>Request user to ignore battery optimization of the application with the specify package name. System will pop up a dialog to ask user to confirm, this process is asynchronous, the result of the confirmation will not be returned.</p><p><strong><code><span class="token property">Example</span></code></strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> isIgnoringBatteryOptimizations<span class="token punctuation">,</span> requestIgnoreBatteryOptimizations <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;power_manager&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isIgnoringBatteryOptimizations</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;requestIgnoreBatteryOptimizations&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token function">requestIgnoreBatteryOptimizations</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Default value</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code><span class="token property">forceRequest</span></code></td><td style="text-align:left;"><code><span class="token property">boolean</span></code></td><td style="text-align:left;"><code><span class="token boolean">false</span></code></td><td style="text-align:left;">If false and the current application is enabled to ignore battery optimization, the request will not be executed; if true, the request will always be executed. The default is false.</td></tr><tr><td style="text-align:left;"><code><span class="token property">pkg</span></code></td><td style="text-align:left;"><code><span class="token property">string</span></code></td><td style="text-align:left;"><code><span class="token property">packageName</span></code></td><td style="text-align:left;">The package name of the application to ignore battery optimization. The default is the package name of this application.</td></tr></tbody></table><h4 id="returns-3" tabindex="-1"><a class="header-anchor" href="#returns-3" aria-hidden="true">#</a> Returns</h4><p><code><span class="token keyword">void</span></code></p><hr><h3 id="wakeup" tabindex="-1"><a class="header-anchor" href="#wakeup" aria-hidden="true">#</a> wakeUp</h3><p>\u25B8 <strong>wakeUp</strong>(<code>options<span class="token operator">?</span></code>): <code><span class="token keyword">void</span></code></p><p>Acquire a wakelock that wakes the screen for a certain amount of time.</p><p><strong><code><span class="token property">See</span></code></strong></p>`,15),A={href:"https://developer.android.com/reference/android/os/PowerManager#newWakeLock(int,%20java.lang.String)",target:"_blank",rel:"noopener noreferrer"},j=o(`<p><strong><code><span class="token property">Example</span></code></strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> isScreenOn<span class="token punctuation">,</span> wakeUp <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;power_manager&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isScreenOn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">wakeUp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="parameters-3" tabindex="-1"><a class="header-anchor" href="#parameters-3" aria-hidden="true">#</a> Parameters</h4>`,3),R=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),T=e("td",{style:{"text-align":"left"}},[e("code",null,[n("options"),e("span",{class:"token operator"},"?")])],-1),S={style:{"text-align":"left"}},B=e("code",null,[e("span",{class:"token property"},"WakeUpOptions")],-1),C=e("h4",{id:"returns-4",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-4","aria-hidden":"true"},"#"),n(" Returns")],-1),N=e("p",null,[e("code",null,[e("span",{class:"token keyword"},"void")])],-1);function P(U,K){const t=r("RouterLink"),i=r("ExternalLinkIcon");return l(),c("div",null,[e("p",null,[a(t,{to:"/en/v9/generated/"},{default:s(()=>[n("Auto.js Pro 9 Docs")]),_:1}),n(" / power_manager")]),u,e("ul",null,[e("li",null,[a(t,{to:"/en/v9/generated/interfaces/power_manager.WakeLock.html"},{default:s(()=>[n("WakeLock")]),_:1})]),e("li",null,[a(t,{to:"/en/v9/generated/interfaces/power_manager.WakeUpOptions.html"},{default:s(()=>[n("WakeUpOptions")]),_:1})])]),h,e("ul",null,[e("li",null,[a(t,{to:"/en/v9/generated/modules/power_manager.html#isignoringbatteryoptimizations"},{default:s(()=>[n("isIgnoringBatteryOptimizations")]),_:1})]),e("li",null,[a(t,{to:"/en/v9/generated/modules/power_manager.html#isscreenon"},{default:s(()=>[n("isScreenOn")]),_:1})]),e("li",null,[a(t,{to:"/en/v9/generated/modules/power_manager.html#newwakelock"},{default:s(()=>[n("newWakeLock")]),_:1})]),e("li",null,[a(t,{to:"/en/v9/generated/modules/power_manager.html#requestignorebatteryoptimizations"},{default:s(()=>[n("requestIgnoreBatteryOptimizations")]),_:1})]),e("li",null,[a(t,{to:"/en/v9/generated/modules/power_manager.html#wakeup"},{default:s(()=>[n("wakeUp")]),_:1})])]),k,e("p",null,[n("\u25B8 "),g,n("("),m,n(", "),f,n("): "),a(t,{to:"/en/v9/generated/interfaces/power_manager.WakeLock.html"},{default:s(()=>[y]),_:1})]),_,v,b,w,x,q,O,z,e("p",null,[e("a",L,[n("PowerManager.newWakeLock"),a(i)]),n("\u3002")]),E,e("p",null,[a(t,{to:"/en/v9/generated/interfaces/power_manager.WakeLock.html"},{default:s(()=>[W]),_:1})]),I,e("p",null,[e("a",A,[n("PowerManager.newWakeLock"),a(i)]),n("\u3002")]),j,e("table",null,[R,e("tbody",null,[e("tr",null,[T,e("td",S,[a(t,{to:"/en/v9/generated/interfaces/power_manager.WakeUpOptions.html"},{default:s(()=>[B]),_:1})])])])]),C,N])}const D=p(d,[["render",P],["__file","power_manager.html.vue"]]);export{D as default};
