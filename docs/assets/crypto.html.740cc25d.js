import{_ as o}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as e,c,a as n,b as s,d as p,e as a,r as l}from"./app.6aa2b576.js";const i={},u=n("h1",{id:"crypto-\u52A0\u89E3\u5BC6\u4E0E\u6D88\u606F\u6458\u8981",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#crypto-\u52A0\u89E3\u5BC6\u4E0E\u6D88\u606F\u6458\u8981","aria-hidden":"true"},"#"),s(" crypto - \u52A0\u89E3\u5BC6\u4E0E\u6D88\u606F\u6458\u8981")],-1),r={href:"https://pro.autojs.org/",target:"_blank",rel:"noopener noreferrer"},k=n("p",null,"$crypto\u6A21\u5757\u63D0\u4F9B\u4E86\u5BF9\u79F0\u52A0\u5BC6(\u4F8B\u5982AES)\u3001\u975E\u5BF9\u79F0\u52A0\u5BC6(\u4F8B\u5982RSA)\u3001\u6D88\u606F\u6458\u8981(\u4F8B\u5982MD5, SHA)\u7B49\u652F\u6301\u3002",-1),d=n("h2",{id:"crypto-digest-message-algorithm-options",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#crypto-digest-message-algorithm-options","aria-hidden":"true"},"#"),s(" $crypto.digest(message, algorithm[, options])")],-1),y=n("li",null,[n("code",null,[n("span",{class:"token property"},"data")]),s(" {any} \u9700\u8981\u8FDB\u884C\u6D88\u606F\u6458\u8981\u7684\u6D88\u606F")],-1),v=n("li",null,[n("code",null,[n("span",{class:"token property"},"key")]),s(" {"),n("a",{href:"#key"},"Key"),s("} \u89E3\u5BC6\u5BC6\u94A5")],-1),m=n("code",null,[n("span",{class:"token property"},"algorithm")],-1),g=a('<li><code><span class="token constant">MD5</span></code></li><li><code><span class="token constant">SHA</span><span class="token operator">-</span><span class="token number">1</span></code></li><li><code><span class="token constant">SHA</span><span class="token operator">-</span><span class="token number">224</span></code></li><li><code><span class="token constant">SHA</span><span class="token operator">-</span><span class="token number">256</span></code></li><li><code><span class="token constant">SHA</span><span class="token operator">-</span><span class="token number">384</span></code></li>',5),b=n("code",null,[n("span",{class:"token constant"},"SHA"),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"512")],-1),h={href:"https://developer.android.com/reference/java/security/MessageDigest",target:"_blank",rel:"noopener noreferrer"},E=n("li",null,[n("code",null,[n("span",{class:"token property"},"options")]),s(" {Object} \u53EF\u9009\u9879\uFF0C\u7528\u4E8E\u6307\u5B9A"),n("a",{href:"#%E8%BE%93%E5%85%A5%E4%B8%8E%E8%BE%93%E5%87%BA%E7%9A%84%E7%B1%BB%E5%9E%8B%E4%B8%8E%E6%A0%BC%E5%BC%8F"},"\u8F93\u5165\u4E0E\u8F93\u51FA\u7684\u7C7B\u578B\u4E0E\u683C\u5F0F")],-1),q=n("li",null,[s("\u8FD4\u56DE {any} \u6839\u636E"),n("code",null,[n("span",{class:"token property"},"options")]),s("\u6307\u5B9A\u7684\u8F93\u51FA\u7C7B\u578B\u8FD4\u56DE\u4E0D\u540C\u6570\u636E")],-1),f=a(`<p>\u5BF9\u6570\u636E<code><span class="token property">data</span></code>\u7528\u7B97\u6CD5<code><span class="token property">algorithm</span></code>\u8BA1\u7B97\u6D88\u606F\u6458\u8981\uFF0C\u6570\u636E<code><span class="token property">data</span></code>\u53EF\u4EE5\u662F\u6587\u4EF6\u3001\u4E8C\u8FDB\u5236\u3001base64\u3001hex\u3001\u5B57\u7B26\u4E32\u7B49\u6570\u636E\uFF0C\u89E3\u5BC6\u540E\u6570\u636E\u53EF\u4EE5\u8FD4\u56DE\u4E8C\u8FDB\u5236\u3001base64\u3001hex\u3001\u5B57\u7B26\u4E32\u6216\u8005\u76F4\u63A5\u5199\u5165\u5230\u6587\u4EF6\u4E2D\uFF0C\u5177\u4F53\u53C2\u89C1<a href="#%E8%BE%93%E5%85%A5%E4%B8%8E%E8%BE%93%E5%87%BA%E7%9A%84%E7%B1%BB%E5%9E%8B%E4%B8%8E%E6%A0%BC%E5%BC%8F">\u8F93\u5165\u4E0E\u8F93\u51FA\u7684\u7C7B\u578B\u4E0E\u683C\u5F0F</a>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u8BA1\u7B97\u5B57\u7B26\u4E32abc\u7684md5</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>$crypto<span class="token punctuation">.</span><span class="token function">digest</span><span class="token punctuation">(</span><span class="token string">&quot;abc&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;MD5&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u8BA1\u7B97\u5B57\u7B26\u4E32abc\u7684sha-256</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>$crypto<span class="token punctuation">.</span><span class="token function">digest</span><span class="token punctuation">(</span><span class="token string">&quot;abc&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;SHA-256&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>$crypto<span class="token punctuation">.</span><span class="token function">digest</span><span class="token punctuation">(</span><span class="token string">&quot;Auto.js&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;SHA-256&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">input</span><span class="token operator">:</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token string">&quot;hex&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u8BA1\u7B97\u6587\u4EF6/sdcard/1.txt\u7684md5</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>$crypto<span class="token punctuation">.</span><span class="token function">digest</span><span class="token punctuation">(</span><span class="token string">&quot;/sdcard/1.txt&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;MD5&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">input</span><span class="token operator">:</span> <span class="token string">&quot;file&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="crypto-encrypt-data-key-algorithm-options" tabindex="-1"><a class="header-anchor" href="#crypto-encrypt-data-key-algorithm-options" aria-hidden="true">#</a> $crypto.encrypt(data, key, algorithm[, options])</h2>`,3),B=a('<li><code><span class="token property">data</span></code> {any} \u660E\u6587\u6D88\u606F\uFF0C\u6839\u636E<code><span class="token property">options</span></code>\u6307\u5B9A\u7684\u8F93\u5165\u7C7B\u578B\u4E3A\u4E0D\u540C\u683C\u5F0F\u7684\u53C2\u6570</li><li><code><span class="token property">key</span></code> {<a href="#key">Key</a>} \u52A0\u5BC6\u5BC6\u94A5\u3002\u5BF9\u79F0\u52A0\u5BC6\u7B97\u6CD5\u4F7F\u7528\u5355\u4E2A\u5BC6\u94A5\uFF0C\u975E\u5BF9\u79F0\u52A0\u5BC6\u5219\u9700\u8981\u751F\u6210\u5BC6\u94A5\u5BF9\uFF0C\u53C2\u89C1<a href="#key">Key</a></li>',2),A=n("code",null,[n("span",{class:"token property"},"algorithm")],-1),S=a("<li>AES</li><li>AES/ECB/NoPadding</li><li>AES/ECB/PKCS5Padding</li><li>AES/CBC/NoPadding</li><li>AES/CBC/PKCS5Padding</li><li>AES/CFB/NoPadding</li><li>AES/CFB/PKCS5Padding</li><li>AES/CTR/NoPadding</li><li>AES/CTR/PKCS5Padding</li><li>AES/OFB/PKCS5Padding</li><li>AES/OFB/PKCS5Padding</li><li>RSA/ECB/PKCS1Padding</li><li>RSA/ECB/NoPadding</li>",13),K={href:"https://developer.android.com/reference/javax/crypto/Cipher",target:"_blank",rel:"noopener noreferrer"},P=n("li",null,[n("code",null,[n("span",{class:"token property"},"options")]),s(" {Object} \u53EF\u9009\u9879\uFF0C\u7528\u4E8E\u6307\u5B9A"),n("a",{href:"#%E8%BE%93%E5%85%A5%E4%B8%8E%E8%BE%93%E5%87%BA%E7%9A%84%E7%B1%BB%E5%9E%8B%E4%B8%8E%E6%A0%BC%E5%BC%8F"},"\u8F93\u5165\u4E0E\u8F93\u51FA\u7684\u7C7B\u578B\u4E0E\u683C\u5F0F")],-1),_=n("li",null,[s("\u8FD4\u56DE {any} \u6839\u636E"),n("code",null,[n("span",{class:"token property"},"options")]),s("\u6307\u5B9A\u7684\u8F93\u51FA\u7C7B\u578B\u8FD4\u56DE\u4E0D\u540C\u6570\u636E")],-1),x=a(`<p>\u4F7F\u7528\u5BC6\u94A5<code><span class="token property">key</span></code>\u5BF9\u6570\u636E<code><span class="token property">data</span></code>\u7528\u52A0\u5BC6\u7B97\u6CD5\u7B97\u6CD5<code><span class="token property">algorithm</span></code>\u8FDB\u884C\u52A0\u5BC6\uFF0C\u6570\u636E<code><span class="token property">data</span></code>\u53EF\u4EE5\u662F\u6587\u4EF6\u3001\u4E8C\u8FDB\u5236\u3001base64\u3001hex\u3001\u5B57\u7B26\u4E32\u7B49\u6570\u636E\uFF0C\u52A0\u5BC6\u540E\u6570\u636E\u53EF\u4EE5\u8FD4\u56DE\u4E8C\u8FDB\u5236\u3001base64\u3001hex\u3001\u5B57\u7B26\u4E32\u6216\u8005\u76F4\u63A5\u5199\u5165\u5230\u6587\u4EF6\u4E2D\uFF0C\u5177\u4F53\u53C2\u89C1<a href="#%E8%BE%93%E5%85%A5%E4%B8%8E%E8%BE%93%E5%87%BA%E7%9A%84%E7%B1%BB%E5%9E%8B%E4%B8%8E%E6%A0%BC%E5%BC%8F">\u8F93\u5165\u4E0E\u8F93\u51FA\u7684\u7C7B\u578B\u4E0E\u683C\u5F0F</a>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> message <span class="token operator">=</span> <span class="token string">&quot;Hello Autojs&quot;</span><span class="token punctuation">;</span>
<span class="token comment">// \u5BC6\u94A5\uFF0C\u7531\u4E8EAES\u7B49\u7B97\u6CD5\u8981\u6C42\u662F128/192/256 bits\uFF0C\u6211\u4EEC\u8FD9\u91CC\u957F\u5EA6\u4E3A16, \u5373128bits</span>
<span class="token keyword">let</span> str16 <span class="token operator">=</span> <span class="token string">&quot;a&quot;</span><span class="token punctuation">.</span><span class="token function">repeat</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> key <span class="token operator">=</span> <span class="token keyword">new</span> $crypto<span class="token punctuation">.</span><span class="token function">Key</span><span class="token punctuation">(</span>str16<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// AES</span>
<span class="token function">toastLog</span><span class="token punctuation">(</span>$crypto<span class="token punctuation">.</span><span class="token function">encrypt</span><span class="token punctuation">(</span>message<span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token string">&quot;AES&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [-18, 27, -69, 81, 2, -87, -116, 23, -114, -86, -111, 40, 58, -127, -29, -59]</span>
<span class="token comment">// AES\u8F93\u51FA\u7ED3\u679C\u7528base64\u5C55\u793A</span>
<span class="token function">toastLog</span><span class="token punctuation">(</span>
  $crypto<span class="token punctuation">.</span><span class="token function">encrypt</span><span class="token punctuation">(</span>message<span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token string">&quot;AES&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token string">&quot;base64&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 7hu7UQKpjBeOqpEoOoHjxQ==</span>
<span class="token comment">// AES\u9ED8\u8BA4\u660E\u6587\u586B\u5145\u6A21\u5F0FPKCS5Padding, \u7ED3\u679C\u540C\u4E0A</span>
<span class="token function">toastLog</span><span class="token punctuation">(</span>
  $crypto<span class="token punctuation">.</span><span class="token function">encrypt</span><span class="token punctuation">(</span>message<span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token string">&quot;AES/ECB/PKCS5Padding&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token string">&quot;base64&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 7hu7UQKpjBeOqpEoOoHjxQ==</span>

<span class="token comment">// AES\u52A0\u5BC6</span>
<span class="token keyword">let</span> cipherText <span class="token operator">=</span> $crypto<span class="token punctuation">.</span><span class="token function">encrypt</span><span class="token punctuation">(</span>message<span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token string">&quot;AES&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">toastLog</span><span class="token punctuation">(</span>cipherText<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [-18, 27, -69, 81, 2, -87, -116, 23, -114, -86, -111, 40, 58, -127, -29, -59]</span>

<span class="token comment">// RSA256KeyPair</span>
<span class="token keyword">let</span> algorithm <span class="token operator">=</span> <span class="token string">&quot;RSA&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> length <span class="token operator">=</span> <span class="token string">&quot;2048&quot;</span><span class="token punctuation">;</span>
<span class="token comment">// \u751F\u6210RSA\u5BC6\u94A5\u5BF9</span>
key <span class="token operator">=</span> $crypto<span class="token punctuation">.</span><span class="token function">generateKeyPair</span><span class="token punctuation">(</span>algorithm<span class="token punctuation">,</span> length<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> message <span class="token operator">=</span> <span class="token string">&quot;Hello Autojs&quot;</span><span class="token punctuation">;</span>
<span class="token comment">// RSA\u52A0\u5BC6</span>
cipherText <span class="token operator">=</span> $crypto<span class="token punctuation">.</span><span class="token function">encrypt</span><span class="token punctuation">(</span>message<span class="token punctuation">,</span> key<span class="token punctuation">.</span>publicKey<span class="token punctuation">,</span> <span class="token string">&quot;RSA/ECB/PKCS1Padding&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">toastLog</span><span class="token punctuation">(</span>cipherText<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [114, 99, -93, 6, -88, 8, -12, -53, -68, -15, ...]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="crypto-decrypt-data-key-algorithm-options" tabindex="-1"><a class="header-anchor" href="#crypto-decrypt-data-key-algorithm-options" aria-hidden="true">#</a> $crypto.decrypt(data, key, algorithm[, options])</h2>`,3),C=a('<li><code><span class="token property">data</span></code> {any} \u5BC6\u6587\u6D88\u606F<code><span class="token property">options</span></code>\u6307\u5B9A\u7684\u8F93\u5165\u7C7B\u578B\u4E3A\u4E0D\u540C\u683C\u5F0F\u7684\u53C2\u6570</li><li><code><span class="token property">key</span></code> {<a href="#key">Key</a>} \u89E3\u5BC6\u5BC6\u94A5\u3002\u5BF9\u79F0\u52A0\u5BC6\u7B97\u6CD5\u4F7F\u7528\u5355\u4E2A\u5BC6\u94A5\uFF0C\u975E\u5BF9\u79F0\u52A0\u5BC6\u5219\u9700\u8981\u751F\u6210\u5BC6\u94A5\u5BF9\uFF0C\u53C2\u89C1<a href="#key">Key</a></li>',2),w=n("code",null,[n("span",{class:"token property"},"algorithm")],-1),j=a("<li>AES</li><li>AES/ECB/NoPadding</li><li>AES/ECB/PKCS5Padding</li><li>AES/CBC/NoPadding</li><li>AES/CBC/PKCS5Padding</li><li>AES/CFB/NoPadding</li><li>AES/CFB/PKCS5Padding</li><li>AES/CTR/NoPadding</li><li>AES/CTR/PKCS5Padding</li><li>AES/OFB/PKCS5Padding</li><li>AES/OFB/PKCS5Padding</li><li>RSA/ECB/PKCS1Padding</li><li>RSA/ECB/NoPadding</li>",13),$={href:"https://developer.android.com/reference/javax/crypto/Cipher",target:"_blank",rel:"noopener noreferrer"},R=n("li",null,[n("code",null,[n("span",{class:"token property"},"options")]),s(" {Object} \u53EF\u9009\u9879\uFF0C\u7528\u4E8E\u6307\u5B9A"),n("a",{href:"#%E8%BE%93%E5%85%A5%E4%B8%8E%E8%BE%93%E5%87%BA%E7%9A%84%E7%B1%BB%E5%9E%8B%E4%B8%8E%E6%A0%BC%E5%BC%8F"},"\u8F93\u5165\u4E0E\u8F93\u51FA\u7684\u7C7B\u578B\u4E0E\u683C\u5F0F")],-1),T=n("li",null,[s("\u8FD4\u56DE {any} \u6839\u636E"),n("code",null,[n("span",{class:"token property"},"options")]),s("\u6307\u5B9A\u7684\u8F93\u51FA\u7C7B\u578B\u8FD4\u56DE\u4E0D\u540C\u6570\u636E")],-1),H=a(`<p>\u4F7F\u7528\u5BC6\u94A5<code><span class="token property">key</span></code>\u5BF9\u6570\u636E<code><span class="token property">data</span></code>\u7528\u89E3\u5BC6\u7B97\u6CD5\u7B97\u6CD5<code><span class="token property">algorithm</span></code>\u8FDB\u884C\u89E3\u5BC6\uFF0C\u6570\u636E<code><span class="token property">data</span></code>\u53EF\u4EE5\u662F\u6587\u4EF6\u3001\u4E8C\u8FDB\u5236\u3001base64\u3001hex\u3001\u5B57\u7B26\u4E32\u7B49\u6570\u636E\uFF0C\u89E3\u5BC6\u540E\u6570\u636E\u53EF\u4EE5\u8FD4\u56DE\u4E8C\u8FDB\u5236\u3001base64\u3001hex\u3001\u5B57\u7B26\u4E32\u6216\u8005\u76F4\u63A5\u5199\u5165\u5230\u6587\u4EF6\u4E2D\uFF0C\u5177\u4F53\u53C2\u89C1<a href="#%E8%BE%93%E5%85%A5%E4%B8%8E%E8%BE%93%E5%87%BA%E7%9A%84%E7%B1%BB%E5%9E%8B%E4%B8%8E%E6%A0%BC%E5%BC%8F">\u8F93\u5165\u4E0E\u8F93\u51FA\u7684\u7C7B\u578B\u4E0E\u683C\u5F0F</a>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// AES\u52A0\u5BC6\uFF0C\u52A0\u5BC6\u4E3Abase64\u6570\u636E</span>
<span class="token keyword">let</span> key <span class="token operator">=</span> <span class="token keyword">new</span> $crypto<span class="token punctuation">.</span><span class="token function">Key</span><span class="token punctuation">(</span><span class="token string">&quot;1234567890123456&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> cipherText <span class="token operator">=</span> $crypto<span class="token punctuation">.</span><span class="token function">encrypt</span><span class="token punctuation">(</span><span class="token string">&quot;Hello, Auto.js Pro!&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;AES&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">input</span><span class="token operator">:</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">,</span>
  <span class="token string-property property">&quot;output&quot;</span><span class="token operator">:</span> <span class="token string">&quot;base64&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// AES\u89E3\u5BC6\uFF0C\u5C06base64\u6570\u636E\u89E3\u5BC6\u4E3A\u5B57\u7B26\u4E32</span>
<span class="token keyword">let</span> plaintext <span class="token operator">=</span> $crypto<span class="token punctuation">.</span><span class="token function">decrypt</span><span class="token punctuation">(</span>cipherText<span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token string">&quot;AES&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token string-property property">&quot;input&quot;</span><span class="token operator">:</span> <span class="token string">&quot;base64&quot;</span><span class="token punctuation">,</span>
  <span class="token string-property property">&quot;output&quot;</span><span class="token operator">:</span> <span class="token string">&quot;string&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">toastLog</span><span class="token punctuation">(</span>plaintext<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="crypto-generatekeypair-algorithm-length" tabindex="-1"><a class="header-anchor" href="#crypto-generatekeypair-algorithm-length" aria-hidden="true">#</a> $crypto.generateKeyPair(algorithm[, length])</h2><ul><li><code><span class="token property">algorithm</span></code> {string} \u52A0\u5BC6\u7B97\u6CD5\uFF0C\u5305\u62EC <ul><li><code><span class="token constant">DH</span></code></li><li><code><span class="token constant">DSA</span></code></li><li><code><span class="token constant">EC</span></code></li><li><code><span class="token constant">RSA</span></code></li></ul></li><li><code><span class="token property">length</span></code> {number} \u5BC6\u94A5\u957F\u5EA6\u3002\u548C\u7B97\u6CD5\u76F8\u5173\uFF0C\u4F8B\u5982\u4EE5\u4F4D\u6570\u6307\u5B9A\u7684\u6A21\u6570\u957F\u5EA6\u3002\u9ED8\u8BA4\u4E3A256\u3002</li><li>\u8FD4\u56DE {<a href="#keypair">KeyPair</a>}</li></ul><p>\u751F\u6210\u4E00\u5BF9\u5BC6\u94A5\uFF0C\u5305\u62EC\u516C\u94A5\u548C\u79C1\u94A5\u3002\u4F8B\u5982\u5728RSA\u52A0\u5BC6\u7B97\u6CD5\u4E2D\uFF0C\u6211\u4EEC\u53EF\u4EE5\u7528\u79C1\u94A5\u52A0\u5BC6\uFF0C\u516C\u94A5\u89E3\u5BC6\u505A\u7B7E\u540D\uFF1B\u6216\u8005\u516C\u94A5\u52A0\u5BC6\uFF0C\u79C1\u94A5\u89E3\u5BC6\u505A\u6570\u636E\u52A0\u5BC6\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> keyPair <span class="token operator">=</span> $crypto<span class="token punctuation">.</span><span class="token function">generateKeyPair</span><span class="token punctuation">(</span><span class="token string">&quot;RSA&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\u516C\u94A5\u4E3A&quot;</span><span class="token punctuation">,</span> keyPair<span class="token punctuation">.</span>publicKey<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\u79C1\u94A5\u4E3A&quot;</span><span class="token punctuation">,</span> keyPair<span class="token punctuation">.</span>privateKey<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u516C\u94A5\u52A0\u5BC6\u3001\u79C1\u94A5\u89E3\u5BC6</span>
<span class="token keyword">let</span> plainText <span class="token operator">=</span> <span class="token string">&quot;Hello World&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> bytes <span class="token operator">=</span> $crypto<span class="token punctuation">.</span><span class="token function">encrypt</span><span class="token punctuation">(</span>plainText<span class="token punctuation">,</span> keyPair<span class="token punctuation">.</span>publicKey<span class="token punctuation">,</span> <span class="token string">&quot;RSA&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> decryptedText <span class="token operator">=</span> $crypto<span class="token punctuation">.</span><span class="token function">decrypt</span><span class="token punctuation">(</span>bytes<span class="token punctuation">,</span> keyPair<span class="token punctuation">.</span>privateKey<span class="token punctuation">,</span> <span class="token string">&quot;RSA&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token string">&quot;string&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>decryptedText<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u516C\u94A5\u89E3\u5BC6\u3001\u79C1\u94A5\u52A0\u5BC6</span>
<span class="token keyword">let</span> base64 <span class="token operator">=</span> $crypto<span class="token punctuation">.</span><span class="token function">encrypt</span><span class="token punctuation">(</span>plainText<span class="token punctuation">,</span> keyPair<span class="token punctuation">.</span>privateKey<span class="token punctuation">,</span> <span class="token string">&quot;RSA&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token string">&quot;base64&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
decryptedText <span class="token operator">=</span> $crypto<span class="token punctuation">.</span><span class="token function">decrypt</span><span class="token punctuation">(</span>base64<span class="token punctuation">,</span> keyPair<span class="token punctuation">.</span>publicKey<span class="token punctuation">,</span> <span class="token string">&quot;RSA&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">input</span><span class="token operator">:</span> <span class="token string">&quot;base64&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token string">&quot;string&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>decryptedText<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="key" tabindex="-1"><a class="header-anchor" href="#key" aria-hidden="true">#</a> Key</h1><p>\u5BC6\u94A5\u5BF9\u8C61\u3002\u53EF\u4EE5\u76F4\u63A5\u901A\u8FC7\u6784\u9020\u51FD\u6570\u6784\u9020\u3002\u6BD4\u5982<code><span class="token keyword">new</span> <span class="token class-name">Key</span><span class="token punctuation">(</span><span class="token string">&#39;12345678&#39;</span><span class="token punctuation">)</span></code>\u3002</p><h2 id="new-key-data-options" tabindex="-1"><a class="header-anchor" href="#new-key-data-options" aria-hidden="true">#</a> new Key(data[, options])</h2><ul><li><code><span class="token property">data</span></code> {any} \u5BC6\u94A5\u7684\u5185\u5BB9\uFF0C\u6839\u636E<code><span class="token property">options</span></code>\u9009\u9879\u7684\u8F93\u5165\u683C\u5F0F\u800C\u5B9A\uFF0C\u9ED8\u8BA4\u4E3A\u5B57\u7B26\u4E32\u683C\u5F0F</li><li><code><span class="token property">options</span></code> {Object} \u53EF\u9009\u53C2\u6570\uFF0C\u53C2\u89C1<a href="#%E8%BE%93%E5%85%A5%E4%B8%8E%E8%BE%93%E5%87%BA%E7%9A%84%E7%B1%BB%E5%9E%8B%E4%B8%8E%E6%A0%BC%E5%BC%8F">\u8F93\u5165\u4E0E\u8F93\u51FA\u7684\u7C7B\u578B\u4E0E\u683C\u5F0F</a></li></ul><p>\u6784\u9020\u51FD\u6570\uFF0C\u6784\u9020\u4E00\u4E2AKey\u5BF9\u8C61\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> key <span class="token operator">=</span> <span class="token keyword">new</span> $crypto<span class="token punctuation">.</span><span class="token function">Key</span><span class="token punctuation">(</span><span class="token string">&#39;1234567890123456&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u83B7\u53D6Key\u7684\u4E8C\u8FDB\u5236\u6570\u636E</span>
<span class="token keyword">let</span> data <span class="token operator">=</span> key<span class="token punctuation">.</span>data<span class="token punctuation">;</span>
<span class="token comment">// \u8F6C\u6362\u4E3Abase64</span>
<span class="token keyword">let</span> base64 <span class="token operator">=</span> android<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Base64<span class="token punctuation">.</span><span class="token function">encodeToString</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> android<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Base64<span class="token punctuation">.</span><span class="token constant">NO_WRAP</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u4ECEbase64\u91CD\u65B0\u6784\u9020\u4E00\u4E2AKey</span>
<span class="token keyword">let</span> copiedKey <span class="token operator">=</span> <span class="token keyword">new</span> $crypto<span class="token punctuation">.</span><span class="token function">Key</span><span class="token punctuation">(</span>base64<span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">input</span><span class="token operator">:</span> <span class="token string">&quot;base64&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>copiedKey<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="key-data" tabindex="-1"><a class="header-anchor" href="#key-data" aria-hidden="true">#</a> Key.data</h2><ul><li>{byte[]}</li></ul><p>Key\u7684\u4E8C\u8FDB\u5236\u6570\u636E\u3002</p><h1 id="keypair" tabindex="-1"><a class="header-anchor" href="#keypair" aria-hidden="true">#</a> KeyPair</h1><p>\u5BC6\u94A5\u5BF9\u5BF9\u8C61\u3002\u53EF\u4EE5\u901A\u8FC7<code>$crypto<span class="token punctuation">.</span><span class="token function">generateKeyPair</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code>\u51FD\u6570\u751F\u6210\uFF0C\u4E5F\u53EF\u4EE5\u901A\u8FC7\u6784\u9020\u51FD\u6570\u6784\u9020\u3002</p><h2 id="new-keypair-publickey-privatekey-options" tabindex="-1"><a class="header-anchor" href="#new-keypair-publickey-privatekey-options" aria-hidden="true">#</a> new KeyPair(publicKey, privateKey[, options])</h2><p><strong>[Pro 8.7.2\u65B0\u589E]</strong></p><ul><li><code><span class="token property">publicKey</span></code> {any} \u516C\u94A5\u7684\u6570\u636E\uFF0C\u6839\u636E<code><span class="token property">options</span></code>\u9009\u9879\u7684\u8F93\u5165\u683C\u5F0F\u800C\u5B9A\uFF0C\u9ED8\u8BA4\u4E3A\u5B57\u7B26\u4E32\u683C\u5F0F</li><li><code><span class="token property">privateKey</span></code> {any} \u79C1\u94A5\u7684\u6570\u636E\uFF0C\u6839\u636E<code><span class="token property">options</span></code>\u9009\u9879\u7684\u8F93\u5165\u683C\u5F0F\u800C\u5B9A\uFF0C\u9ED8\u8BA4\u4E3A\u5B57\u7B26\u4E32\u683C\u5F0F</li><li><code><span class="token property">options</span></code> {Object} \u53EF\u9009\u53C2\u6570\uFF0C\u53C2\u89C1<a href="#%E8%BE%93%E5%85%A5%E4%B8%8E%E8%BE%93%E5%87%BA%E7%9A%84%E7%B1%BB%E5%9E%8B%E4%B8%8E%E6%A0%BC%E5%BC%8F">\u8F93\u5165\u4E0E\u8F93\u51FA\u7684\u7C7B\u578B\u4E0E\u683C\u5F0F</a></li></ul><p>\u6784\u9020\u51FD\u6570\uFF0C\u6784\u9020\u4E00\u4E2AKeyPair\u5BF9\u8C61\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> keyPair <span class="token operator">=</span> $crypto<span class="token punctuation">.</span><span class="token function">generateKeyPair</span><span class="token punctuation">(</span><span class="token string">&quot;RSA&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u83B7\u53D6\u516C\u94A5\u79C1\u94A5\u7684\u4E8C\u8FDB\u5236\u6570\u636E\uFF0C\u5E76\u8F6C\u4E3Abase64</span>
<span class="token keyword">let</span> data <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">publicKey</span><span class="token operator">:</span> <span class="token function">base64Bytes</span><span class="token punctuation">(</span>keyPair<span class="token punctuation">.</span>publicKey<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token literal-property property">privateKey</span><span class="token operator">:</span> <span class="token function">base64Bytes</span><span class="token punctuation">(</span>keyPair<span class="token punctuation">.</span>privateKey<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// \u4ECEbase64\u91CD\u65B0\u6784\u9020\u4E00\u4E2AKey</span>
<span class="token keyword">let</span> copiedKeyPair <span class="token operator">=</span> <span class="token keyword">new</span> $crypto<span class="token punctuation">.</span><span class="token function">KeyPair</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>publicKey<span class="token punctuation">,</span> data<span class="token punctuation">.</span>privateKey<span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">input</span><span class="token operator">:</span> <span class="token string">&quot;base64&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>copiedKeyPair<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">base64Bytes</span><span class="token punctuation">(</span><span class="token parameter">bytes</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> android<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Base64<span class="token punctuation">.</span><span class="token function">encodeToString</span><span class="token punctuation">(</span>bytes<span class="token punctuation">,</span> android<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Base64<span class="token punctuation">.</span><span class="token constant">NO_WRAP</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="keypair-privatekey" tabindex="-1"><a class="header-anchor" href="#keypair-privatekey" aria-hidden="true">#</a> KeyPair.privateKey</h2><ul><li>{<a href="#key">Key</a>}</li></ul><p>\u79C1\u94A5\u3002</p><h2 id="keypair-publickey" tabindex="-1"><a class="header-anchor" href="#keypair-publickey" aria-hidden="true">#</a> KeyPair.publicKey</h2><ul><li>{<a href="#key">Key</a>}</li></ul><p>\u516C\u94A5\u3002</p><h1 id="\u8F93\u5165\u4E0E\u8F93\u51FA\u7684\u7C7B\u578B\u4E0E\u683C\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u8F93\u5165\u4E0E\u8F93\u51FA\u7684\u7C7B\u578B\u4E0E\u683C\u5F0F" aria-hidden="true">#</a> \u8F93\u5165\u4E0E\u8F93\u51FA\u7684\u7C7B\u578B\u4E0E\u683C\u5F0F</h1><p><code><span class="token property">options</span></code> {object} \u7528\u4E8E\u6307\u5B9A\u52A0\u89E3\u5BC6\u3001\u6D88\u606F\u6458\u8981\u65F6\u8F93\u5165\u548C\u8F93\u51FA\u7684\u7C7B\u578B\u4E0E\u683C\u5F0F\u3002</p><ul><li><p><code><span class="token property">input</span></code> {string} \u8F93\u5165\u7C7B\u578B\uFF0C\u7528\u4E8E\u6307\u5B9A\u52A0\u5BC6\u3001\u89E3\u5BC6\u3001\u6458\u8981\u7684\u6E90\u6570\u636E\u7684\u7C7B\u578B\u3002\u5982\u679C\u8F93\u5165\u4E3A\u5B57\u7B26\u4E32\uFF0C\u5219\u9ED8\u8BA4\u4E3A<code><span class="token property">string</span></code>\uFF1B\u5426\u5219\u9ED8\u8BA4\u4E3A<code><span class="token property">bytes</span></code>\u3002\u53EF\u9009\u7684\u503C\u5305\u62EC\uFF1A</p><ul><li><code><span class="token property">string</span></code> \u5B57\u7B26\u4E32\u683C\u5F0F\u7684\u6570\u636E</li><li><code><span class="token property">base64</span></code> base64\u683C\u5F0F\u7684\u6570\u636E</li><li><code><span class="token property">hex</span></code> base16\u683C\u5F0F\u7684\u6570\u636E</li><li><code><span class="token property">bytes</span></code> Java\u4E8C\u8FDB\u5236\u5B57\u8282\u6570\u7EC4</li><li><code><span class="token property">file</span></code> \u6587\u4EF6\u7C7B\u578B\uFF0C\u5C06\u4ECE\u6587\u4EF6\u8BFB\u53D6\u6570\u636E\u8FDB\u884C\u52A0\u89E3\u5BC6</li></ul></li><li><p><code><span class="token property">output</span></code> {string} \u8F93\u51FA\u7C7B\u578B\uFF0C\u7528\u4E8E\u6307\u5B9A\u52A0\u5BC6\u3001\u89E3\u5BC6\u3001\u6458\u8981\u540E\u7684\u6570\u636E\u7684\u7C7B\u578B\u3002\u5BF9\u4E8E\u52A0\u89E3\u5BC6\uFF0C\u9ED8\u8BA4\u4E3A<code><span class="token property">bytes</span></code>\uFF1B\u5BF9\u4E8E\u6D88\u606F\u6458\u8981\uFF0C\u9ED8\u8BA4\u4E3A<code><span class="token property">hex</span></code>\u3002\u53EF\u9009\u7684\u503C\u5305\u62EC\uFF1A</p><ul><li><code><span class="token property">string</span></code> \u5B57\u7B26\u4E32\u683C\u5F0F\u7684\u6570\u636E</li><li><code><span class="token property">base64</span></code> base64\u683C\u5F0F\u7684\u6570\u636E</li><li><code><span class="token property">hex</span></code> base16\u683C\u5F0F\u7684\u6570\u636E</li><li><code><span class="token property">bytes</span></code> Java\u4E8C\u8FDB\u5236\u5B57\u8282\u6570\u7EC4</li><li><code><span class="token property">file</span></code> \u6587\u4EF6\u7C7B\u578B\uFF0C\u5C06\u5904\u7406\u540E\u7684\u6570\u636E\u5199\u5165\u5230\u6587\u4EF6\u4E2D\uFF0C\u5FC5\u987B\u540C\u65F6\u5236\u5B9A<code><span class="token property">dest</span></code>\u53C2\u6570</li></ul></li><li><p><code><span class="token property">dest</span></code> {string} \u8F93\u51FA\u6587\u4EF6\u8DEF\u5F84\uFF0C<code><span class="token property">output</span></code>\u7C7B\u578B\u4E3A<code><span class="token property">file</span></code>\u65F6\uFF0C\u7528\u4E8E\u6307\u5B9A\u52A0\u5BC6\u3001\u89E3\u5BC6\u3001\u6458\u8981\u540E\u8F93\u51FA\u6587\u4EF6\u7684\u8DEF\u5F84</p></li><li><p><code><span class="token property">encoding</span></code> {string} \u7F16\u7801\u683C\u5F0F\uFF0C<code><span class="token property">input</span></code>\u7C7B\u578B\u4E3A<code><span class="token property">string</span></code>\u65F6\uFF0C\u7528\u4E8E\u6307\u5B9A\u8F93\u5165\u5B57\u7B26\u4E32\u8F6C\u4E3A\u4E8C\u8FDB\u5236\u6570\u636E\u6240\u4F7F\u7528\u7684\u5B57\u7B26\u7F16\u7801\uFF1B<code><span class="token property">output</span></code>\u7C7B\u578B\u4E3A<code><span class="token property">string</span></code>\u65F6\uFF0C\u7528\u4E8E\u6307\u5B9A\u8F93\u51FA\u6570\u636E\u8F6C\u4E3A\u5B57\u7B26\u4E32\u6570\u636E\u6240\u4F7F\u7528\u7684\u5B57\u7B26\u7F16\u7801\u3002\u9ED8\u8BA4\u4E3A<code>utf<span class="token operator">-</span><span class="token number">8</span></code></p></li><li><p><code><span class="token property">iv</span></code> {string} | {bytes} \u6307\u5B9AAES\u7B49\u52A0\u5BC6\u7684\u521D\u59CB\u5316\u5411\u91CF\u53C2\u6570\uFF0C\u53EF\u9009\u3002Pro 9.2.12\u7248\u672C\u65B0\u589E\u3002</p></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> filepath <span class="token operator">=</span> files<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot;./test.txt&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;1.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> message <span class="token operator">=</span> <span class="token string">&quot;Hello Autojs&quot;</span><span class="token punctuation">;</span>
$files<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>filepath<span class="token punctuation">,</span> message<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> str16 <span class="token operator">=</span> <span class="token string">&quot;a&quot;</span><span class="token punctuation">.</span><span class="token function">repeat</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> key <span class="token operator">=</span> <span class="token keyword">new</span> $crypto<span class="token punctuation">.</span><span class="token function">Key</span><span class="token punctuation">(</span>str16<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u521B\u5EFA\u52A0\u5BC6\u524D\u7684base64\u5185\u5BB9</span>
<span class="token keyword">let</span> base64Content <span class="token operator">=</span> $base64<span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u52A0\u5BC6\u524D\u7684hex\u5185\u5BB9</span>
<span class="token keyword">let</span> hexContent <span class="token operator">=</span> <span class="token string">&quot;48656c6c6f204175746f6a73&quot;</span><span class="token punctuation">;</span>

<span class="token comment">// \u52A0\u5BC6\u6587\u4EF6\uFF0C\u8F93\u51FA\u683C\u5F0F\u4E3A\u4E8C\u8FDB\u5236</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>$crypto<span class="token punctuation">.</span><span class="token function">encrypt</span><span class="token punctuation">(</span>filepath<span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token string">&quot;AES&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">input</span><span class="token operator">:</span> <span class="token string">&quot;file&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token string">&quot;base64&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u52A0\u5BC6\u6587\u4EF6\uFF0C\u8F93\u51FA\u5230\u53E6\u4E00\u4E2A\u6587\u4EF6</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>$crypto<span class="token punctuation">.</span><span class="token function">encrypt</span><span class="token punctuation">(</span>filepath<span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token string">&quot;AES&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">input</span><span class="token operator">:</span> <span class="token string">&quot;file&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token string">&quot;file&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">dest</span><span class="token operator">:</span> <span class="token string">&quot;./output.txt&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u52A0\u5BC6base64\u5185\u5BB9\uFF0C\u8F93\u51FA\u683C\u5F0F\u4E3Abase64</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>$crypto<span class="token punctuation">.</span><span class="token function">encrypt</span><span class="token punctuation">(</span><span class="token string">&quot;SGVsbG8gQXV0b2pz&quot;</span><span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token string">&quot;AES&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">input</span><span class="token operator">:</span> <span class="token string">&quot;base64&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token string">&quot;base64&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u52A0\u5BC6hex\u5185\u5BB9\uFF0C\u8F93\u51FA\u683C\u5F0F\u4E3Ahex</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>$crypto<span class="token punctuation">.</span><span class="token function">encrypt</span><span class="token punctuation">(</span><span class="token string">&quot;48656c6c6f204175746f6a73&quot;</span><span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token string">&quot;AES&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">input</span><span class="token operator">:</span> <span class="token string">&quot;hex&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token string">&quot;hex&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>$crypto<span class="token punctuation">.</span><span class="token function">encrypt</span><span class="token punctuation">(</span><span class="token string">&quot;Hello Autojs&quot;</span><span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token string">&quot;AES&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// [-18, 27, -69, 81, 2, -87, -116, 23, -114, -86, -111, 40, 58, -127, -29, -59]</span>

<span class="token comment">// \u8BA1\u7B97\u6587\u4EF6MD5\uFF0C\u8F93\u51FA\u4E3Ahex</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>$crypto<span class="token punctuation">.</span><span class="token function">digest</span><span class="token punctuation">(</span>filepath<span class="token punctuation">,</span> <span class="token string">&quot;MD5&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">input</span><span class="token operator">:</span> <span class="token string">&quot;file&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token string">&quot;hex&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,32);function F(N,O){const t=l("ExternalLinkIcon");return e(),c("div",null,[u,n("p",null,[n("strong",null,[s("["),n("a",r,[s("Pro 8.0.0\u65B0\u589E"),p(t)]),s("]")])]),k,d,n("ul",null,[y,v,n("li",null,[m,s(" {string} \u6D88\u606F\u6458\u8981\u7B97\u6CD5\uFF0C\u5305\u62EC\uFF1A "),n("ul",null,[g,n("li",null,[b,s(" \u5177\u4F53\u53EF\u53C2\u9605 "),n("a",h,[s("MessageDigest"),p(t)])])])]),E,q]),f,n("ul",null,[B,n("li",null,[A,s(" {string} \u52A0\u5BC6\u7B97\u6CD5\uFF0C\u5305\u62EC\uFF1A "),n("ul",null,[S,n("li",null,[s("... \u5177\u4F53\u53EF\u53C2\u9605 "),n("a",K,[s("javax.crypto.Cipher"),p(t)])])])]),P,_]),x,n("ul",null,[C,n("li",null,[w,s(" {string} \u52A0\u5BC6\u7B97\u6CD5\uFF0C\u5305\u62EC\uFF1A "),n("ul",null,[j,n("li",null,[s("... \u5177\u4F53\u53EF\u53C2\u9605 "),n("a",$,[s("javax.crypto.Cipher"),p(t)])])])]),R,T]),H])}const M=o(i,[["render",F],["__file","crypto.html.vue"]]);export{M as default};
