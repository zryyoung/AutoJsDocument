import{_ as n}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as s,c as a,e}from"./app.6aa2b576.js";const t={},o=e(`<h1 id="touch-simulation" tabindex="-1"><a class="header-anchor" href="#touch-simulation" aria-hidden="true">#</a> Touch simulation</h1><blockquote><p>Stability: 2 - Stable</p></blockquote><p>This section describes some functions that use coordinates for tapping and swiping. Some of these functions require Android 7.0 or higher, and some require root access.</p><p>To get the coordinates of the position to be clicked, you can turn on &quot;Pointer position&quot; in the developer options.</p><p>Coordinate-based scripts usually have resolution issues, so you can use the <code><span class="token function">setScreenMetrics</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code> function to do automatic coordinate scaling. This function affects all click, long press, swipe, etc. functions in this section. By setting the resolution at which the script was designed, it makes the script automatically deflate coordinates at other resolutions.</p><p>Controls and coordinates can also be combined with each other. Some controls are not clickable (clickable is false), and cannot be clicked by the <code><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code> function. In this case, if the Android version is above 7.0 or has root access, it can be clicked by</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//Get this control</span>
<span class="token keyword">var</span> widget <span class="token operator">=</span> <span class="token function">id</span><span class="token punctuation">(</span><span class="token string">&quot;xxx&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">findOne</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//get its center position and click on it</span>
<span class="token function">click</span><span class="token punctuation">(</span>widget<span class="token punctuation">.</span><span class="token function">bounds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">centerX</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> widget<span class="token punctuation">.</span><span class="token function">bounds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">centerY</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// use Tap if using root privileges</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="setscreenmetrics-width-height" tabindex="-1"><a class="header-anchor" href="#setscreenmetrics-width-height" aria-hidden="true">#</a> setScreenMetrics(width, height)</h2><ul><li>width {number} the width of the screen, in pixels</li><li>height {number} the height of the screen in pixels</li></ul><p>Set the screen width and height that the script coordinate click fits into. If the screen width is not the same when the script is running it will automatically deflate the coordinates.</p><p>For example, in a 1920*1080 device, the code for a certain operation would be</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">setScreenMetrics</span><span class="token punctuation">(</span><span class="token number">1080</span><span class="token punctuation">,</span> <span class="token number">1920</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">click</span><span class="token punctuation">(</span><span class="token number">800</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">longClick</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Then on other devices AutoJs will automatically deflate the coordinates so that the script still works. For example, on a 540 * 960 screen <code><span class="token function">click</span><span class="token punctuation">(</span><span class="token number">800</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span></code> will actually click on the position (400, 100).</p><h1 id="touch-and-gesture-simulation-for-android-7-0" tabindex="-1"><a class="header-anchor" href="#touch-and-gesture-simulation-for-android-7-0" aria-hidden="true">#</a> Touch and gesture simulation for Android 7.0+</h1><blockquote><p>Stability: 2 - Stable</p></blockquote><p><strong>Note that the following commands are only valid for Android 7.0 and above</strong></p><h2 id="click-x-y" tabindex="-1"><a class="header-anchor" href="#click-x-y" aria-hidden="true">#</a> click(x, y)</h2><ul><li><code><span class="token property">x</span></code> {number} the x value of the coordinate to be clicked</li><li><code><span class="token property">y</span></code> {number} the y value of the coordinate to be clicked</li></ul><p>Simulates a click on the coordinates (x, y) and returns whether the click was successful. The script continues to execute only after the click execution is complete.</p><p>In general, a click will only fail if it is interrupted by another event (e.g., the user clicking on his own) during the click (about 150 milliseconds).</p><p>Using this function to simulate continuous clicks may have the problem of slow clicks, in which case the <code><span class="token function">press</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code> function can be used instead.</p><h2 id="longclick-x-y" tabindex="-1"><a class="header-anchor" href="#longclick-x-y" aria-hidden="true">#</a> longClick(x, y)</h2><ul><li><code><span class="token property">x</span></code> {number} the x value of the coordinate to be long clicked</li><li><code><span class="token property">y</span></code> {number} the y value of the coordinate to be long pressed</li></ul><p>Simulates a long click on the coordinate (x, y), and returns whether it was successful. The script will continue only when the long press is completed (about 600 ms).</p><p>In general, a long press will only fail if it is interrupted by another event during the long press (e.g., the user clicking on itself).</p><h2 id="press-x-y-duration" tabindex="-1"><a class="header-anchor" href="#press-x-y-duration" aria-hidden="true">#</a> press(x, y, duration)</h2><ul><li><code><span class="token property">x</span></code> {number} the x value of the coordinate to be pressed</li><li><code><span class="token property">y</span></code> {number} the y value of the coordinate to be pressed</li><li><code><span class="token property">duration</span></code> {number} the duration of the hold, in milliseconds</li></ul><p>Simulates holding the coordinate (x, y), and returns whether it succeeds. The script will continue only when the hold operation is completed.</p><p>If the hold time is too short, it will be considered as a click; if it is longer than 500 milliseconds, it will be considered as a long press.</p><p>In general, the operation will only fail if the press-and-hold process is interrupted by another event.</p><p>An example of a serial punter is as follows.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//loop 100 times</span>
<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">100</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token comment">//click position(500, 1000), each time takes 1 millisecond</span>
  <span class="token function">press</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="swipe-x1-y1-x2-y2-duration" tabindex="-1"><a class="header-anchor" href="#swipe-x1-y1-x2-y2-duration" aria-hidden="true">#</a> swipe(x1, y1, x2, y2, duration)</h2><ul><li><code><span class="token property">x1</span></code> {number} the x value of the starting coordinate of the swipe</li><li><code><span class="token property">y1</span></code> {number} the y value of the starting coordinate of the swipe</li><li><code><span class="token property">x2</span></code> {number} the x value of the end of the slide</li><li><code><span class="token property">y2</span></code> {number} the y value of the end of the slide</li><li><code><span class="token property">duration</span></code> {number} the duration of the slide, in milliseconds</li></ul><p>Simulates sliding from coordinate (x1, y1) to coordinate (x2, y2) and returns whether it was successful. The script will continue only when the sliding operation is completed.</p><p>In general, sliding will only fail if it is interrupted by another event in the middle of the sliding process.</p><h2 id="gesture-duration-x1-y1-x2-y2" tabindex="-1"><a class="header-anchor" href="#gesture-duration-x1-y1-x2-y2" aria-hidden="true">#</a> gesture(duration, [x1, y1], [x2, y2], ...)</h2><ul><li><code><span class="token property">duration</span></code> {number} the duration of the gesture</li><li>[x, y] ... A series of coordinates for the gesture swipe path</li></ul><p>Simulates a gesture operation. For example, <code><span class="token function">gesture</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">500</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">500</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">]</span><span class="token punctuation">)</span></code> simulates a gesture from (0, 0) to (500, 500) to (500, 100) with a duration of 2 seconds.</p><h2 id="gestures-delay1-duration1-x1-y1-x2-y2-delay2-duration2-x3-y3-x4-y4" tabindex="-1"><a class="header-anchor" href="#gestures-delay1-duration1-x1-y1-x2-y2-delay2-duration2-x3-y3-x4-y4" aria-hidden="true">#</a> gestures([delay1, duration1, [x1, y1], [x2, y2], ...] , [delay2, duration2, [x3, y3], [x4, y4], ...] , ...)</h2><p>Simulate multiple gestures simultaneously. The parameters of each gesture are [delay, duration, coordinates], delay is the delay in milliseconds before the gesture is executed; duration is the duration of the gesture; coordinates are the coordinates of the point through which the gesture passes. The delay parameter can be omitted and is 0 by default.</p><p>For example, finger pinch.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">gestures</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">800</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">500</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
         <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">300</span><span class="token punctuation">,</span> <span class="token number">1500</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">500</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="rootautomator" tabindex="-1"><a class="header-anchor" href="#rootautomator" aria-hidden="true">#</a> RootAutomator</h1><blockquote><p>Stability: 2 - Stable</p></blockquote><p>RootAutomator is an object that uses root privileges to simulate touch, with which touch and multi-touch can be done without delay in the execution of these actions.</p><p>It is best to have only one RootAutomator in a script, and make sure to exit it at the end of the script. You can exit the RootAutomator in the exit event, for example.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> ra <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RootAutomator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
events<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;exit&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  ra<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Perform some click operations</span>
<span class="token operator">...</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Note that the following commands require root privileges</strong></p><h2 id="rootautomator-tap-x-y-id" tabindex="-1"><a class="header-anchor" href="#rootautomator-tap-x-y-id" aria-hidden="true">#</a> RootAutomator.tap(x, y[, id])</h2><ul><li>\`\`x\` {number} horizontal coordinate</li><li><code><span class="token property">y</span></code> {number} vertical coordinate</li><li><code><span class="token property">id</span></code> {number} multi-tap id, optional, default is 1, can be specified by setDefaultId.</li></ul><p>Click position (x, y). Where id is an integer value, used to distinguish multi-touch, different id means different &quot;fingers&quot;, for example.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> ra <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RootAutomator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// let &quot;finger1&quot; tap position (100, 100)</span>
ra<span class="token punctuation">.</span><span class="token function">tap</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//make &quot;finger 2&quot; tap position (200, 200);</span>
ra<span class="token punctuation">.</span><span class="token function">tap</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
ra<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>If multi-touch is not required, the id parameter is not needed. Multi-tap is usually used for gestures or game operations, such as simulating two-finger pinch, two-finger swipe up, etc.</p><p>In some cases there may be tap clicks that are unresponsive, in which case the <code>RootAutomator<span class="token punctuation">.</span><span class="token function">press</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code> function can be used instead.</p><h2 id="rootautomator-swipe-x1-x2-y1-y2-duration-id" tabindex="-1"><a class="header-anchor" href="#rootautomator-swipe-x1-x2-y1-y2-duration-id" aria-hidden="true">#</a> RootAutomator.swipe(x1, x2, y1, y2[, duration, id])</h2><ul><li><code><span class="token property">x1</span></code> {number} horizontal coordinate of the start of the slide</li><li><code><span class="token property">y1</span></code> {number} the vertical coordinate of the starting point of the slide</li><li><code><span class="token property">x2</span></code> {number} the horizontal coordinate of the end of the slide</li><li><code><span class="token property">y2</span></code> {number} the longitudinal coordinate of the slide end point</li><li><code><span class="token property">duration</span></code> {number} the duration of the slide, in milliseconds, default is 300</li><li><code><span class="token property">id</span></code> {number} the multi-touch id, optional, default is 1</li></ul><p>Simulate a slide from (x1, y1) to (x2, y2) with duration milliseconds.</p><h2 id="rootautomator-press-x-y-duration-id" tabindex="-1"><a class="header-anchor" href="#rootautomator-press-x-y-duration-id" aria-hidden="true">#</a> RootAutomator.press(x, y, duration[, id])</h2><ul><li><code><span class="token property">x</span></code> {number} horizontal coordinate</li><li><code><span class="token property">y</span></code> {number} the vertical coordinate</li><li><code><span class="token property">duration</span></code> {number} the duration of the press</li><li><code><span class="token property">id</span></code> {number} multi-touch id, optional, default is 1</li></ul><p>Simulate the press position (x, y), the duration is milliseconds.</p><h2 id="rootautomator-longpress-x-y-id" tabindex="-1"><a class="header-anchor" href="#rootautomator-longpress-x-y-id" aria-hidden="true">#</a> RootAutomator.longPress(x, y[, id])</h2><ul><li><code><span class="token property">x</span></code> {number} horizontal coordinate</li><li><code><span class="token property">y</span></code> {number} the vertical coordinate</li><li><code><span class="token property">duration</span></code> {number} the length of the press</li><li><code><span class="token property">id</span></code> {number} multi-touch id, optional, default is 1</li></ul><p>Simulate the long press position (x, y).</p><p>The above is a simple function to simulate touch operation. If you want to simulate some complex gestures, you need a more underlying function.</p><h2 id="rootautomator-touchdown-x-y-id" tabindex="-1"><a class="header-anchor" href="#rootautomator-touchdown-x-y-id" aria-hidden="true">#</a> RootAutomator.touchDown(x, y[, id])</h2><ul><li><code><span class="token property">x</span></code> {number} horizontal coordinate</li><li><code><span class="token property">y</span></code> {number} vertical coordinate</li><li><code><span class="token property">id</span></code> {number} multi-touch id, optional, default is 1</li></ul><p>Simulate the finger press position (x, y).</p><h2 id="rootautomator-touchmove-x-y-id" tabindex="-1"><a class="header-anchor" href="#rootautomator-touchmove-x-y-id" aria-hidden="true">#</a> RootAutomator.touchMove(x, y[, id])</h2><ul><li><code><span class="token property">x</span></code> {number} horizontal coordinate</li><li><code><span class="token property">y</span></code> {number} vertical coordinate</li><li><code><span class="token property">id</span></code> {number} multi-touch id, optional, default is 1</li></ul><p>Simulate moving finger to position (x, y).</p><h2 id="rootautomator-touchup-id" tabindex="-1"><a class="header-anchor" href="#rootautomator-touchup-id" aria-hidden="true">#</a> RootAutomator.touchUp([id])</h2><ul><li><code><span class="token property">id</span></code> {number} Multi-touch id, optional, default is 1</li></ul><p>Simulate finger flick up.</p><h1 id="simple-commands-for-clicking-and-swiping-with-root-access" tabindex="-1"><a class="header-anchor" href="#simple-commands-for-clicking-and-swiping-with-root-access" aria-hidden="true">#</a> Simple commands for clicking and swiping with root access</h1><blockquote><p>Stability: 1 - Experimental</p></blockquote><p>Note: The functions in this section are likely to be changed in subsequent versions! Please do not rely too much on the side effects of the functions in this section. It is recommended to use <code><span class="token property">RootAutomator</span></code> instead of the touch functions in this section.</p><p>The following functions all require root access and can be used to click, swipe, etc. from any position.</p><ul><li>These functions usually have initial capitalization to indicate their special privileges.</li><li>None of these functions return any values.</li><li>And, the execution of these functions is asynchronous, non-blocking, and takes different amounts of time on different models. The script does not wait for the execution of the action to complete before continuing. Therefore it is best to add an appropriate sleep after each function to achieve the desired effect.</li></ul><p>For example:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">Tap</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Note that the execution of an action may not be stopped, e.g.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">100</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token function">Tap</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>After this code is executed it may appear that the tap continues even after the script is stopped in Task Manager. Therefore, it is highly recommended that each action be followed by a delay of.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">100</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token function">Tap</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="tap-x-y" tabindex="-1"><a class="header-anchor" href="#tap-x-y" aria-hidden="true">#</a> Tap(x, y)</h2><ul><li>x, y {number} The coordinates to tap.</li></ul><p>Tap position(x, y), you can enable the pointer position to determine the tap coordinates via &quot;Developer Options&quot;.</p><h2 id="swipe-x1-y1-x2-y2-duration-1" tabindex="-1"><a class="header-anchor" href="#swipe-x1-y1-x2-y2-duration-1" aria-hidden="true">#</a> Swipe(x1, y1, x2, y2, [duration])</h2><ul><li>x1, y1 {number} The coordinates of the starting point of the swipe.</li><li>x2, y2 {number} the coordinates of the end of the slide</li><li>duration {number} the time used for the sliding action</li></ul><p>Sliding. Slide from position (x1, y1) to position (x2, y2).</p>`,91),i=[o];function p(c,l){return s(),a("div",null,i)}const d=n(t,[["render",p],["__file","coordinatesBasedAutomation.html.vue"]]);export{d as default};
