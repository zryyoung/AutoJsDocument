import{_ as p}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as l,c,a as n,d as t,w as e,b as a,e as o,r as i}from"./app.6aa2b576.js";const r={},u=n("h1",{id:"interface-java",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#interface-java","aria-hidden":"true"},"#"),a(" Interface: Java")],-1),d=n("h2",{id:"table-of-contents",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#table-of-contents","aria-hidden":"true"},"#"),a(" Table of contents")],-1),k=n("h3",{id:"methods",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#methods","aria-hidden":"true"},"#"),a(" Methods")],-1),h=o(`<h2 id="methods-1" tabindex="-1"><a class="header-anchor" href="#methods-1" aria-hidden="true">#</a> Methods</h2><h3 id="boxboolean" tabindex="-1"><a class="header-anchor" href="#boxboolean" aria-hidden="true">#</a> boxBoolean</h3><p>\u25B8 <strong>boxBoolean</strong>(<code><span class="token property">value</span></code>): <code><span class="token property">any</span></code></p><p>Wrap value as a wrapper of java.lang.Boolean, which can avoid ambiguous when calling overloaded Java methods, so that method of argument type boolean or java.lang.Boolean can be called certainty.</p><p><strong><code><span class="token property">Example</span></code></strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>
<span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;rhino&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">install</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> $java <span class="token operator">=</span> $autojs<span class="token punctuation">.</span>java<span class="token punctuation">;</span>

<span class="token keyword">const</span> values <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span>ContentValues</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// public void put(String key, Boolean value)</span>
values<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;key&quot;</span><span class="token punctuation">,</span> $java<span class="token punctuation">.</span><span class="token function">boxBoolean</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code><span class="token property">value</span></code></td><td style="text-align:left;"><code><span class="token property">number</span></code></td></tr></tbody></table><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns" aria-hidden="true">#</a> Returns</h4><p><code><span class="token property">any</span></code></p><hr><h3 id="boxbyte" tabindex="-1"><a class="header-anchor" href="#boxbyte" aria-hidden="true">#</a> boxByte</h3><p>\u25B8 <strong>boxByte</strong>(<code><span class="token property">value</span></code>): <code><span class="token property">any</span></code></p><p>Wrap value as a wrapper of java.lang.Byte, which can avoid ambiguous when calling overloaded Java methods, so that method of argument type byte or java.lang.Byte can be called certainty.</p><p><strong><code><span class="token property">Example</span></code></strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>
<span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;rhino&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">install</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> $java <span class="token operator">=</span> $autojs<span class="token punctuation">.</span>java<span class="token punctuation">;</span>

<span class="token keyword">const</span> values <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span>ContentValues</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// public void put(String key, Byte value)</span>
values<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;key&quot;</span><span class="token punctuation">,</span> $java<span class="token punctuation">.</span><span class="token function">boxByte</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code><span class="token property">value</span></code></td><td style="text-align:left;"><code><span class="token property">number</span></code></td></tr></tbody></table><h4 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1" aria-hidden="true">#</a> Returns</h4><p><code><span class="token property">any</span></code></p><hr><h3 id="boxchar" tabindex="-1"><a class="header-anchor" href="#boxchar" aria-hidden="true">#</a> boxChar</h3><p>\u25B8 <strong>boxChar</strong>(<code><span class="token property">value</span></code>): <code><span class="token property">any</span></code></p><p>Wrap value as a wrapper of java.lang.Char, which can avoid ambiguous when calling overloaded Java methods, so that method of argument type char or java.lang.Char can be called certainty.</p><p><strong><code><span class="token property">Example</span></code></strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>
<span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;rhino&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">install</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> $java <span class="token operator">=</span> $autojs<span class="token punctuation">.</span>java<span class="token punctuation">;</span>

<span class="token keyword">const</span> values <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span>ContentValues</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// public void put(String key, Char value)</span>
values<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;key&quot;</span><span class="token punctuation">,</span> $java<span class="token punctuation">.</span><span class="token function">boxChar</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code><span class="token property">value</span></code></td><td style="text-align:left;"><code><span class="token property">number</span></code></td></tr></tbody></table><h4 id="returns-2" tabindex="-1"><a class="header-anchor" href="#returns-2" aria-hidden="true">#</a> Returns</h4><p><code><span class="token property">any</span></code></p><hr><h3 id="boxdouble" tabindex="-1"><a class="header-anchor" href="#boxdouble" aria-hidden="true">#</a> boxDouble</h3><p>\u25B8 <strong>boxDouble</strong>(<code><span class="token property">value</span></code>): <code><span class="token property">any</span></code></p><p>Wrap value as a wrapper of java.lang.Double, which can avoid ambiguous when calling overloaded Java methods, so that method of argument type double or java.lang.Double can be called certainty.</p><p><strong><code><span class="token property">Example</span></code></strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>
<span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;rhino&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">install</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> $java <span class="token operator">=</span> $autojs<span class="token punctuation">.</span>java<span class="token punctuation">;</span>

<span class="token keyword">const</span> values <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span>ContentValues</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// public void put(String key, Double value)</span>
values<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;key&quot;</span><span class="token punctuation">,</span> $java<span class="token punctuation">.</span><span class="token function">boxDouble</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="parameters-3" tabindex="-1"><a class="header-anchor" href="#parameters-3" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code><span class="token property">value</span></code></td><td style="text-align:left;"><code><span class="token property">number</span></code></td></tr></tbody></table><h4 id="returns-3" tabindex="-1"><a class="header-anchor" href="#returns-3" aria-hidden="true">#</a> Returns</h4><p><code><span class="token property">any</span></code></p><hr><h3 id="boxfloat" tabindex="-1"><a class="header-anchor" href="#boxfloat" aria-hidden="true">#</a> boxFloat</h3><p>\u25B8 <strong>boxFloat</strong>(<code><span class="token property">value</span></code>): <code><span class="token property">any</span></code></p><p>Wrap value as a wrapper of java.lang.Float, which can avoid ambiguous when calling overloaded Java methods, so that method of argument type float or java.lang.Float can be called certainty.</p><p><strong><code><span class="token property">Example</span></code></strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>
<span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;rhino&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">install</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> $java <span class="token operator">=</span> $autojs<span class="token punctuation">.</span>java<span class="token punctuation">;</span>

<span class="token keyword">const</span> values <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span>ContentValues</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// public void put(String key, Float value)</span>
values<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;key&quot;</span><span class="token punctuation">,</span> $java<span class="token punctuation">.</span><span class="token function">boxFloat</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="parameters-4" tabindex="-1"><a class="header-anchor" href="#parameters-4" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code><span class="token property">value</span></code></td><td style="text-align:left;"><code><span class="token property">number</span></code></td></tr></tbody></table><h4 id="returns-4" tabindex="-1"><a class="header-anchor" href="#returns-4" aria-hidden="true">#</a> Returns</h4><p><code><span class="token property">any</span></code></p><hr><h3 id="boxint" tabindex="-1"><a class="header-anchor" href="#boxint" aria-hidden="true">#</a> boxInt</h3><p>\u25B8 <strong>boxInt</strong>(<code><span class="token property">value</span></code>): <code><span class="token property">any</span></code></p><p>Wrap value as a wrapper of java.lang.Integer, which can avoid ambiguous when calling overloaded Java methods, so that method of argument type int or java.lang.Integer can be called certainty.</p><p><strong><code><span class="token property">Example</span></code></strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>
<span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;rhino&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">install</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> $java <span class="token operator">=</span> $autojs<span class="token punctuation">.</span>java<span class="token punctuation">;</span>

<span class="token keyword">const</span> values <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span>ContentValues</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// public void put(String key, Integer value)</span>
values<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;key&quot;</span><span class="token punctuation">,</span> $java<span class="token punctuation">.</span><span class="token function">boxInt</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="parameters-5" tabindex="-1"><a class="header-anchor" href="#parameters-5" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code><span class="token property">value</span></code></td><td style="text-align:left;"><code><span class="token property">number</span></code></td></tr></tbody></table><h4 id="returns-5" tabindex="-1"><a class="header-anchor" href="#returns-5" aria-hidden="true">#</a> Returns</h4><p><code><span class="token property">any</span></code></p><hr><h3 id="boxlong" tabindex="-1"><a class="header-anchor" href="#boxlong" aria-hidden="true">#</a> boxLong</h3><p>\u25B8 <strong>boxLong</strong>(<code><span class="token property">value</span></code>): <code><span class="token property">any</span></code></p><p>Wrap value as a wrapper of java.lang.Long, which can avoid ambiguous when calling overloaded Java methods, so that method of argument type long or java.lang.Long can be called certainty.</p><p><strong><code><span class="token property">Example</span></code></strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>
<span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;rhino&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">install</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> $java <span class="token operator">=</span> $autojs<span class="token punctuation">.</span>java<span class="token punctuation">;</span>

<span class="token keyword">const</span> values <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span>ContentValues</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// public void put(String key, Long value)</span>
values<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;key&quot;</span><span class="token punctuation">,</span> $java<span class="token punctuation">.</span><span class="token function">boxLong</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="parameters-6" tabindex="-1"><a class="header-anchor" href="#parameters-6" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code><span class="token property">value</span></code></td><td style="text-align:left;"><code><span class="token property">number</span></code></td></tr></tbody></table><h4 id="returns-6" tabindex="-1"><a class="header-anchor" href="#returns-6" aria-hidden="true">#</a> Returns</h4><p><code><span class="token property">any</span></code></p><hr><h3 id="boxshort" tabindex="-1"><a class="header-anchor" href="#boxshort" aria-hidden="true">#</a> boxShort</h3><p>\u25B8 <strong>boxShort</strong>(<code><span class="token property">value</span></code>): <code><span class="token property">any</span></code></p><p>Wrap value as a wrapper of java.lang.Short, which can avoid ambiguous when calling overloaded Java methods, so that method of argument type short or java.lang.Short can be called certainty.</p><p><strong><code><span class="token property">Example</span></code></strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>
<span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;rhino&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">install</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> $java <span class="token operator">=</span> $autojs<span class="token punctuation">.</span>java<span class="token punctuation">;</span>

<span class="token keyword">const</span> values <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span>ContentValues</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// public void put(String key, Short value)</span>
values<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;key&quot;</span><span class="token punctuation">,</span> $java<span class="token punctuation">.</span><span class="token function">boxShort</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="parameters-7" tabindex="-1"><a class="header-anchor" href="#parameters-7" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code><span class="token property">value</span></code></td><td style="text-align:left;"><code><span class="token property">number</span></code></td></tr></tbody></table><h4 id="returns-7" tabindex="-1"><a class="header-anchor" href="#returns-7" aria-hidden="true">#</a> Returns</h4><p><code><span class="token property">any</span></code></p><hr><h3 id="create" tabindex="-1"><a class="header-anchor" href="#create" aria-hidden="true">#</a> create</h3><p>\u25B8 <strong>create</strong>(<code><span class="token property">constructor</span></code>, <code><span class="token property">args</span></code>, <code>threadMode<span class="token operator">?</span></code>): <code><span class="token property">Promise</span></code>&lt;<code><span class="token property">any</span></code>&gt;</p><p>Create a Java object on the specified thread and return a Promise. For example, some Android UI related objects need to be created on UI thread.</p><p><strong><code><span class="token property">Example</span></code></strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> $java <span class="token operator">=</span> $autojs<span class="token punctuation">.</span>java<span class="token punctuation">;</span>
<span class="token keyword">const</span> View <span class="token operator">=</span> $java<span class="token punctuation">.</span><span class="token function">findClass</span><span class="token punctuation">(</span><span class="token string">&#39;android.view.View&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> context <span class="token operator">=</span> $autojs<span class="token punctuation">.</span>androidContext<span class="token punctuation">;</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> view <span class="token operator">=</span> <span class="token keyword">await</span> $java<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>View<span class="token punctuation">,</span> <span class="token punctuation">[</span>context<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39;ui&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>view<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="parameters-8" tabindex="-1"><a class="header-anchor" href="#parameters-8" aria-hidden="true">#</a> Parameters</h4>`,87),v=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"left"}},"Name"),n("th",{style:{"text-align":"left"}},"Type"),n("th",{style:{"text-align":"left"}},"Default value"),n("th",{style:{"text-align":"left"}},"Description")])],-1),y=n("tr",null,[n("td",{style:{"text-align":"left"}},[n("code",null,[n("span",{class:"token property"},"constructor")])]),n("td",{style:{"text-align":"left"}},[n("code",null,[n("span",{class:"token property"},"any")])]),n("td",{style:{"text-align":"left"}},[n("code",null,[n("span",{class:"token keyword"},"undefined")])]),n("td",{style:{"text-align":"left"}},"Java class constructor, if constructor is not a Java class constructor, throw TypeError.")],-1),b=n("tr",null,[n("td",{style:{"text-align":"left"}},[n("code",null,[n("span",{class:"token property"},"args")])]),n("td",{style:{"text-align":"left"}},[n("code",null,[n("span",{class:"token property"},"any")]),a("[]")]),n("td",{style:{"text-align":"left"}},[n("code",null,[n("span",{class:"token keyword"},"undefined")])]),n("td",{style:{"text-align":"left"}},"Constructor arguments")],-1),g=n("td",{style:{"text-align":"left"}},[n("code",null,[n("span",{class:"token property"},"threadMode")])],-1),m={style:{"text-align":"left"}},f=n("code",null,[n("span",{class:"token property"},"ThreadMode")],-1),x=n("td",{style:{"text-align":"left"}},[n("code",null,[n("span",{class:"token string"},"'current'")])],-1),j=n("td",{style:{"text-align":"left"}},"Thread mode",-1),w=o('<h4 id="returns-8" tabindex="-1"><a class="header-anchor" href="#returns-8" aria-hidden="true">#</a> Returns</h4><p><code><span class="token property">Promise</span></code>&lt;<code><span class="token property">any</span></code>&gt;</p><hr><h3 id="createsync" tabindex="-1"><a class="header-anchor" href="#createsync" aria-hidden="true">#</a> createSync</h3><p>\u25B8 <strong>createSync</strong>(<code><span class="token property">constructor</span></code>, <code><span class="token property">args</span></code>, <code>threadMode<span class="token operator">?</span></code>): <code><span class="token property">any</span></code></p>',5),_=n("h4",{id:"parameters-9",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#parameters-9","aria-hidden":"true"},"#"),a(" Parameters")],-1),J=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"left"}},"Name"),n("th",{style:{"text-align":"left"}},"Type"),n("th",{style:{"text-align":"left"}},"Default value"),n("th",{style:{"text-align":"left"}},"Description")])],-1),q=n("tr",null,[n("td",{style:{"text-align":"left"}},[n("code",null,[n("span",{class:"token property"},"constructor")])]),n("td",{style:{"text-align":"left"}},[n("code",null,[n("span",{class:"token property"},"any")])]),n("td",{style:{"text-align":"left"}},[n("code",null,[n("span",{class:"token keyword"},"undefined")])]),n("td",{style:{"text-align":"left"}},"Java class constructor, if constructor is not a Java class constructor, throw TypeError.")],-1),C=n("tr",null,[n("td",{style:{"text-align":"left"}},[n("code",null,[n("span",{class:"token property"},"args")])]),n("td",{style:{"text-align":"left"}},[n("code",null,[n("span",{class:"token property"},"any")]),a("[]")]),n("td",{style:{"text-align":"left"}},[n("code",null,[n("span",{class:"token keyword"},"undefined")])]),n("td",{style:{"text-align":"left"}},"Constructor arguments")],-1),$=n("td",{style:{"text-align":"left"}},[n("code",null,[n("span",{class:"token property"},"threadMode")])],-1),T={style:{"text-align":"left"}},D=n("code",null,[n("span",{class:"token property"},"ThreadMode")],-1),S=n("td",{style:{"text-align":"left"}},[n("code",null,[n("span",{class:"token string"},"'current'")])],-1),P=n("td",{style:{"text-align":"left"}},"Thread mode",-1),V=o(`<h4 id="returns-9" tabindex="-1"><a class="header-anchor" href="#returns-9" aria-hidden="true">#</a> Returns</h4><p><code><span class="token property">any</span></code></p><hr><h3 id="defineclass" tabindex="-1"><a class="header-anchor" href="#defineclass" aria-hidden="true">#</a> defineClass</h3><p>\u25B8 <strong>defineClass</strong>(<code><span class="token property">jsClass</span></code>, <code>options<span class="token operator">?</span></code>): <code><span class="token property">Promise</span></code>&lt;<code><span class="token constant">C</span></code>&gt;</p><p>Dynamically generate a Java class from the given JavaScript class. The methods of the parent class can be overridden in the JavaScript class, and implement methods of the Java interface. Usually used to inherit abstract classes or override methods of some classes.</p><p>For example, you can inherit <code>android<span class="token punctuation">.</span>webkit<span class="token punctuation">.</span>MyWebViewClient</code> and override the <code><span class="token property">shouldOverrideUrlLoading</span></code> method to intercept requests.</p><p>This method is implemented by dynamically generating dex, which takes a certain amount of time and requires asynchronous waiting. The dex generated last time can be reused in the second call. The dex file generated by default is located in the .codecache directory of the current directory. You can be specified through cacheDexFile option.</p><p>Note that if you just want to implement Java interfaces, you don&#39;t need to use this method, you can directly use something like <code><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token function-variable function">onClick</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span></code>.</p><p><strong><code><span class="token property">Example</span></code></strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>
<span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;rhino&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">install</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> $java <span class="token operator">=</span> $autojs<span class="token punctuation">.</span>java<span class="token punctuation">;</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> MyWebViewClient <span class="token operator">=</span> <span class="token keyword">await</span> $java<span class="token punctuation">.</span><span class="token function">defineClass</span><span class="token punctuation">(</span>
     <span class="token keyword">class</span> <span class="token class-name">MyWebViewClient</span> <span class="token keyword">extends</span> <span class="token class-name">android<span class="token punctuation">.</span>webkit<span class="token punctuation">.</span>WebViewClient</span> <span class="token punctuation">{</span>
         
         <span class="token function">shouldOverrideUrlLoading</span><span class="token punctuation">(</span><span class="token parameter">webview<span class="token punctuation">,</span> url</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
              <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>
              <span class="token punctuation">}</span>
              <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
         <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> client <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyWebViewClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
<span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7ED9\u5B9A\u4E00\u4E2AJavaScript\u7C7B\uFF0C\u8BA9\u5B83\u7EE7\u627F\u81EA\u67D0\u4E2AJava\u7C7B\uFF0C\u5E76\u5B9E\u73B0\u7ED9\u5B9A\u7684Java\u63A5\u53E3\u3002\u5C06\u751F\u6210\u4E00\u4E2A\u76F8\u5E94\u7684\u7C7B\uFF0C\u4ECE\u800C\u53EF\u5728\u7ED9\u5B9A\u7684JavaScript\u7C7B\u4E2D\u8986\u5199Java\u7C7B\u7684\u76F8\u5E94\u65B9\u6CD5\u3002</p><h4 id="parameters-10" tabindex="-1"><a class="header-anchor" href="#parameters-10" aria-hidden="true">#</a> Parameters</h4>`,13),M=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"left"}},"Name"),n("th",{style:{"text-align":"left"}},"Type"),n("th",{style:{"text-align":"left"}},"Description")])],-1),N=n("tr",null,[n("td",{style:{"text-align":"left"}},[n("code",null,[n("span",{class:"token property"},"jsClass")])]),n("td",{style:{"text-align":"left"}},[n("code",null,[n("span",{class:"token constant"},"C")])]),n("td",{style:{"text-align":"left"}},"JavaScript\u7C7B")],-1),B=n("td",{style:{"text-align":"left"}},[n("code",null,[a("options"),n("span",{class:"token operator"},"?")])],-1),R={style:{"text-align":"left"}},E=n("code",null,[n("span",{class:"token property"},"DefineClassOptions")],-1),L=n("td",{style:{"text-align":"left"}},"\u9009\u9879\uFF0C\u7528\u4E8E\u6307\u5B9A\u751F\u6210\u7C7B\u7684\u5305\u540D\u3001\u8981\u5B9E\u73B0\u7684Java\u63A5\u53E3\u7B49\u3002",-1),I=o(`<h4 id="returns-10" tabindex="-1"><a class="header-anchor" href="#returns-10" aria-hidden="true">#</a> Returns</h4><p><code><span class="token property">Promise</span></code>&lt;<code><span class="token constant">C</span></code>&gt;</p><hr><h3 id="findclass" tabindex="-1"><a class="header-anchor" href="#findclass" aria-hidden="true">#</a> findClass</h3><p>\u25B8 <strong>findClass</strong>(<code><span class="token property">name</span></code>): <code><span class="token property">any</span></code></p><p>Find the Java class with the specified name and load it. Return the Java class.</p><p>The returned Java class is actually a javascript constructor function, which can be used to construct a Java object, or access Java class&#39;s static methods.</p><p>If you want to search inner classes, you need to use &#39;$&#39; symbol, like <code><span class="token function">findClass</span><span class="token punctuation">(</span><span class="token string">&#39;android.app.AlertDialog$Builder&#39;</span><span class="token punctuation">)</span></code>.</p><p>If the class is not found, throw <code><span class="token property">ClassNotFoundError</span></code>.</p><p><strong><code><span class="token property">Example</span></code></strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> $java <span class="token operator">=</span> $autojs<span class="token punctuation">.</span>java<span class="token punctuation">;</span>
<span class="token keyword">const</span> Integer <span class="token operator">=</span> $java<span class="token punctuation">.</span><span class="token function">findClass</span><span class="token punctuation">(</span><span class="token string">&#39;java.lang.Integer&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> int <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Integer</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Integer<span class="token punctuation">.</span><span class="token function">toHexString</span><span class="token punctuation">(</span>int<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="parameters-11" tabindex="-1"><a class="header-anchor" href="#parameters-11" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code><span class="token property">name</span></code></td><td style="text-align:left;"><code><span class="token property">string</span></code></td><td style="text-align:left;">The full Java class name</td></tr></tbody></table><h4 id="returns-11" tabindex="-1"><a class="header-anchor" href="#returns-11" aria-hidden="true">#</a> Returns</h4><p><code><span class="token property">any</span></code></p><p>Java class</p><hr><h3 id="findclassornull" tabindex="-1"><a class="header-anchor" href="#findclassornull" aria-hidden="true">#</a> findClassOrNull</h3><p>\u25B8 <strong>findClassOrNull</strong>(<code><span class="token property">name</span></code>): <code><span class="token property">any</span></code></p>`,19),F=n("p",null,[n("strong",null,[n("code",null,[n("span",{class:"token property"},"See")])])],-1),W=o(`<h4 id="parameters-12" tabindex="-1"><a class="header-anchor" href="#parameters-12" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code><span class="token property">name</span></code></td><td style="text-align:left;"><code><span class="token property">string</span></code></td><td style="text-align:left;">full java class name</td></tr></tbody></table><h4 id="returns-12" tabindex="-1"><a class="header-anchor" href="#returns-12" aria-hidden="true">#</a> Returns</h4><p><code><span class="token property">any</span></code></p><p>Java class or null</p><hr><h3 id="loaddex" tabindex="-1"><a class="header-anchor" href="#loaddex" aria-hidden="true">#</a> loadDex</h3><p>\u25B8 <strong>loadDex</strong>(<code><span class="token property">dexFile</span></code>): <code><span class="token property">Promise</span></code>&lt;<code><span class="token keyword">void</span></code>&gt;</p><p>Load the Dex file asynchronously. After loading, the classes in the Dex will be available in JavaScript.</p><p><strong><code><span class="token property">Example</span></code></strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> $java <span class="token operator">=</span> $autojs<span class="token punctuation">.</span>java<span class="token punctuation">;</span>
<span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;rhino&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">install</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token keyword">await</span> $java<span class="token punctuation">.</span><span class="token function">loadDex</span><span class="token punctuation">(</span><span class="token string">&#39;/sdcard/mydex.dex&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>MyClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="parameters-13" tabindex="-1"><a class="header-anchor" href="#parameters-13" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code><span class="token property">dexFile</span></code></td><td style="text-align:left;"><code><span class="token property">string</span></code></td><td style="text-align:left;">the path of dex file</td></tr></tbody></table><h4 id="returns-13" tabindex="-1"><a class="header-anchor" href="#returns-13" aria-hidden="true">#</a> Returns</h4><p><code><span class="token property">Promise</span></code>&lt;<code><span class="token keyword">void</span></code>&gt;</p><hr><h3 id="loadjar" tabindex="-1"><a class="header-anchor" href="#loadjar" aria-hidden="true">#</a> loadJar</h3><p>\u25B8 <strong>loadJar</strong>(<code><span class="token property">jarFile</span></code>): <code><span class="token property">Promise</span></code>&lt;<code><span class="token keyword">void</span></code>&gt;</p><p>Load the jar file asynchronously. After loading, the classes in the jar will be available in JavaScript.</p><p><strong><code><span class="token property">Example</span></code></strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> $java <span class="token operator">=</span> $autojs<span class="token punctuation">.</span>java<span class="token punctuation">;</span>
<span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;rhino&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">install</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token keyword">await</span> $java<span class="token punctuation">.</span><span class="token function">loadJar</span><span class="token punctuation">(</span><span class="token string">&#39;/sdcard/myjar.jar&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>MyClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="parameters-14" tabindex="-1"><a class="header-anchor" href="#parameters-14" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code><span class="token property">jarFile</span></code></td><td style="text-align:left;"><code><span class="token property">string</span></code></td><td style="text-align:left;">the path of dex file</td></tr></tbody></table><h4 id="returns-14" tabindex="-1"><a class="header-anchor" href="#returns-14" aria-hidden="true">#</a> Returns</h4><p><code><span class="token property">Promise</span></code>&lt;<code><span class="token keyword">void</span></code>&gt;</p><hr><h3 id="setdefaultthreadmode" tabindex="-1"><a class="header-anchor" href="#setdefaultthreadmode" aria-hidden="true">#</a> setDefaultThreadMode</h3><p>\u25B8 <strong>setDefaultThreadMode</strong>(<code><span class="token property">clazz</span></code>, <code><span class="token property">threadMode</span></code>): <code><span class="token property">any</span></code></p><p>Set the default thread mode of the Java class. After creating a new Java object of the Java class, the default thread mode will be used. No effect on the existing Java objects.</p><p><strong><code><span class="token property">Example</span></code></strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> $java <span class="token operator">=</span> $autojs<span class="token punctuation">.</span>java<span class="token punctuation">;</span>
<span class="token keyword">const</span> View <span class="token operator">=</span> $java<span class="token punctuation">.</span><span class="token function">findClass</span><span class="token punctuation">(</span><span class="token string">&#39;android.view.View&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
$java<span class="token punctuation">.</span><span class="token function">setDefaultThreadMode</span><span class="token punctuation">(</span>View<span class="token punctuation">,</span> <span class="token string">&#39;ui&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="parameters-15" tabindex="-1"><a class="header-anchor" href="#parameters-15" aria-hidden="true">#</a> Parameters</h4>`,32),O=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"left"}},"Name"),n("th",{style:{"text-align":"left"}},"Type"),n("th",{style:{"text-align":"left"}},"Description")])],-1),A=n("tr",null,[n("td",{style:{"text-align":"left"}},[n("code",null,[n("span",{class:"token property"},"clazz")])]),n("td",{style:{"text-align":"left"}},[n("code",null,[n("span",{class:"token property"},"any")])]),n("td",{style:{"text-align":"left"}},"Java class")],-1),U=n("td",{style:{"text-align":"left"}},[n("code",null,[n("span",{class:"token property"},"threadMode")])],-1),z={style:{"text-align":"left"}},H=n("code",null,[n("span",{class:"token property"},"ThreadMode")],-1),Y=n("td",{style:{"text-align":"left"}},"Thread mode",-1),G=o(`<h4 id="returns-15" tabindex="-1"><a class="header-anchor" href="#returns-15" aria-hidden="true">#</a> Returns</h4><p><code><span class="token property">any</span></code></p><hr><h3 id="setthreadmode" tabindex="-1"><a class="header-anchor" href="#setthreadmode" aria-hidden="true">#</a> setThreadMode</h3><p>\u25B8 <strong>setThreadMode</strong>(<code><span class="token property">obj</span></code>, <code><span class="token property">threadMode</span></code>): <code><span class="token property">any</span></code></p><p>Set the thread mode of the Java object. After setting, all the function calls of the Java object will be executed on the thread, and if not on the current thread, the function calls will return a Promise.</p><p><strong><code><span class="token property">Example</span></code></strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> $java <span class="token operator">=</span> $autojs<span class="token punctuation">.</span>java<span class="token punctuation">;</span>
<span class="token keyword">const</span> TextView <span class="token operator">=</span> $java<span class="token punctuation">.</span><span class="token function">findClass</span><span class="token punctuation">(</span><span class="token string">&#39;android.widget.TextView&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> textView <span class="token operator">=</span> <span class="token keyword">await</span> $java<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>TextView<span class="token punctuation">,</span> <span class="token punctuation">[</span>$autojs<span class="token punctuation">.</span>androidContext<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39;ui&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    $java<span class="token punctuation">.</span><span class="token function">setThreadMode</span><span class="token punctuation">(</span>textView<span class="token punctuation">,</span> <span class="token string">&#39;ui&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">await</span> textView<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token string">&#39;Hello World&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="parameters-16" tabindex="-1"><a class="header-anchor" href="#parameters-16" aria-hidden="true">#</a> Parameters</h4>`,9),K=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"left"}},"Name"),n("th",{style:{"text-align":"left"}},"Type"),n("th",{style:{"text-align":"left"}},"Description")])],-1),Q=n("tr",null,[n("td",{style:{"text-align":"left"}},[n("code",null,[n("span",{class:"token property"},"obj")])]),n("td",{style:{"text-align":"left"}},[n("code",null,[n("span",{class:"token property"},"any")])]),n("td",{style:{"text-align":"left"}},"Java object")],-1),X=n("td",{style:{"text-align":"left"}},[n("code",null,[n("span",{class:"token property"},"threadMode")])],-1),Z={style:{"text-align":"left"}},nn=n("code",null,[n("span",{class:"token property"},"ThreadMode")],-1),an=n("td",{style:{"text-align":"left"}},"Thread mode",-1),sn=o(`<h4 id="returns-16" tabindex="-1"><a class="header-anchor" href="#returns-16" aria-hidden="true">#</a> Returns</h4><p><code><span class="token property">any</span></code></p><hr><h3 id="wrap" tabindex="-1"><a class="header-anchor" href="#wrap" aria-hidden="true">#</a> wrap</h3><p>\u25B8 <strong>wrap</strong>&lt;<code><span class="token constant">T</span></code>&gt;(<code><span class="token property">obj</span></code>, <code>sync<span class="token operator">?</span></code>): <code><span class="token constant">T</span></code></p><p>Wrap the specified JavaScript object, so that the returned new object&#39;s function will be called by Java when it is called. If <code><span class="token property">sync</span></code> is true, the functions will be blocked when they are called, and the return value will be returned to Java.</p><p>Usually used to set some Java callbacks that are not called on JavaScript thread.</p><p><strong><code><span class="token property">Example</span></code></strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> $java <span class="token operator">=</span> $autojs<span class="token punctuation">.</span>java<span class="token punctuation">;</span>
<span class="token keyword">const</span> Button <span class="token operator">=</span> $java<span class="token punctuation">.</span><span class="token function">findClass</span><span class="token punctuation">(</span><span class="token string">&#39;android.widget.Button&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> button <span class="token operator">=</span> <span class="token keyword">await</span> $java<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>Button<span class="token punctuation">,</span> <span class="token punctuation">[</span>$autojs<span class="token punctuation">.</span>androidContext<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39;ui&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    $java<span class="token punctuation">.</span><span class="token function">setThreadMode</span><span class="token punctuation">(</span>button<span class="token punctuation">,</span> <span class="token string">&#39;ui&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    button<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span>$java<span class="token punctuation">.</span><span class="token function">wrap</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
       console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    button<span class="token punctuation">.</span><span class="token function">setOnLongClickListener</span><span class="token punctuation">(</span>$java<span class="token punctuation">.</span><span class="token function">wrap</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
         <span class="token function-variable function">onLongClick</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;long click&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
         <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code><span class="token constant">T</span></code></td></tr></tbody></table><h4 id="parameters-17" tabindex="-1"><a class="header-anchor" href="#parameters-17" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Default value</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code><span class="token property">obj</span></code></td><td style="text-align:left;"><code><span class="token constant">T</span></code></td><td style="text-align:left;"><code><span class="token keyword">undefined</span></code></td><td style="text-align:left;">JavaScript object</td></tr><tr><td style="text-align:left;"><code>sync<span class="token operator">?</span></code></td><td style="text-align:left;"><code><span class="token property">Boolean</span></code></td><td style="text-align:left;"><code><span class="token boolean">false</span></code></td><td style="text-align:left;">Whether to block the call</td></tr></tbody></table><h4 id="returns-17" tabindex="-1"><a class="header-anchor" href="#returns-17" aria-hidden="true">#</a> Returns</h4><p><code><span class="token constant">T</span></code></p>`,15);function tn(en,on){const s=i("RouterLink");return l(),c("div",null,[n("p",null,[t(s,{to:"/en/v9/generated/"},{default:e(()=>[a("Auto.js Pro 9 Docs")]),_:1}),a(" / "),t(s,{to:"/en/v9/generated/modules/globals.html"},{default:e(()=>[a("globals")]),_:1}),a(" / Java")]),u,n("p",null,[t(s,{to:"/en/v9/generated/modules/globals.html"},{default:e(()=>[a("globals")]),_:1}),a(".Java")]),d,k,n("ul",null,[n("li",null,[t(s,{to:"/en/v9/generated/interfaces/globals.Java.html#boxboolean"},{default:e(()=>[a("boxBoolean")]),_:1})]),n("li",null,[t(s,{to:"/en/v9/generated/interfaces/globals.Java.html#boxbyte"},{default:e(()=>[a("boxByte")]),_:1})]),n("li",null,[t(s,{to:"/en/v9/generated/interfaces/globals.Java.html#boxchar"},{default:e(()=>[a("boxChar")]),_:1})]),n("li",null,[t(s,{to:"/en/v9/generated/interfaces/globals.Java.html#boxdouble"},{default:e(()=>[a("boxDouble")]),_:1})]),n("li",null,[t(s,{to:"/en/v9/generated/interfaces/globals.Java.html#boxfloat"},{default:e(()=>[a("boxFloat")]),_:1})]),n("li",null,[t(s,{to:"/en/v9/generated/interfaces/globals.Java.html#boxint"},{default:e(()=>[a("boxInt")]),_:1})]),n("li",null,[t(s,{to:"/en/v9/generated/interfaces/globals.Java.html#boxlong"},{default:e(()=>[a("boxLong")]),_:1})]),n("li",null,[t(s,{to:"/en/v9/generated/interfaces/globals.Java.html#boxshort"},{default:e(()=>[a("boxShort")]),_:1})]),n("li",null,[t(s,{to:"/en/v9/generated/interfaces/globals.Java.html#create"},{default:e(()=>[a("create")]),_:1})]),n("li",null,[t(s,{to:"/en/v9/generated/interfaces/globals.Java.html#createsync"},{default:e(()=>[a("createSync")]),_:1})]),n("li",null,[t(s,{to:"/en/v9/generated/interfaces/globals.Java.html#defineclass"},{default:e(()=>[a("defineClass")]),_:1})]),n("li",null,[t(s,{to:"/en/v9/generated/interfaces/globals.Java.html#findclass"},{default:e(()=>[a("findClass")]),_:1})]),n("li",null,[t(s,{to:"/en/v9/generated/interfaces/globals.Java.html#findclassornull"},{default:e(()=>[a("findClassOrNull")]),_:1})]),n("li",null,[t(s,{to:"/en/v9/generated/interfaces/globals.Java.html#loaddex"},{default:e(()=>[a("loadDex")]),_:1})]),n("li",null,[t(s,{to:"/en/v9/generated/interfaces/globals.Java.html#loadjar"},{default:e(()=>[a("loadJar")]),_:1})]),n("li",null,[t(s,{to:"/en/v9/generated/interfaces/globals.Java.html#setdefaultthreadmode"},{default:e(()=>[a("setDefaultThreadMode")]),_:1})]),n("li",null,[t(s,{to:"/en/v9/generated/interfaces/globals.Java.html#setthreadmode"},{default:e(()=>[a("setThreadMode")]),_:1})]),n("li",null,[t(s,{to:"/en/v9/generated/interfaces/globals.Java.html#wrap"},{default:e(()=>[a("wrap")]),_:1})])]),h,n("table",null,[v,n("tbody",null,[y,b,n("tr",null,[g,n("td",m,[t(s,{to:"/en/v9/generated/modules/globals.html#threadmode"},{default:e(()=>[f]),_:1})]),x,j])])]),w,n("p",null,[a("Similar to "),t(s,{to:"/en/v9/generated/interfaces/globals.Java.html#create"},{default:e(()=>[a("create")]),_:1}),a(", but wait for the creation blocked and return the Java object instead of returning a Promise. Therefore, this function is usually not recommended to use, unless you know what you are doing.")]),_,n("table",null,[J,n("tbody",null,[q,C,n("tr",null,[$,n("td",T,[t(s,{to:"/en/v9/generated/modules/globals.html#threadmode"},{default:e(()=>[D]),_:1})]),S,P])])]),V,n("table",null,[M,n("tbody",null,[N,n("tr",null,[B,n("td",R,[t(s,{to:"/en/v9/generated/interfaces/globals.DefineClassOptions.html"},{default:e(()=>[E]),_:1})]),L])])]),I,n("p",null,[a("Similar to "),t(s,{to:"/en/v9/generated/interfaces/globals.Java.html#findclass"},{default:e(()=>[a("findClass")]),_:1}),a(", but return null instead of throwing exception when the class is not found.")]),F,n("p",null,[t(s,{to:"/en/v9/generated/interfaces/globals.Java.html#findclass"},{default:e(()=>[a("findClass")]),_:1})]),W,n("table",null,[O,n("tbody",null,[A,n("tr",null,[U,n("td",z,[t(s,{to:"/en/v9/generated/modules/globals.html#threadmode"},{default:e(()=>[H]),_:1})]),Y])])]),G,n("table",null,[K,n("tbody",null,[Q,n("tr",null,[X,n("td",Z,[t(s,{to:"/en/v9/generated/modules/globals.html#threadmode"},{default:e(()=>[nn]),_:1})]),an])])]),sn])}const cn=p(r,[["render",tn],["__file","globals.Java.html.vue"]]);export{cn as default};
