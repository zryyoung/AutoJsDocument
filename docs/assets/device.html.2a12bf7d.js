import{_ as e}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as i,c as a,e as t}from"./app.6aa2b576.js";const n={},s=t(`<h1 id="device" tabindex="-1"><a class="header-anchor" href="#device" aria-hidden="true">#</a> device</h1><blockquote><p>Stability: 2 - Stable</p></blockquote><p>The device module provides information and operations related to the device, such as getting the device width and height, memory usage, IMEI, adjusting the device brightness, volume, etc. Some functions in this module, such as adjusting the volume, require &quot;modify system settings&quot; permission.</p><p>Some of the functions in this module, such as adjusting the volume, require the &quot;Modify system settings&quot; permission. If you don&#39;t have this permission, it will throw <code><span class="token property">SecurityException</span></code> and jump to the permission setting screen.</p><h2 id="device-width" tabindex="-1"><a class="header-anchor" href="#device-width" aria-hidden="true">#</a> device.width</h2><ul><li>{number}</li></ul><p>The width of the device screen resolution. For example, 1080.</p><h2 id="device-height" tabindex="-1"><a class="header-anchor" href="#device-height" aria-hidden="true">#</a> device.height</h2><ul><li>{number}</li></ul><p>The height of the device screen resolution. For example, 1920.</p><h2 id="device-buildid" tabindex="-1"><a class="header-anchor" href="#device-buildid" aria-hidden="true">#</a> device.buildId</h2><ul><li>{string}</li></ul><p>Either a change list number, or a label like &quot;M4-rc20&quot;.</p><p>Either a change list number, or a label like &quot;M4-rc20&quot;.</p><h2 id="device-broad" tabindex="-1"><a class="header-anchor" href="#device-broad" aria-hidden="true">#</a> device.broad</h2><ul><li>{string}</li></ul><p>The name of the underlying board, like &quot;goldfish&quot;.</p><p>The device&#39;s motherboard(?) The model number of the device.</p><h2 id="device-brand" tabindex="-1"><a class="header-anchor" href="#device-brand" aria-hidden="true">#</a> device.brand</h2><ul><li>{string}</li></ul><p>The consumer-visible brand with which the product/hardware will be associated, if any.</p><p>The brand of the manufacturer with which the product/hardware will be associated, if any.</p><h2 id="device-device" tabindex="-1"><a class="header-anchor" href="#device-device" aria-hidden="true">#</a> device.device</h2><ul><li>{string}</li></ul><p>The name of the industrial design.</p><p>The name of the device in the industrial design.</p><h2 id="device-model" tabindex="-1"><a class="header-anchor" href="#device-model" aria-hidden="true">#</a> device.model</h2><ul><li>{string}</li></ul><p>The end-user-visible name for the end product.</p><p>Device model.</p><h2 id="device-product" tabindex="-1"><a class="header-anchor" href="#device-product" aria-hidden="true">#</a> device.product</h2><ul><li>{string}</li></ul><p>The name of the overall product.</p><p>The name of the overall product.</p><h2 id="device-bootloader" tabindex="-1"><a class="header-anchor" href="#device-bootloader" aria-hidden="true">#</a> device.bootloader</h2><ul><li>{string}</li></ul><p>The system bootloader version number.</p><p>The bootloader version of the device.</p><h2 id="device-hardware" tabindex="-1"><a class="header-anchor" href="#device-hardware" aria-hidden="true">#</a> device.hardware</h2><ul><li>{string}</li></ul><p>The name of the hardware (from the kernel command line or /proc).</p><p>The name of the hardware (from the kernel command line or /proc).</p><h2 id="device-fingerprint" tabindex="-1"><a class="header-anchor" href="#device-fingerprint" aria-hidden="true">#</a> device.fingerprint</h2><ul><li>{string}</li></ul><p>A string that uniquely identifies this build. Do not attempt to parse this value.</p><p>A string that uniquely identifies this build.</p><h2 id="device-serial" tabindex="-1"><a class="header-anchor" href="#device-serial" aria-hidden="true">#</a> device.serial</h2><ul><li>{string}</li></ul><p>A hardware serial number, if available. Alphanumeric only, case-insensitive.</p><p>Hardware serial number.</p><h2 id="device-sdkint" tabindex="-1"><a class="header-anchor" href="#device-sdkint" aria-hidden="true">#</a> device.sdkInt</h2><ul><li>{number}</li></ul><p>The user-visible SDK version of the framework; its possible values are defined in Build.VERSION_CODES.</p><p>Android API version. For example, the sdkInt for Android 4.4 is 19.</p><h2 id="device-incremental" tabindex="-1"><a class="header-anchor" href="#device-incremental" aria-hidden="true">#</a> device.incremental</h2><ul><li>{string}</li></ul><p>The internal value used by the underlying source control to represent this build. e.g., a perforce change list number or a git hash.</p><h2 id="device-release" tabindex="-1"><a class="header-anchor" href="#device-release" aria-hidden="true">#</a> device.release</h2><ul><li>{string}</li></ul><p>E.g., &quot;1.0&quot; or &quot;3.4b5&quot;.</p><p>Android system version number. For example, &quot;5.0&quot;, &quot;7.1.1&quot;.</p><h2 id="device-baseos" tabindex="-1"><a class="header-anchor" href="#device-baseos" aria-hidden="true">#</a> device.baseOS</h2><ul><li>{string}</li></ul><p>The base OS build the product is based on.</p><h2 id="device-securitypatch" tabindex="-1"><a class="header-anchor" href="#device-securitypatch" aria-hidden="true">#</a> device.securityPatch</h2><ul><li>{string}</li></ul><p>The user-visible security patch level.</p><p>The user-visible security patch level.</p><h2 id="device-codename" tabindex="-1"><a class="header-anchor" href="#device-codename" aria-hidden="true">#</a> device.codename</h2><ul><li>{string}</li></ul><p>The current development codename, or the string &quot;REL&quot; if this is a release build.</p><p>The development codename, or the string &quot;REL&quot; if this is a release build.</p><h2 id="device-getimei" tabindex="-1"><a class="header-anchor" href="#device-getimei" aria-hidden="true">#</a> device.getIMEI()</h2><ul><li>{string}</li></ul><p>Returns the IMEI of the device.</p><h2 id="device-getandroidid" tabindex="-1"><a class="header-anchor" href="#device-getandroidid" aria-hidden="true">#</a> device.getAndroidId()</h2><ul><li>{string}</li></ul><p>Returns the Android ID of the device.</p><p>The Android ID is a 64-bit integer represented as a hexadecimal string, which is randomly generated when the device is first used and will not be changed afterwards unless factory settings are restored.</p><h2 id="device-getmacaddress" tabindex="-1"><a class="header-anchor" href="#device-getmacaddress" aria-hidden="true">#</a> device.getMacAddress()</h2><ul><li>{string}</li></ul><p>Returns the Mac address of the device. This function needs to be available with WLAN connection to get it, otherwise it will return null.</p><p><strong>Possible subsequent modifications</strong>: In the future, it may be added to get by root privileges if you have root access, so that the correct Mac address can be returned even without a WLAN connection, so please do not use this function to determine the WLAN connection.</p><h2 id="device-getbrightness" tabindex="-1"><a class="header-anchor" href="#device-getbrightness" aria-hidden="true">#</a> device.getBrightness()</h2><ul><li>{number}</li></ul><p>Return the current (manual) brightness. The range is 0~255.</p><h2 id="device-getbrightnessmode" tabindex="-1"><a class="header-anchor" href="#device-getbrightnessmode" aria-hidden="true">#</a> device.getBrightnessMode()</h2><ul><li>{number}</li></ul><p>Return the current brightness mode, 0 is manual brightness, 1 is auto brightness.</p><h2 id="device-setbrightness-b" tabindex="-1"><a class="header-anchor" href="#device-setbrightness-b" aria-hidden="true">#</a> device.setBrightness(b)</h2><ul><li><code><span class="token property">b</span></code> {number} Brightness, range 0~255</li></ul><p>Set the current manual brightness. If the current brightness mode is auto, this function will not affect the brightness of the screen.</p><p>This function requires the &quot;modify system settings&quot; permission. If you don&#39;t have this permission, it will throw a SecurityException and jump to the permission setting screen.</p><h2 id="device-setbrightnessmode-mode" tabindex="-1"><a class="header-anchor" href="#device-setbrightnessmode-mode" aria-hidden="true">#</a> device.setBrightnessMode(mode)</h2><ul><li><code><span class="token property">mode</span></code> {number} Brightness mode, 0 is manual brightness, 1 is auto brightness</li></ul><p>Set the current brightness mode.</p><p>This function requires &quot;modify system settings&quot; permission. If you don&#39;t have this permission, it will throw a SecurityException and jump to the permission setting screen.</p><h2 id="device-getmusicvolume" tabindex="-1"><a class="header-anchor" href="#device-getmusicvolume" aria-hidden="true">#</a> device.getMusicVolume()</h2><ul><li>{number} integer value</li></ul><p>Return the current media volume.</p><h2 id="device-getnotificationvolume" tabindex="-1"><a class="header-anchor" href="#device-getnotificationvolume" aria-hidden="true">#</a> device.getNotificationVolume()</h2><ul><li>{number} The integer value</li></ul><p>Return the current notification volume.</p><h2 id="device-getalarmvolume" tabindex="-1"><a class="header-anchor" href="#device-getalarmvolume" aria-hidden="true">#</a> device.getAlarmVolume()</h2><ul><li>{number} The integer value</li></ul><p>Return the current alarm volume.</p><h2 id="device-getmusicmaxvolume" tabindex="-1"><a class="header-anchor" href="#device-getmusicmaxvolume" aria-hidden="true">#</a> device.getMusicMaxVolume()</h2><ul><li>{number} integer value</li></ul><p>Return the maximum value of the media volume.</p><h2 id="device-getnotificationmaxvolume" tabindex="-1"><a class="header-anchor" href="#device-getnotificationmaxvolume" aria-hidden="true">#</a> device.getNotificationMaxVolume()</h2><ul><li>{number} integer value</li></ul><p>Return the maximum value of the notification volume.</p><h2 id="device-getalarmmaxvolume" tabindex="-1"><a class="header-anchor" href="#device-getalarmmaxvolume" aria-hidden="true">#</a> device.getAlarmMaxVolume()</h2><ul><li>{number} integer value</li></ul><p>Return the maximum value of the alarm volume.</p><h2 id="device-setmusicvolume-volume" tabindex="-1"><a class="header-anchor" href="#device-setmusicvolume-volume" aria-hidden="true">#</a> device.setMusicVolume(volume)</h2><ul><li><code><span class="token property">volume</span></code> {number} volume</li></ul><p>Set the current media volume.</p><p>This function requires the &quot;modify system settings&quot; permission. If you don&#39;t have this permission, it will throw a SecurityException and jump to the permission setting screen.</p><h2 id="device-setnotificationvolume-volume" tabindex="-1"><a class="header-anchor" href="#device-setnotificationvolume-volume" aria-hidden="true">#</a> device.setNotificationVolume(volume)</h2><ul><li><code><span class="token property">volume</span></code> {number} volume</li></ul><p>Set the current notification volume.</p><p>This function requires the &quot;modify system settings&quot; permission. If you don&#39;t have this permission, it will throw a SecurityException and jump to the permission setting screen.</p><h2 id="device-setalarmvolume-volume" tabindex="-1"><a class="header-anchor" href="#device-setalarmvolume-volume" aria-hidden="true">#</a> device.setAlarmVolume(volume)</h2><ul><li><code><span class="token property">volume</span></code> {number} volume</li></ul><p>Set the volume of current alarm.</p><p>This function requires the &quot;modify system settings&quot; permission. If you don&#39;t have this permission, it will throw a SecurityException and jump to the permission setting screen.</p><h2 id="device-getbattery" tabindex="-1"><a class="header-anchor" href="#device-getbattery" aria-hidden="true">#</a> device.getBattery()</h2><ul><li>{number} A floating point number from 0.0 to 100.0.</li></ul><p>Return the current battery percentage.</p><h2 id="device-ischarging" tabindex="-1"><a class="header-anchor" href="#device-ischarging" aria-hidden="true">#</a> device.isCharging()</h2><ul><li>{boolean}</li></ul><p>Returns if the device is charging.</p><h2 id="device-gettotalmem" tabindex="-1"><a class="header-anchor" href="#device-gettotalmem" aria-hidden="true">#</a> device.getTotalMem()</h2><ul><li>{number}</li></ul><p>Returns the total amount of device memory in bytes (B). 1MB = 1024 * 1024B.</p><h2 id="device-getavailmem" tabindex="-1"><a class="header-anchor" href="#device-getavailmem" aria-hidden="true">#</a> device.getAvailMem()</h2><ul><li>{number}</li></ul><p>Returns the current available memory of the device in bytes (B).</p><h2 id="device-isscreenon" tabindex="-1"><a class="header-anchor" href="#device-isscreenon" aria-hidden="true">#</a> device.isScreenOn()</h2><ul><li>Returns {boolean}</li></ul><p>Returns whether the device screen is on or off. If the screen is on, returns <code><span class="token boolean">true</span></code>; otherwise returns <code><span class="token boolean">false</span></code>.</p><p>Note that the rest screen clock of Vivo xplay series does not belong to the case of &quot;screen on&quot;, although the screen is indeed on, it only shows the clock and is not interactive, so <code><span class="token function">isScreenOn</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code> will also return <code><span class="token boolean">false</span></code>.</p><h2 id="device-wakeup" tabindex="-1"><a class="header-anchor" href="#device-wakeup" aria-hidden="true">#</a> device.wakeUp()</h2><p>Wake up the device. This includes waking up the device CPU, screen, etc. Can be used to light up the screen.</p><h2 id="device-wakeupifneeded" tabindex="-1"><a class="header-anchor" href="#device-wakeupifneeded" aria-hidden="true">#</a> device.wakeUpIfNeeded()</h2><p>Wake up the device if the screen is not lit.</p><h2 id="device-keepscreenon-timeout" tabindex="-1"><a class="header-anchor" href="#device-keepscreenon-timeout" aria-hidden="true">#</a> device.keepScreenOn([timeout])</h2><ul><li><code><span class="token property">timeout</span></code> {number} The time, in milliseconds, that the screen stays on. If this parameter is not added, the screen will always be kept on.</li></ul><p>Keep the screen always on.</p><p>This function does not prevent the user from using the lock button, etc. to turn off the screen normally, but only makes the device keep the screen always on when no one is operating it; also, if the screen is not lit when this function is called, it will wake up the screen.</p><p>On some devices, if the parameter timeout is not added, it can only keep the screen always on in the interface of Auto.js, and it will automatically fail in other interfaces, which is caused by the power saving strategy of the device. Therefore, it is recommended to use a longer timeout instead of <code><span class="token function">keepScreenOn</span><span class="token punctuation">(</span><span class="token number">3600</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span></code>.</p><p>You can use <code>device<span class="token punctuation">.</span><span class="token function">cancelKeepingAwake</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code> to cancel the screen on.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//Keep the screen on all the time</span>
device<span class="token punctuation">.</span><span class="token function">keepScreenOn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="device-keepscreendim-timeout" tabindex="-1"><a class="header-anchor" href="#device-keepscreendim-timeout" aria-hidden="true">#</a> device.keepScreenDim([timeout])</h2><ul><li><code><span class="token property">timeout</span></code> {number} The amount of time the screen stays on, in milliseconds. If this parameter is not added, the screen is kept always on.</li></ul><p>Keep the screen always on, but allow it to dim to save power. This function can be used for timed script wakeup operations that do not require the user to look at the screen, and can allow the screen to dim to save power.</p><p>This function cannot prevent the user from using the lock button, etc. to turn off the screen normally, but can only make the device keep the screen always on when no one is operating it; also, if the screen is not lit when this function is called, it will wake up the screen.</p><p>You can use <code>device<span class="token punctuation">.</span><span class="token function">cancelKeepingAwake</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code> to cancel the screen always on.</p><h2 id="device-cancelkeepingawake" tabindex="-1"><a class="header-anchor" href="#device-cancelkeepingawake" aria-hidden="true">#</a> device.cancelKeepingAwake()</h2><p>Cancel the device keeping awake state. Used to cancel the constant screen light set by <code>device<span class="token punctuation">.</span><span class="token function">keepScreenOn</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code>, <code>device<span class="token punctuation">.</span><span class="token function">keepScreenDim</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code> and other functions.</p><h2 id="device-vibrate-ms" tabindex="-1"><a class="header-anchor" href="#device-vibrate-ms" aria-hidden="true">#</a> device.vibrate(ms)</h2><ul><li><code><span class="token property">ms</span></code> {number} The time to vibrate, in milliseconds</li></ul><p>Make the device vibrate for a period of time.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// Vibrate for two seconds</span>
device<span class="token punctuation">.</span><span class="token function">vibrate</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="device-cancelvibration" tabindex="-1"><a class="header-anchor" href="#device-cancelvibration" aria-hidden="true">#</a> device.cancelVibration()</h2><p>Cancel vibration if the device is in vibration state.</p>`,167),r=[s];function o(d,c){return i(),a("div",null,r)}const u=e(n,[["render",o],["__file","device.html.vue"]]);export{u as default};
