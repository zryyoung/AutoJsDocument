import{_ as d}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as h,c,a as e,d as o,w as s,b as t,e as n,r as l}from"./app.6aa2b576.js";const i={},p=e("h1",{id:"class-hslcolor",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#class-hslcolor","aria-hidden":"true"},"#"),t(" Class: HSLColor")],-1),u=e("p",null,"A color represented using [alpha], [hue], [saturation], and [lightness].",-1),_=e("p",null,"An [HSLColor] is represented in a parameter space that's based up human perception of colored light. The representation is useful for some color computations (e.g., combining colors of light), because interpolation and picking of colors as red, green, and blue channels doesn't always produce intuitive results.",-1),f=e("p",null,"HSL is a perceptual color model, placing fully saturated colors around a circle (conceptually) at a lightness of \u200B0.5, with a lightness of 0.0 being completely black, and a lightness of 1.0 being completely white. As the lightness increases or decreases from 0.5, the apparent saturation decreases proportionally (even though the [saturation] parameter hasn't changed).",-1),g=e("p",null,"See also:",-1),y=e("li",null,"[HSVColor], a color that uses a color space based on human perception of pigments (e.g. paint and printer's ink).",-1),m={href:"https://en.wikipedia.org/wiki/HSL_and_HSV",target:"_blank",rel:"noopener noreferrer"},b=e("h2",{id:"table-of-contents",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#table-of-contents","aria-hidden":"true"},"#"),t(" Table of contents")],-1),k=e("h3",{id:"properties",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#properties","aria-hidden":"true"},"#"),t(" Properties")],-1),x=e("h3",{id:"methods",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#methods","aria-hidden":"true"},"#"),t(" Methods")],-1),C=n('<h2 id="properties-1" tabindex="-1"><a class="header-anchor" href="#properties-1" aria-hidden="true">#</a> Properties</h2><h3 id="alpha" tabindex="-1"><a class="header-anchor" href="#alpha" aria-hidden="true">#</a> alpha</h3><p>\u2022 <code><span class="token property">Readonly</span></code> <strong>alpha</strong>: <code><span class="token property">number</span></code></p><p>Alpha, from 0.0 to 1.0. The describes the transparency of the color. A value of 0.0 is fully transparent, and 1.0 is fully opaque.</p><hr><h3 id="hue" tabindex="-1"><a class="header-anchor" href="#hue" aria-hidden="true">#</a> hue</h3><p>\u2022 <code><span class="token property">Readonly</span></code> <strong>hue</strong>: <code><span class="token property">number</span></code></p><p>Hue, from 0.0 to 360.0. Describes which color of the spectrum is represented. A value of 0.0 represents red, as does 360.0. Values in between go through all the hues representable in RGB. You can think of this as selecting which color filter is placed over a light.</p><hr><h3 id="lightness" tabindex="-1"><a class="header-anchor" href="#lightness" aria-hidden="true">#</a> lightness</h3><p>\u2022 <code><span class="token property">Readonly</span></code> <strong>lightness</strong>: <code><span class="token property">number</span></code></p><p>Lightness, from 0.0 to 1.0. The lightness of a color describes how bright a color is. A value of 0.0 indicates black, and 1.0 indicates white. You can think of this as the intensity of the light behind the filter. As the lightness approaches 0.5, the colors get brighter and appear more saturated, and over 0.5, the colors start to become less saturated and approach white at 1.0.</p><hr><h3 id="saturation" tabindex="-1"><a class="header-anchor" href="#saturation" aria-hidden="true">#</a> saturation</h3><p>\u2022 <code><span class="token property">Readonly</span></code> <strong>saturation</strong>: <code><span class="token property">number</span></code></p><p>Saturation, from 0.0 to 1.0. This describes how colorful the color is. 0.0 implies a shade of grey (i.e. no pigment), and 1.0 implies a color as vibrant as that hue gets. You can think of this as the purity of the color filter over the light.</p><h2 id="methods-1" tabindex="-1"><a class="header-anchor" href="#methods-1" aria-hidden="true">#</a> Methods</h2><h3 id="scalealpha" tabindex="-1"><a class="header-anchor" href="#scalealpha" aria-hidden="true">#</a> _scaleAlpha</h3>',18),S=e("strong",null,"_scaleAlpha",-1),L=e("code",null,[e("span",{class:"token property"},"factor")],-1),H=e("code",null,[e("span",{class:"token property"},"HSLColor")],-1),v=n('<h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code><span class="token property">factor</span></code></td><td style="text-align:left;"><code><span class="token property">number</span></code></td></tr></tbody></table><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns" aria-hidden="true">#</a> Returns</h4>',3),w=e("code",null,[e("span",{class:"token property"},"HSLColor")],-1),R=n('<hr><h3 id="equals" tabindex="-1"><a class="header-anchor" href="#equals" aria-hidden="true">#</a> equals</h3><p>\u25B8 <strong>equals</strong>(<code><span class="token property">other</span></code>): <code><span class="token property">boolean</span></code></p><h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code><span class="token property">other</span></code></td><td style="text-align:left;"><code><span class="token property">any</span></code></td></tr></tbody></table><h4 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1" aria-hidden="true">#</a> Returns</h4><p><code><span class="token property">boolean</span></code></p><hr><h3 id="tocolor" tabindex="-1"><a class="header-anchor" href="#tocolor" aria-hidden="true">#</a> toColor</h3>',9),A=e("strong",null,"toColor",-1),T=e("code",null,[e("span",{class:"token property"},"Color")],-1),N=e("p",null,"Returns this HSL color in RGB.",-1),P=e("h4",{id:"returns-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-2","aria-hidden":"true"},"#"),t(" Returns")],-1),V=e("code",null,[e("span",{class:"token property"},"Color")],-1),q=n('<hr><h3 id="tostring" tabindex="-1"><a class="header-anchor" href="#tostring" aria-hidden="true">#</a> toString</h3><p>\u25B8 <strong>toString</strong>(): <code><span class="token property">String</span></code></p><h4 id="returns-3" tabindex="-1"><a class="header-anchor" href="#returns-3" aria-hidden="true">#</a> Returns</h4><p><code><span class="token property">String</span></code></p><hr><h3 id="withalpha" tabindex="-1"><a class="header-anchor" href="#withalpha" aria-hidden="true">#</a> withAlpha</h3>',7),B=e("strong",null,"withAlpha",-1),I=e("code",null,[e("span",{class:"token property"},"alpha")],-1),E=e("code",null,[e("span",{class:"token property"},"HSLColor")],-1),G=n('<p>Returns a copy of this color with the alpha parameter replaced with the given value.</p><h4 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code><span class="token property">alpha</span></code></td><td style="text-align:left;"><code><span class="token property">number</span></code></td></tr></tbody></table><h4 id="returns-4" tabindex="-1"><a class="header-anchor" href="#returns-4" aria-hidden="true">#</a> Returns</h4>',4),Y=e("code",null,[e("span",{class:"token property"},"HSLColor")],-1),D=e("hr",null,null,-1),M=e("h3",{id:"withhue",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#withhue","aria-hidden":"true"},"#"),t(" withHue")],-1),j=e("strong",null,"withHue",-1),O=e("code",null,[e("span",{class:"token property"},"hue")],-1),W=e("code",null,[e("span",{class:"token property"},"HSLColor")],-1),z=n('<p>Returns a copy of this color with the [hue] parameter replaced with the given value.</p><h4 id="parameters-3" tabindex="-1"><a class="header-anchor" href="#parameters-3" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code><span class="token property">hue</span></code></td><td style="text-align:left;"><code><span class="token property">number</span></code></td></tr></tbody></table><h4 id="returns-5" tabindex="-1"><a class="header-anchor" href="#returns-5" aria-hidden="true">#</a> Returns</h4>',4),F=e("code",null,[e("span",{class:"token property"},"HSLColor")],-1),J=e("hr",null,null,-1),K=e("h3",{id:"withlightness",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#withlightness","aria-hidden":"true"},"#"),t(" withLightness")],-1),Q=e("strong",null,"withLightness",-1),U=e("code",null,[e("span",{class:"token property"},"lightness")],-1),X=e("code",null,[e("span",{class:"token property"},"HSLColor")],-1),Z=n('<p>Returns a copy of this color with the [lightness] parameter replaced with the given value.</p><h4 id="parameters-4" tabindex="-1"><a class="header-anchor" href="#parameters-4" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code><span class="token property">lightness</span></code></td><td style="text-align:left;"><code><span class="token property">number</span></code></td></tr></tbody></table><h4 id="returns-6" tabindex="-1"><a class="header-anchor" href="#returns-6" aria-hidden="true">#</a> Returns</h4>',4),$=e("code",null,[e("span",{class:"token property"},"HSLColor")],-1),ee=e("hr",null,null,-1),te=e("h3",{id:"withsaturation",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#withsaturation","aria-hidden":"true"},"#"),t(" withSaturation")],-1),oe=e("strong",null,"withSaturation",-1),ae=e("code",null,[e("span",{class:"token property"},"saturation")],-1),se=e("code",null,[e("span",{class:"token property"},"HSLColor")],-1),ne=n('<p>Returns a copy of this color with the [saturation] parameter replaced with the given value.</p><h4 id="parameters-5" tabindex="-1"><a class="header-anchor" href="#parameters-5" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code><span class="token property">saturation</span></code></td><td style="text-align:left;"><code><span class="token property">number</span></code></td></tr></tbody></table><h4 id="returns-7" tabindex="-1"><a class="header-anchor" href="#returns-7" aria-hidden="true">#</a> Returns</h4>',4),le=e("code",null,[e("span",{class:"token property"},"HSLColor")],-1),re=e("hr",null,null,-1),de=e("h3",{id:"fromahsl",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#fromahsl","aria-hidden":"true"},"#"),t(" fromAHSL")],-1),he=e("code",null,[e("span",{class:"token property"},"Static")],-1),ce=e("strong",null,"fromAHSL",-1),ie=e("code",null,[e("span",{class:"token property"},"alpha")],-1),pe=e("code",null,[e("span",{class:"token property"},"hue")],-1),ue=e("code",null,[e("span",{class:"token property"},"saturation")],-1),_e=e("code",null,[e("span",{class:"token property"},"lightness")],-1),fe=e("code",null,[e("span",{class:"token property"},"HSLColor")],-1),ge=n('<p>Creates a color.</p><p>All the arguments must not be null and be in their respective ranges. See the fields for each parameter for a description of their ranges.</p><h4 id="parameters-6" tabindex="-1"><a class="header-anchor" href="#parameters-6" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code><span class="token property">alpha</span></code></td><td style="text-align:left;"><code><span class="token property">number</span></code></td></tr><tr><td style="text-align:left;"><code><span class="token property">hue</span></code></td><td style="text-align:left;"><code><span class="token property">number</span></code></td></tr><tr><td style="text-align:left;"><code><span class="token property">saturation</span></code></td><td style="text-align:left;"><code><span class="token property">number</span></code></td></tr><tr><td style="text-align:left;"><code><span class="token property">lightness</span></code></td><td style="text-align:left;"><code><span class="token property">number</span></code></td></tr></tbody></table><h4 id="returns-8" tabindex="-1"><a class="header-anchor" href="#returns-8" aria-hidden="true">#</a> Returns</h4>',5),ye=e("code",null,[e("span",{class:"token property"},"HSLColor")],-1),me=e("hr",null,null,-1),be=e("h3",{id:"fromcolor",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#fromcolor","aria-hidden":"true"},"#"),t(" fromColor")],-1),ke=e("code",null,[e("span",{class:"token property"},"Static")],-1),xe=e("strong",null,"fromColor",-1),Ce=e("code",null,[e("span",{class:"token property"},"color")],-1),Se=e("code",null,[e("span",{class:"token property"},"HSLColor")],-1),Le=e("p",null,"Creates an [HSLColor] from an RGB [Color].",-1),He=e("p",null,"This constructor does not necessarily round-trip with [toColor] because of floating point imprecision.",-1),ve=e("h4",{id:"parameters-7",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-7","aria-hidden":"true"},"#"),t(" Parameters")],-1),we=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Re=e("td",{style:{"text-align":"left"}},[e("code",null,[e("span",{class:"token property"},"color")])],-1),Ae={style:{"text-align":"left"}},Te=e("code",null,[e("span",{class:"token property"},"Color")],-1),Ne=e("h4",{id:"returns-9",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-9","aria-hidden":"true"},"#"),t(" Returns")],-1),Pe=e("code",null,[e("span",{class:"token property"},"HSLColor")],-1),Ve=e("hr",null,null,-1),qe=e("h3",{id:"lerp",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#lerp","aria-hidden":"true"},"#"),t(" lerp")],-1),Be=e("code",null,[e("span",{class:"token property"},"Static")],-1),Ie=e("strong",null,"lerp",-1),Ee=e("code",null,[e("span",{class:"token property"},"a")],-1),Ge=e("code",null,[e("span",{class:"token property"},"b")],-1),Ye=e("code",null,[e("span",{class:"token property"},"t")],-1),De=e("code",null,[e("span",{class:"token keyword"},"null")],-1),Me=e("code",null,[e("span",{class:"token property"},"HSLColor")],-1),je=n('<p>Linearly interpolate between two HSLColors.</p><p>The colors are interpolated by interpolating the [alpha], [hue], [saturation], and [lightness] channels separately, which usually leads to a more pleasing effect than [Color.lerp] (which interpolates the red, green, and blue channels separately).</p><p>If either color is null, this function linearly interpolates from a transparent instance of the other color. This is usually preferable to interpolating from [Colors.transparent] (<code><span class="token keyword">const</span> <span class="token function">Color</span><span class="token punctuation">(</span><span class="token number">0x00000000</span><span class="token punctuation">)</span></code>) since that will interpolate from a transparent red and cycle through the hues to match the target color, regardless of what that color&#39;s hue is.</p><p>The <code><span class="token property">t</span></code> argument represents position on the timeline, with 0.0 meaning that the interpolation has not started, returning <code><span class="token property">a</span></code> (or something equivalent to <code><span class="token property">a</span></code>), 1.0 meaning that the interpolation has finished, returning <code><span class="token property">b</span></code> (or something equivalent to <code><span class="token property">b</span></code>), and values between them meaning that the interpolation is at the relevant point on the timeline between <code><span class="token property">a</span></code> and <code><span class="token property">b</span></code>. The interpolation can be extrapolated beyond 0.0 and 1.0, so negative values and values greater than 1.0 are valid (and can easily be generated by curves such as [Curves.elasticInOut]).</p><p>Values outside of the valid range for each channel will be clamped.</p><p>Values for <code><span class="token property">t</span></code> are usually obtained from an [Animation&lt;double&gt;], such as an [AnimationController].</p><h4 id="parameters-8" tabindex="-1"><a class="header-anchor" href="#parameters-8" aria-hidden="true">#</a> Parameters</h4>',7),Oe=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),We=e("td",{style:{"text-align":"left"}},[e("code",null,[e("span",{class:"token property"},"a")])],-1),ze={style:{"text-align":"left"}},Fe=e("code",null,[e("span",{class:"token keyword"},"null")],-1),Je=e("code",null,[e("span",{class:"token property"},"HSLColor")],-1),Ke=e("td",{style:{"text-align":"left"}},[e("code",null,[e("span",{class:"token property"},"b")])],-1),Qe={style:{"text-align":"left"}},Ue=e("code",null,[e("span",{class:"token keyword"},"null")],-1),Xe=e("code",null,[e("span",{class:"token property"},"HSLColor")],-1),Ze=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,[e("span",{class:"token property"},"t")])]),e("td",{style:{"text-align":"left"}},[e("code",null,[e("span",{class:"token property"},"number")])])],-1),$e=e("h4",{id:"returns-10",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-10","aria-hidden":"true"},"#"),t(" Returns")],-1),et=e("code",null,[e("span",{class:"token keyword"},"null")],-1),tt=e("code",null,[e("span",{class:"token property"},"HSLColor")],-1);function ot(at,st){const a=l("RouterLink"),r=l("ExternalLinkIcon");return h(),c("div",null,[e("p",null,[o(a,{to:"/en/v9/generated/"},{default:s(()=>[t("Auto.js Pro 9 Docs")]),_:1}),t(" / "),o(a,{to:"/en/v9/generated/modules/color.html"},{default:s(()=>[t("color")]),_:1}),t(" / HSLColor")]),p,e("p",null,[o(a,{to:"/en/v9/generated/modules/color.html"},{default:s(()=>[t("color")]),_:1}),t(".HSLColor")]),u,_,f,g,e("ul",null,[y,e("li",null,[e("a",m,[t("HSV and HSL"),o(r)]),t(" Wikipedia article, which this implementation is based upon.")])]),b,k,e("ul",null,[e("li",null,[o(a,{to:"/en/v9/generated/classes/color.HSLColor.html#alpha"},{default:s(()=>[t("alpha")]),_:1})]),e("li",null,[o(a,{to:"/en/v9/generated/classes/color.HSLColor.html#hue"},{default:s(()=>[t("hue")]),_:1})]),e("li",null,[o(a,{to:"/en/v9/generated/classes/color.HSLColor.html#lightness"},{default:s(()=>[t("lightness")]),_:1})]),e("li",null,[o(a,{to:"/en/v9/generated/classes/color.HSLColor.html#saturation"},{default:s(()=>[t("saturation")]),_:1})])]),x,e("ul",null,[e("li",null,[o(a,{to:"/en/v9/generated/classes/color.HSLColor.html#_scalealpha"},{default:s(()=>[t("_scaleAlpha")]),_:1})]),e("li",null,[o(a,{to:"/en/v9/generated/classes/color.HSLColor.html#equals"},{default:s(()=>[t("equals")]),_:1})]),e("li",null,[o(a,{to:"/en/v9/generated/classes/color.HSLColor.html#tocolor"},{default:s(()=>[t("toColor")]),_:1})]),e("li",null,[o(a,{to:"/en/v9/generated/classes/color.HSLColor.html#tostring"},{default:s(()=>[t("toString")]),_:1})]),e("li",null,[o(a,{to:"/en/v9/generated/classes/color.HSLColor.html#withalpha"},{default:s(()=>[t("withAlpha")]),_:1})]),e("li",null,[o(a,{to:"/en/v9/generated/classes/color.HSLColor.html#withhue"},{default:s(()=>[t("withHue")]),_:1})]),e("li",null,[o(a,{to:"/en/v9/generated/classes/color.HSLColor.html#withlightness"},{default:s(()=>[t("withLightness")]),_:1})]),e("li",null,[o(a,{to:"/en/v9/generated/classes/color.HSLColor.html#withsaturation"},{default:s(()=>[t("withSaturation")]),_:1})]),e("li",null,[o(a,{to:"/en/v9/generated/classes/color.HSLColor.html#fromahsl"},{default:s(()=>[t("fromAHSL")]),_:1})]),e("li",null,[o(a,{to:"/en/v9/generated/classes/color.HSLColor.html#fromcolor"},{default:s(()=>[t("fromColor")]),_:1})]),e("li",null,[o(a,{to:"/en/v9/generated/classes/color.HSLColor.html#lerp"},{default:s(()=>[t("lerp")]),_:1})])]),C,e("p",null,[t("\u25B8 "),S,t("("),L,t("): "),o(a,{to:"/en/v9/generated/classes/color.HSLColor.html"},{default:s(()=>[H]),_:1})]),v,e("p",null,[o(a,{to:"/en/v9/generated/classes/color.HSLColor.html"},{default:s(()=>[w]),_:1})]),R,e("p",null,[t("\u25B8 "),A,t("(): "),o(a,{to:"/en/v9/generated/classes/color.Color.html"},{default:s(()=>[T]),_:1})]),N,P,e("p",null,[o(a,{to:"/en/v9/generated/classes/color.Color.html"},{default:s(()=>[V]),_:1})]),q,e("p",null,[t("\u25B8 "),B,t("("),I,t("): "),o(a,{to:"/en/v9/generated/classes/color.HSLColor.html"},{default:s(()=>[E]),_:1})]),G,e("p",null,[o(a,{to:"/en/v9/generated/classes/color.HSLColor.html"},{default:s(()=>[Y]),_:1})]),D,M,e("p",null,[t("\u25B8 "),j,t("("),O,t("): "),o(a,{to:"/en/v9/generated/classes/color.HSLColor.html"},{default:s(()=>[W]),_:1})]),z,e("p",null,[o(a,{to:"/en/v9/generated/classes/color.HSLColor.html"},{default:s(()=>[F]),_:1})]),J,K,e("p",null,[t("\u25B8 "),Q,t("("),U,t("): "),o(a,{to:"/en/v9/generated/classes/color.HSLColor.html"},{default:s(()=>[X]),_:1})]),Z,e("p",null,[o(a,{to:"/en/v9/generated/classes/color.HSLColor.html"},{default:s(()=>[$]),_:1})]),ee,te,e("p",null,[t("\u25B8 "),oe,t("("),ae,t("): "),o(a,{to:"/en/v9/generated/classes/color.HSLColor.html"},{default:s(()=>[se]),_:1})]),ne,e("p",null,[o(a,{to:"/en/v9/generated/classes/color.HSLColor.html"},{default:s(()=>[le]),_:1})]),re,de,e("p",null,[t("\u25B8 "),he,t(),ce,t("("),ie,t(", "),pe,t(", "),ue,t(", "),_e,t("): "),o(a,{to:"/en/v9/generated/classes/color.HSLColor.html"},{default:s(()=>[fe]),_:1})]),ge,e("p",null,[o(a,{to:"/en/v9/generated/classes/color.HSLColor.html"},{default:s(()=>[ye]),_:1})]),me,be,e("p",null,[t("\u25B8 "),ke,t(),xe,t("("),Ce,t("): "),o(a,{to:"/en/v9/generated/classes/color.HSLColor.html"},{default:s(()=>[Se]),_:1})]),Le,He,ve,e("table",null,[we,e("tbody",null,[e("tr",null,[Re,e("td",Ae,[o(a,{to:"/en/v9/generated/classes/color.Color.html"},{default:s(()=>[Te]),_:1})])])])]),Ne,e("p",null,[o(a,{to:"/en/v9/generated/classes/color.HSLColor.html"},{default:s(()=>[Pe]),_:1})]),Ve,qe,e("p",null,[t("\u25B8 "),Be,t(),Ie,t("("),Ee,t(", "),Ge,t(", "),Ye,t("): "),De,t(" | "),o(a,{to:"/en/v9/generated/classes/color.HSLColor.html"},{default:s(()=>[Me]),_:1})]),je,e("table",null,[Oe,e("tbody",null,[e("tr",null,[We,e("td",ze,[Fe,t(" | "),o(a,{to:"/en/v9/generated/classes/color.HSLColor.html"},{default:s(()=>[Je]),_:1})])]),e("tr",null,[Ke,e("td",Qe,[Ue,t(" | "),o(a,{to:"/en/v9/generated/classes/color.HSLColor.html"},{default:s(()=>[Xe]),_:1})])]),Ze])]),$e,e("p",null,[et,t(" | "),o(a,{to:"/en/v9/generated/classes/color.HSLColor.html"},{default:s(()=>[tt]),_:1})])])}const rt=d(i,[["render",ot],["__file","color.HSLColor.html.vue"]]);export{rt as default};
