import{_ as n}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as a,c as s,e}from"./app.6aa2b576.js";const t={},i=e(`<h1 id="media" tabindex="-1"><a class="header-anchor" href="#media" aria-hidden="true">#</a> media</h1><blockquote><p>Stability: 2 - Stable</p></blockquote><p>The media module provides support for multimedia programming. Currently, only music playback and media file scanning are supported. It will be added later in conjunction with the UI for video playback and other features.</p><p>Note that music is played asynchronously in the background when using this module, and will automatically end when the script is finished, so you may need to insert a statement such as <code><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code> to keep the script running. For example.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//play music</span>
media<span class="token punctuation">.</span><span class="token function">playMusic</span><span class="token punctuation">(</span><span class="token string">&quot;/sdcard/1.mp3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//let the music finish playing</span>
<span class="token function">sleep</span><span class="token punctuation">(</span>media<span class="token punctuation">.</span><span class="token function">getMusicDuration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="media-scanfile-path" tabindex="-1"><a class="header-anchor" href="#media-scanfile-path" aria-hidden="true">#</a> media.scanFile(path)</h2><ul><li><code><span class="token property">path</span></code> {string} media file path</li></ul><p>Scans the media file with path path and adds it to the media library; or notifies the media library to remove the file if it is deleted as well.</p><p>Media libraries include albums, music libraries, etc., so this function can be used to add an image file to an album.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// Request Screenshot</span>
<span class="token function">requestScreenCapture</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//Screenshot</span>
<span class="token keyword">var</span> im <span class="token operator">=</span> <span class="token function">captureScreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> path <span class="token operator">=</span> <span class="token string">&quot;/sdcard/screenshot.png&quot;</span><span class="token punctuation">;</span>
<span class="token comment">//Save the image</span>
im<span class="token punctuation">.</span><span class="token function">saveTo</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//add the image to the album</span>
media<span class="token punctuation">.</span><span class="token function">scanFile</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="media-playmusic-path-volume-looping" tabindex="-1"><a class="header-anchor" href="#media-playmusic-path-volume-looping" aria-hidden="true">#</a> media.playMusic(path[, volume, looping])</h2><ul><li><code><span class="token property">path</span></code> {string} the path to the music file</li><li><code><span class="token property">volume</span></code> {number} the volume to be played, a floating point number from 0 to 1, default is 1</li><li><code><span class="token property">looping</span></code> {boolean} if or not to loop, if looping is <code><span class="token boolean">true</span></code> then loop, default is <code><span class="token boolean">false</span></code>.</li></ul><p>Play the music file path. this function will not display any music playback screen. Throws an <code><span class="token property">UncheckedIOException</span></code> if the file does not exist or if the file is not in a supported music format.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// Play music</span>
media<span class="token punctuation">.</span><span class="token function">playMusic</span><span class="token punctuation">(</span><span class="token string">&quot;/sdcard/1.mp3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//let the music finish playing</span>
<span class="token function">sleep</span><span class="token punctuation">(</span>media<span class="token punctuation">.</span><span class="token function">getMusicDuration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>If you want to loop the music, use the looping parameter.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code></code></pre><div class="line-numbers" aria-hidden="true"></div></div><p>// Pass the third parameter as true to loop the music media.playMusic(&quot;/sdcard/1.mp3&quot;, 1, true); //wait for three plays sleep(media.getMusicDuration() * 3);</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code></code></pre><div class="line-numbers" aria-hidden="true"></div></div><p>To play music using the music player, call the <code>app<span class="token punctuation">.</span><span class="token function">viewFile</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span></code> function.</p><h2 id="media-musicseekto-msec" tabindex="-1"><a class="header-anchor" href="#media-musicseekto-msec" aria-hidden="true">#</a> media.musicSeekTo(msec)</h2><ul><li><code><span class="token property">msec</span></code> {number} the number of milliseconds, indicating the music progress</li></ul><p>Adjust the current playback progress to the time msec. If no music is currently playing, calling the function will have no effect.</p><p>For example, to adjust the music to 1 minute as <code>media<span class="token punctuation">.</span><span class="token function">musicSeekTo</span><span class="token punctuation">(</span><span class="token number">60</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span></code>.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// Play music</span>
media<span class="token punctuation">.</span><span class="token function">playMusic</span><span class="token punctuation">(</span><span class="token string">&quot;/sdcard/1.mp3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//adjust to 30 seconds</span>
media<span class="token punctuation">.</span><span class="token function">musicSeekTo</span><span class="token punctuation">(</span><span class="token number">30</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//wait for music to finish playing</span>
<span class="token function">sleep</span><span class="token punctuation">(</span>media<span class="token punctuation">.</span><span class="token function">getMusicDuration</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">30</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="media-pausemusic" tabindex="-1"><a class="header-anchor" href="#media-pausemusic" aria-hidden="true">#</a> media.pauseMusic()</h2><p>Pause music playback. If no music is currently playing, calling the function has no effect.</p><h2 id="media-resumemusic" tabindex="-1"><a class="header-anchor" href="#media-resumemusic" aria-hidden="true">#</a> media.resumeMusic()</h2><p>Continue music playback. Calling this function has no effect if no music is currently playing.</p><h2 id="media-stopmusic" tabindex="-1"><a class="header-anchor" href="#media-stopmusic" aria-hidden="true">#</a> media.stopMusic()</h2><p>Stop music. If no music is currently playing, calling the function has no effect.</p><h2 id="media-ismusicplaying" tabindex="-1"><a class="header-anchor" href="#media-ismusicplaying" aria-hidden="true">#</a> media.isMusicPlaying()</h2><ul><li>Returns {boolean}</li></ul><p>Returns whether music is currently playing.</p><h2 id="media-getmusicduration" tabindex="-1"><a class="header-anchor" href="#media-getmusicduration" aria-hidden="true">#</a> media.getMusicDuration()</h2><ul><li>Rtn {number}</li></ul><p>Returns the duration of the current music. The unit is milliseconds.</p><h2 id="media-getmusiccurrentposition" tabindex="-1"><a class="header-anchor" href="#media-getmusiccurrentposition" aria-hidden="true">#</a> media.getMusicCurrentPosition()</h2><ul><li>Rtn {number}</li></ul><p>Returns the current music position (how long it has been playing) in milliseconds.</p>`,39),p=[i];function c(o,l){return a(),s("div",null,p)}const r=n(t,[["render",c],["__file","media.html.vue"]]);export{r as default};
