import{_ as i}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as c,c as r,a as n,d as t,w as e,b as s,e as o,r as l}from"./app.6aa2b576.js";const d={},u=o('<h1 id="dialogs" tabindex="-1"><a class="header-anchor" href="#dialogs" aria-hidden="true">#</a> dialogs</h1><p>dialogs module is used to show dialogs, which is usually used to show user key information, input information, and complete simple interaction.</p><p>This module provides multiple configuration modes, which can be displayed in the application dialog or floating window, confirm dialog, input box, radio button, and so on.</p><p>You can use <code><span class="token keyword">const</span> dialogs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;dialogs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code> to import dialogs module. Then you can use <code>dialogs<span class="token punctuation">.</span><span class="token function">showInputDialog</span><span class="token punctuation">(</span><span class="token string">&quot;Title&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Text&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code> to call the module&#39;s method.</p><p>You can also directly import the function you want to use, such as <code><span class="token keyword">const</span> <span class="token punctuation">{</span> showInputDialog <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;dialogs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">showInputDialog</span><span class="token punctuation">(</span><span class="token string">&quot;Title&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Text&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></p><h2 id="table-of-contents" tabindex="-1"><a class="header-anchor" href="#table-of-contents" aria-hidden="true">#</a> Table of contents</h2><h3 id="interfaces" tabindex="-1"><a class="header-anchor" href="#interfaces" aria-hidden="true">#</a> Interfaces</h3>',7),h=n("h3",{id:"type-aliases",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#type-aliases","aria-hidden":"true"},"#"),s(" Type Aliases")],-1),g=n("h3",{id:"variables",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#variables","aria-hidden":"true"},"#"),s(" Variables")],-1),k=n("h3",{id:"functions",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#functions","aria-hidden":"true"},"#"),s(" Functions")],-1),f=n("h2",{id:"type-aliases-1",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#type-aliases-1","aria-hidden":"true"},"#"),s(" Type Aliases")],-1),m=n("h3",{id:"dialog",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#dialog","aria-hidden":"true"},"#"),s(" Dialog")],-1),y=n("strong",null,"Dialog",-1),_=n("code",null,[s("android"),n("span",{class:"token punctuation"},"."),s("app"),n("span",{class:"token punctuation"},"."),s("Dialog")],-1),v=n("code",null,[n("span",{class:"token property"},"DialogExt")],-1),b={href:"https://developer.android.com/reference/android/app/Dialog.html",target:"_blank",rel:"noopener noreferrer"},x=o('<hr><h3 id="dialogtype" tabindex="-1"><a class="header-anchor" href="#dialogtype" aria-hidden="true">#</a> DialogType</h3><p>\u01AC <strong>DialogType</strong>: <code><span class="token string">&quot;overlay&quot;</span></code> | <code><span class="token string">&quot;app&quot;</span></code></p><p>The type of the dialog.</p><ul><li>overlay: can be shown on other applications, need floating window permission.</li><li>app: application-level dialog, can only be shown in the current activity, no extra permission required.</li></ul><h2 id="variables-1" tabindex="-1"><a class="header-anchor" href="#variables-1" aria-hidden="true">#</a> Variables</h2><h3 id="defaultdialogtype" tabindex="-1"><a class="header-anchor" href="#defaultdialogtype" aria-hidden="true">#</a> defaultDialogType</h3>',7),w=n("strong",null,"defaultDialogType",-1),D=n("code",null,[n("span",{class:"token property"},"DialogType")],-1),q=n("code",null,[n("span",{class:"token string"},"'app'")],-1),P=n("p",null,[n("strong",null,[n("code",null,[n("span",{class:"token property"},"See")])])],-1),T=n("h2",{id:"functions-1",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#functions-1","aria-hidden":"true"},"#"),s(" Functions")],-1),S=n("h3",{id:"builddialog",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#builddialog","aria-hidden":"true"},"#"),s(" buildDialog")],-1),j=n("strong",null,"buildDialog",-1),C=n("code",null,[n("span",{class:"token property"},"properties")],-1),I=n("code",null,[n("span",{class:"token property"},"Promise")],-1),N=n("code",null,[n("span",{class:"token property"},"Dialog")],-1),E=n("p",null,"Create a dialog. You can customize dialog's title, content, progress, input, button, etc.",-1),A=n("h4",{id:"parameters",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#parameters","aria-hidden":"true"},"#"),s(" Parameters")],-1),R=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"left"}},"Name"),n("th",{style:{"text-align":"left"}},"Type"),n("th",{style:{"text-align":"left"}},"Description")])],-1),M=n("td",{style:{"text-align":"left"}},[n("code",null,[n("span",{class:"token property"},"properties")])],-1),V={style:{"text-align":"left"}},Y=n("code",null,[n("span",{class:"token property"},"DialogProperties")],-1),L={style:{"text-align":"left"}},$=n("h4",{id:"returns",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#returns","aria-hidden":"true"},"#"),s(" Returns")],-1),B=n("code",null,[n("span",{class:"token property"},"Promise")],-1),F=n("code",null,[n("span",{class:"token property"},"Dialog")],-1),z=o(`<p>Dialog object&#39;s Promise</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> buildDialog<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;dialogs&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> dialog <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">buildDialog</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
     <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
     <span class="token literal-property property">content</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;positive&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;positive&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  dialog<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="setdefaultdialogtype" tabindex="-1"><a class="header-anchor" href="#setdefaultdialogtype" aria-hidden="true">#</a> setDefaultDialogType</h3><p>\u25B8 <strong>setDefaultDialogType</strong>(<code><span class="token property">type</span></code>): <code><span class="token keyword">void</span></code></p><p><strong><code><span class="token property">See</span></code></strong></p>`,6),G=n("h4",{id:"parameters-1",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#parameters-1","aria-hidden":"true"},"#"),s(" Parameters")],-1),H=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"left"}},"Name"),n("th",{style:{"text-align":"left"}},"Type")])],-1),J=n("td",{style:{"text-align":"left"}},[n("code",null,[n("span",{class:"token property"},"type")])],-1),K={style:{"text-align":"left"}},O=n("code",null,[n("span",{class:"token property"},"DialogType")],-1),Q=o(`<h4 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1" aria-hidden="true">#</a> Returns</h4><p><code><span class="token keyword">void</span></code></p><hr><h3 id="showalertdialog" tabindex="-1"><a class="header-anchor" href="#showalertdialog" aria-hidden="true">#</a> showAlertDialog</h3><p>\u25B8 <strong>showAlertDialog</strong>(<code><span class="token property">title</span></code>, <code>properties<span class="token operator">?</span></code>): <code><span class="token property">Promise</span></code>&lt;<code><span class="token keyword">void</span></code>&gt;</p><p>Show a alert dialog. Alert dialog includes title, content and a confirm button.</p><p><strong><code><span class="token property">Example</span></code></strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> showAlertDialog <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;dialogs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">alert</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">await</span> <span class="token function">showAlertDialog</span><span class="token punctuation">(</span><span class="token string">&quot;This is an alert dialog.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> <span class="token function">showAlertDialog</span><span class="token punctuation">(</span><span class="token string">&quot;Summary&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">content</span><span class="token operator">:</span> <span class="token string">&quot;Some description&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">alert</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2" aria-hidden="true">#</a> Parameters</h4>`,9),U=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"left"}},"Name"),n("th",{style:{"text-align":"left"}},"Type"),n("th",{style:{"text-align":"left"}},"Description")])],-1),W=n("tr",null,[n("td",{style:{"text-align":"left"}},[n("code",null,[n("span",{class:"token property"},"title")])]),n("td",{style:{"text-align":"left"}},[n("code",null,[n("span",{class:"token property"},"string")])]),n("td",{style:{"text-align":"left"}},"The title of the dialog.")],-1),X=n("td",{style:{"text-align":"left"}},[n("code",null,[s("properties"),n("span",{class:"token operator"},"?")])],-1),Z={style:{"text-align":"left"}},nn=n("code",null,[n("span",{class:"token property"},"DialogProperties")],-1),sn={style:{"text-align":"left"}},tn=o(`<h4 id="returns-2" tabindex="-1"><a class="header-anchor" href="#returns-2" aria-hidden="true">#</a> Returns</h4><p><code><span class="token property">Promise</span></code>&lt;<code><span class="token keyword">void</span></code>&gt;</p><p>The result of the dialog. You can use await to wait for the dialog to dismiss.</p><hr><h3 id="showconfirmdialog" tabindex="-1"><a class="header-anchor" href="#showconfirmdialog" aria-hidden="true">#</a> showConfirmDialog</h3><p>\u25B8 <strong>showConfirmDialog</strong>(<code><span class="token property">title</span></code>, <code>properties<span class="token operator">?</span></code>): <code><span class="token property">Promise</span></code>&lt;<code><span class="token property">boolean</span></code>&gt;</p><p>Show a confirm dialog, including a confirm button and a cancel button.</p><p><strong><code><span class="token property">Example</span></code></strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> dialogs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;dialogs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">confirm</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> sure <span class="token operator">=</span> <span class="token keyword">await</span> dialogs<span class="token punctuation">.</span><span class="token function">showConfirmDialog</span><span class="token punctuation">(</span><span class="token string">&quot;Are you sure?&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>sure<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true or false</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">await</span> dialogs<span class="token punctuation">.</span><span class="token function">showConfirmDialog</span><span class="token punctuation">(</span><span class="token string">&quot;Are you sure?&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">positive</span><span class="token operator">:</span> <span class="token string">&quot;Yes&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">negative</span><span class="token operator">:</span> <span class="token string">&quot;No&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">confirm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="parameters-3" tabindex="-1"><a class="header-anchor" href="#parameters-3" aria-hidden="true">#</a> Parameters</h4>`,10),an=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"left"}},"Name"),n("th",{style:{"text-align":"left"}},"Type"),n("th",{style:{"text-align":"left"}},"Description")])],-1),en=n("tr",null,[n("td",{style:{"text-align":"left"}},[n("code",null,[n("span",{class:"token property"},"title")])]),n("td",{style:{"text-align":"left"}},[n("code",null,[n("span",{class:"token property"},"string")])]),n("td",{style:{"text-align":"left"}},"The title of the confirm dialog.")],-1),on=n("td",{style:{"text-align":"left"}},[n("code",null,[s("properties"),n("span",{class:"token operator"},"?")])],-1),ln={style:{"text-align":"left"}},pn=n("code",null,[n("span",{class:"token property"},"DialogProperties")],-1),cn={style:{"text-align":"left"}},rn=o('<h4 id="returns-3" tabindex="-1"><a class="header-anchor" href="#returns-3" aria-hidden="true">#</a> Returns</h4><p><code><span class="token property">Promise</span></code>&lt;<code><span class="token property">boolean</span></code>&gt;</p><p>The result of the dialog. You can use await to get the result.</p><hr><h3 id="showdialog" tabindex="-1"><a class="header-anchor" href="#showdialog" aria-hidden="true">#</a> showDialog</h3>',5),dn=n("strong",null,"showDialog",-1),un=n("code",null,[n("span",{class:"token property"},"properties")],-1),hn=n("code",null,[n("span",{class:"token property"},"Promise")],-1),gn=n("code",null,[n("span",{class:"token property"},"Dialog")],-1),kn=n("code",null,[n("span",{class:"token property"},"show")],-1),fn=n("h4",{id:"parameters-4",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#parameters-4","aria-hidden":"true"},"#"),s(" Parameters")],-1),mn=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"left"}},"Name"),n("th",{style:{"text-align":"left"}},"Type"),n("th",{style:{"text-align":"left"}},"Description")])],-1),yn=n("td",{style:{"text-align":"left"}},[n("code",null,[n("span",{class:"token property"},"properties")])],-1),_n={style:{"text-align":"left"}},vn=n("code",null,[n("span",{class:"token property"},"DialogProperties")],-1),bn={style:{"text-align":"left"}},xn=n("h4",{id:"returns-4",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#returns-4","aria-hidden":"true"},"#"),s(" Returns")],-1),wn=n("code",null,[n("span",{class:"token property"},"Promise")],-1),Dn=n("code",null,[n("span",{class:"token property"},"Dialog")],-1),qn=o(`<p>Dialog object&#39;s Promise</p><hr><h3 id="showinputdialog" tabindex="-1"><a class="header-anchor" href="#showinputdialog" aria-hidden="true">#</a> showInputDialog</h3><p>\u25B8 <strong>showInputDialog</strong>(<code><span class="token property">title</span></code>, <code>prefill<span class="token operator">?</span></code>, <code>properties<span class="token operator">?</span></code>): <code><span class="token property">Promise</span></code>&lt;<code><span class="token property">string</span></code> | <code><span class="token keyword">null</span></code>&gt;</p><p>show a input dialog.</p><p><strong><code><span class="token property">Example</span></code></strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> dialogs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;dialogs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">inputDialog</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> name <span class="token operator">=</span> <span class="token keyword">await</span> dialogs<span class="token punctuation">.</span><span class="token function">showInputDialog</span><span class="token punctuation">(</span><span class="token string">&quot;Input your name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Tony&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>name <span class="token operator">!=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">hello, </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>mName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token function">inputDialog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="parameters-5" tabindex="-1"><a class="header-anchor" href="#parameters-5" aria-hidden="true">#</a> Parameters</h4>`,8),Pn=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"left"}},"Name"),n("th",{style:{"text-align":"left"}},"Type"),n("th",{style:{"text-align":"left"}},"Description")])],-1),Tn=n("tr",null,[n("td",{style:{"text-align":"left"}},[n("code",null,[n("span",{class:"token property"},"title")])]),n("td",{style:{"text-align":"left"}},[n("code",null,[n("span",{class:"token property"},"string")])]),n("td",{style:{"text-align":"left"}},"The title of the input dialog.")],-1),Sn=n("tr",null,[n("td",{style:{"text-align":"left"}},[n("code",null,[s("prefill"),n("span",{class:"token operator"},"?")])]),n("td",{style:{"text-align":"left"}},[n("code",null,[n("span",{class:"token property"},"string")])]),n("td",{style:{"text-align":"left"}},"The default text of the input dialog.")],-1),jn=n("td",{style:{"text-align":"left"}},[n("code",null,[s("properties"),n("span",{class:"token operator"},"?")])],-1),Cn={style:{"text-align":"left"}},In=n("code",null,[n("span",{class:"token property"},"DialogProperties")],-1),Nn={style:{"text-align":"left"}},En=o('<h4 id="returns-5" tabindex="-1"><a class="header-anchor" href="#returns-5" aria-hidden="true">#</a> Returns</h4><p><code><span class="token property">Promise</span></code>&lt;<code><span class="token property">string</span></code> | <code><span class="token keyword">null</span></code>&gt;</p><p>The promise of the input result. If the user cancels the input, the result will be null.</p><hr><h3 id="showmultichoicedialog" tabindex="-1"><a class="header-anchor" href="#showmultichoicedialog" aria-hidden="true">#</a> showMultiChoiceDialog</h3><p>\u25B8 <strong>showMultiChoiceDialog</strong>(<code><span class="token property">title</span></code>, <code><span class="token property">items</span></code>, <code>initialSelectedIndices<span class="token operator">?</span></code>, <code>properties<span class="token operator">?</span></code>): <code><span class="token property">Promise</span></code>&lt;<code><span class="token property">number</span></code>[] | <code><span class="token keyword">null</span></code>&gt;</p><p>Show a multi-choice dialog. Multi-choice dialog includes a title and a multi-choice list, and the user clicks on the list items to confirm.</p><h4 id="parameters-6" tabindex="-1"><a class="header-anchor" href="#parameters-6" aria-hidden="true">#</a> Parameters</h4>',8),An=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"left"}},"Name"),n("th",{style:{"text-align":"left"}},"Type"),n("th",{style:{"text-align":"left"}},"Description")])],-1),Rn=n("tr",null,[n("td",{style:{"text-align":"left"}},[n("code",null,[n("span",{class:"token property"},"title")])]),n("td",{style:{"text-align":"left"}},[n("code",null,[n("span",{class:"token property"},"string")])]),n("td",{style:{"text-align":"left"}},"The title of the multi-choice dialog.")],-1),Mn=n("tr",null,[n("td",{style:{"text-align":"left"}},[n("code",null,[n("span",{class:"token property"},"items")])]),n("td",{style:{"text-align":"left"}},[n("code",null,[n("span",{class:"token property"},"string")]),s("[]")]),n("td",{style:{"text-align":"left"}},"The options of the multi-choice dialog.")],-1),Vn=n("tr",null,[n("td",{style:{"text-align":"left"}},[n("code",null,[s("initialSelectedIndices"),n("span",{class:"token operator"},"?")])]),n("td",{style:{"text-align":"left"}},[n("code",null,[n("span",{class:"token property"},"number")]),s("[]")]),n("td",{style:{"text-align":"left"}},[s("The default selected options. The form is an array of the index of "),n("code",null,[n("span",{class:"token property"},"items")]),s(" array.")])],-1),Yn=n("td",{style:{"text-align":"left"}},[n("code",null,[s("properties"),n("span",{class:"token operator"},"?")])],-1),Ln={style:{"text-align":"left"}},$n=n("code",null,[n("span",{class:"token property"},"DialogProperties")],-1),Bn={style:{"text-align":"left"}},Fn=o(`<h4 id="returns-6" tabindex="-1"><a class="header-anchor" href="#returns-6" aria-hidden="true">#</a> Returns</h4><p><code><span class="token property">Promise</span></code>&lt;<code><span class="token property">number</span></code>[] | <code><span class="token keyword">null</span></code>&gt;</p><p>The promise of the selected indices. If the user cancels the multi-choice, the result will be an empty array.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> showMultiChoiceDialog <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;dialogs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">multiChoice</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> indices <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">showMultiChoiceDialog</span><span class="token punctuation">(</span><span class="token string">&quot;Choose items&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&quot;item1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;item2&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;item3&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">selected items: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>indices<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="showselectdialog" tabindex="-1"><a class="header-anchor" href="#showselectdialog" aria-hidden="true">#</a> showSelectDialog</h3><p>\u25B8 <strong>showSelectDialog</strong>(<code><span class="token property">title</span></code>, <code><span class="token property">items</span></code>, <code>properties<span class="token operator">?</span></code>): <code><span class="token property">Promise</span></code>&lt;<code><span class="token property">number</span></code>&gt;</p><p>Show a select dialog.</p><p><strong><code><span class="token property">Example</span></code></strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> showSelectDialog <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;dialogs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> i <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">showSelectDialog</span><span class="token punctuation">(</span><span class="token string">&quot;Select an item&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&quot;item1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;item2&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;item3&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">selected item: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="parameters-7" tabindex="-1"><a class="header-anchor" href="#parameters-7" aria-hidden="true">#</a> Parameters</h4>`,11),zn=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"left"}},"Name"),n("th",{style:{"text-align":"left"}},"Type"),n("th",{style:{"text-align":"left"}},"Description")])],-1),Gn=n("tr",null,[n("td",{style:{"text-align":"left"}},[n("code",null,[n("span",{class:"token property"},"title")])]),n("td",{style:{"text-align":"left"}},[n("code",null,[n("span",{class:"token property"},"string")])]),n("td",{style:{"text-align":"left"}},"The title of the select dialog.")],-1),Hn=n("tr",null,[n("td",{style:{"text-align":"left"}},[n("code",null,[n("span",{class:"token property"},"items")])]),n("td",{style:{"text-align":"left"}},[n("code",null,[n("span",{class:"token property"},"string")]),s("[]")]),n("td",{style:{"text-align":"left"}},"The options of the select dialog.")],-1),Jn=n("td",{style:{"text-align":"left"}},[n("code",null,[s("properties"),n("span",{class:"token operator"},"?")])],-1),Kn={style:{"text-align":"left"}},On=n("code",null,[n("span",{class:"token property"},"DialogProperties")],-1),Qn={style:{"text-align":"left"}},Un=o(`<h4 id="returns-7" tabindex="-1"><a class="header-anchor" href="#returns-7" aria-hidden="true">#</a> Returns</h4><p><code><span class="token property">Promise</span></code>&lt;<code><span class="token property">number</span></code>&gt;</p><p>The promise of the selected index. If the user cancels the select, the result will be -1.</p><hr><h3 id="showsinglechoicedialog" tabindex="-1"><a class="header-anchor" href="#showsinglechoicedialog" aria-hidden="true">#</a> showSingleChoiceDialog</h3><p>\u25B8 <strong>showSingleChoiceDialog</strong>(<code><span class="token property">title</span></code>, <code><span class="token property">items</span></code>, <code>initialSelectedIndex<span class="token operator">?</span></code>, <code>properties<span class="token operator">?</span></code>): <code><span class="token property">Promise</span></code>&lt;<code><span class="token property">number</span></code>&gt;</p><p>Show a radio dialog.</p><p><strong><code><span class="token property">Example</span></code></strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> showSingleChoiceDialog <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;dialogs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">singleChoice</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> i <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">showSingleChoiceDialog</span><span class="token punctuation">(</span><span class="token string">&quot;Choose an item&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&quot;item1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;item2&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;item3&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">selected item: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">singleChoice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="parameters-8" tabindex="-1"><a class="header-anchor" href="#parameters-8" aria-hidden="true">#</a> Parameters</h4>`,10),Wn=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"left"}},"Name"),n("th",{style:{"text-align":"left"}},"Type"),n("th",{style:{"text-align":"left"}},"Description")])],-1),Xn=n("tr",null,[n("td",{style:{"text-align":"left"}},[n("code",null,[n("span",{class:"token property"},"title")])]),n("td",{style:{"text-align":"left"}},[n("code",null,[n("span",{class:"token property"},"string")])]),n("td",{style:{"text-align":"left"}},"The title of the radio dialog.")],-1),Zn=n("tr",null,[n("td",{style:{"text-align":"left"}},[n("code",null,[n("span",{class:"token property"},"items")])]),n("td",{style:{"text-align":"left"}},[n("code",null,[n("span",{class:"token property"},"string")]),s("[]")]),n("td",{style:{"text-align":"left"}},"The options of the radio dialog.")],-1),ns=n("tr",null,[n("td",{style:{"text-align":"left"}},[n("code",null,[s("initialSelectedIndex"),n("span",{class:"token operator"},"?")])]),n("td",{style:{"text-align":"left"}},[n("code",null,[n("span",{class:"token property"},"number")])]),n("td",{style:{"text-align":"left"}},[s("The default selected index of the "),n("code",null,[n("span",{class:"token property"},"items")]),s(" array.")])],-1),ss=n("td",{style:{"text-align":"left"}},[n("code",null,[s("properties"),n("span",{class:"token operator"},"?")])],-1),ts={style:{"text-align":"left"}},as=n("code",null,[n("span",{class:"token property"},"DialogProperties")],-1),es={style:{"text-align":"left"}},os=n("h4",{id:"returns-8",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#returns-8","aria-hidden":"true"},"#"),s(" Returns")],-1),ls=n("p",null,[n("code",null,[n("span",{class:"token property"},"Promise")]),s("<"),n("code",null,[n("span",{class:"token property"},"number")]),s(">")],-1),ps=n("p",null,"The promise of the selected index. If the user cancels the radio, the result will be -1.",-1);function is(cs,rs){const a=l("RouterLink"),p=l("ExternalLinkIcon");return c(),r("div",null,[n("p",null,[t(a,{to:"/en/v9/generated/"},{default:e(()=>[s("Auto.js Pro 9 Docs")]),_:1}),s(" / dialogs")]),u,n("ul",null,[n("li",null,[t(a,{to:"/en/v9/generated/interfaces/dialogs.DialogExt.html"},{default:e(()=>[s("DialogExt")]),_:1})]),n("li",null,[t(a,{to:"/en/v9/generated/interfaces/dialogs.DialogProperties.html"},{default:e(()=>[s("DialogProperties")]),_:1})])]),h,n("ul",null,[n("li",null,[t(a,{to:"/en/v9/generated/modules/dialogs.html#dialog"},{default:e(()=>[s("Dialog")]),_:1})]),n("li",null,[t(a,{to:"/en/v9/generated/modules/dialogs.html#dialogtype"},{default:e(()=>[s("DialogType")]),_:1})])]),g,n("ul",null,[n("li",null,[t(a,{to:"/en/v9/generated/modules/dialogs.html#defaultdialogtype"},{default:e(()=>[s("defaultDialogType")]),_:1})])]),k,n("ul",null,[n("li",null,[t(a,{to:"/en/v9/generated/modules/dialogs.html#builddialog"},{default:e(()=>[s("buildDialog")]),_:1})]),n("li",null,[t(a,{to:"/en/v9/generated/modules/dialogs.html#setdefaultdialogtype"},{default:e(()=>[s("setDefaultDialogType")]),_:1})]),n("li",null,[t(a,{to:"/en/v9/generated/modules/dialogs.html#showalertdialog"},{default:e(()=>[s("showAlertDialog")]),_:1})]),n("li",null,[t(a,{to:"/en/v9/generated/modules/dialogs.html#showconfirmdialog"},{default:e(()=>[s("showConfirmDialog")]),_:1})]),n("li",null,[t(a,{to:"/en/v9/generated/modules/dialogs.html#showdialog"},{default:e(()=>[s("showDialog")]),_:1})]),n("li",null,[t(a,{to:"/en/v9/generated/modules/dialogs.html#showinputdialog"},{default:e(()=>[s("showInputDialog")]),_:1})]),n("li",null,[t(a,{to:"/en/v9/generated/modules/dialogs.html#showmultichoicedialog"},{default:e(()=>[s("showMultiChoiceDialog")]),_:1})]),n("li",null,[t(a,{to:"/en/v9/generated/modules/dialogs.html#showselectdialog"},{default:e(()=>[s("showSelectDialog")]),_:1})]),n("li",null,[t(a,{to:"/en/v9/generated/modules/dialogs.html#showsinglechoicedialog"},{default:e(()=>[s("showSingleChoiceDialog")]),_:1})])]),f,m,n("p",null,[s("\u01AC "),y,s(": "),_,s(" & "),t(a,{to:"/en/v9/generated/interfaces/dialogs.DialogExt.html"},{default:e(()=>[v]),_:1})]),n("p",null,[s("Dialog type, extends from "),n("a",b,[s("Dialog"),t(p)]),s(" to add some methods and properties. See "),t(a,{to:"/en/v9/generated/interfaces/dialogs.DialogExt.html"},{default:e(()=>[s("DialogExt")]),_:1}),s(".")]),x,n("p",null,[s("\u2022 "),w,s(": "),t(a,{to:"/en/v9/generated/modules/dialogs.html#dialogtype"},{default:e(()=>[D]),_:1}),s(" = "),q]),n("p",null,[s("Default dialog type, the default value is 'app'. Can be modified by the "),t(a,{to:"/en/v9/generated/modules/dialogs.html#setdefaultdialogtype"},{default:e(()=>[s("setDefaultDialogType")]),_:1}),s(" function.")]),P,n("ul",null,[n("li",null,[t(a,{to:"/en/v9/generated/interfaces/dialogs.DialogProperties.html"},{default:e(()=>[s("DialogProperties")]),_:1})]),n("li",null,[t(a,{to:"/en/v9/generated/modules/dialogs.html#builddialog"},{default:e(()=>[s("buildDialog")]),_:1})])]),T,S,n("p",null,[s("\u25B8 "),j,s("("),C,s("): "),I,s("<"),t(a,{to:"/en/v9/generated/modules/dialogs.html#dialog"},{default:e(()=>[N]),_:1}),s(">")]),E,A,n("table",null,[R,n("tbody",null,[n("tr",null,[M,n("td",V,[t(a,{to:"/en/v9/generated/interfaces/dialogs.DialogProperties.html"},{default:e(()=>[Y]),_:1})]),n("td",L,[s("Dialog's configuration properties. See "),t(a,{to:"/en/v9/generated/interfaces/dialogs.DialogProperties.html"},{default:e(()=>[s("DialogProperties")]),_:1})])])])]),$,n("p",null,[B,s("<"),t(a,{to:"/en/v9/generated/modules/dialogs.html#dialog"},{default:e(()=>[F]),_:1}),s(">")]),z,n("p",null,[t(a,{to:"/en/v9/generated/modules/dialogs.html#defaultdialogtype"},{default:e(()=>[s("defaultDialogType")]),_:1})]),G,n("table",null,[H,n("tbody",null,[n("tr",null,[J,n("td",K,[t(a,{to:"/en/v9/generated/modules/dialogs.html#dialogtype"},{default:e(()=>[O]),_:1})])])])]),Q,n("table",null,[U,n("tbody",null,[W,n("tr",null,[X,n("td",Z,[t(a,{to:"/en/v9/generated/interfaces/dialogs.DialogProperties.html"},{default:e(()=>[nn]),_:1})]),n("td",sn,[s("The configuration properties of the dialog. See "),t(a,{to:"/en/v9/generated/interfaces/dialogs.DialogProperties.html"},{default:e(()=>[s("DialogProperties")]),_:1})])])])]),tn,n("table",null,[an,n("tbody",null,[en,n("tr",null,[on,n("td",ln,[t(a,{to:"/en/v9/generated/interfaces/dialogs.DialogProperties.html"},{default:e(()=>[pn]),_:1})]),n("td",cn,[s("The extra configuration properties of the dialog. See "),t(a,{to:"/en/v9/generated/interfaces/dialogs.DialogProperties.html"},{default:e(()=>[s("DialogProperties")]),_:1})])])])]),rn,n("p",null,[s("\u25B8 "),dn,s("("),un,s("): "),hn,s("<"),t(a,{to:"/en/v9/generated/modules/dialogs.html#dialog"},{default:e(()=>[gn]),_:1}),s(">")]),n("p",null,[s("Create and show a dialog. Similar to "),t(a,{to:"/en/v9/generated/modules/dialogs.html#builddialog"},{default:e(()=>[s("buildDialog")]),_:1}),s(", but show directly without calling "),kn,s(".")]),fn,n("table",null,[mn,n("tbody",null,[n("tr",null,[yn,n("td",_n,[t(a,{to:"/en/v9/generated/interfaces/dialogs.DialogProperties.html"},{default:e(()=>[vn]),_:1})]),n("td",bn,[s("Dialog's configuration properties. See "),t(a,{to:"/en/v9/generated/interfaces/dialogs.DialogProperties.html"},{default:e(()=>[s("DialogProperties")]),_:1})])])])]),xn,n("p",null,[wn,s("<"),t(a,{to:"/en/v9/generated/modules/dialogs.html#dialog"},{default:e(()=>[Dn]),_:1}),s(">")]),qn,n("table",null,[Pn,n("tbody",null,[Tn,Sn,n("tr",null,[jn,n("td",Cn,[t(a,{to:"/en/v9/generated/interfaces/dialogs.DialogProperties.html"},{default:e(()=>[In]),_:1})]),n("td",Nn,[s("The configuration properties of the dialog. See "),t(a,{to:"/en/v9/generated/interfaces/dialogs.DialogProperties.html"},{default:e(()=>[s("DialogProperties")]),_:1})])])])]),En,n("table",null,[An,n("tbody",null,[Rn,Mn,Vn,n("tr",null,[Yn,n("td",Ln,[t(a,{to:"/en/v9/generated/interfaces/dialogs.DialogProperties.html"},{default:e(()=>[$n]),_:1})]),n("td",Bn,[s("The configuration properties of the dialog. See "),t(a,{to:"/en/v9/generated/interfaces/dialogs.DialogProperties.html"},{default:e(()=>[s("DialogProperties")]),_:1})])])])]),Fn,n("table",null,[zn,n("tbody",null,[Gn,Hn,n("tr",null,[Jn,n("td",Kn,[t(a,{to:"/en/v9/generated/interfaces/dialogs.DialogProperties.html"},{default:e(()=>[On]),_:1})]),n("td",Qn,[s("The configuration properties of the dialog. See "),t(a,{to:"/en/v9/generated/interfaces/dialogs.DialogProperties.html"},{default:e(()=>[s("DialogProperties")]),_:1})])])])]),Un,n("table",null,[Wn,n("tbody",null,[Xn,Zn,ns,n("tr",null,[ss,n("td",ts,[t(a,{to:"/en/v9/generated/interfaces/dialogs.DialogProperties.html"},{default:e(()=>[as]),_:1})]),n("td",es,[s("The configuration properties of the dialog. See "),t(a,{to:"/en/v9/generated/interfaces/dialogs.DialogProperties.html"},{default:e(()=>[s("DialogProperties")]),_:1})])])])]),os,ls,ps])}const hs=i(d,[["render",is],["__file","dialogs.html.vue"]]);export{hs as default};
