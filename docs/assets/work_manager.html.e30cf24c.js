import{_ as c}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as i,c as r,a as n,d as a,w as e,b as s,e as p,r as l}from"./app.6aa2b576.js";const u={},d=p(`<h1 id="work-manager" tabindex="-1"><a class="header-anchor" href="#work-manager" aria-hidden="true">#</a> work_manager</h1><p>This module is used to manage tasks, which can be run automatically at certain time or event, or when a file is changed.</p><p>When adding a task, it is recommended to add a request to ignore battery optimizations.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> power_manager <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;power_manager&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>power_manager<span class="token punctuation">.</span><span class="token function">isIgnoringBatteryOptimizations</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    power_manager<span class="token punctuation">.</span><span class="token function">requestIgnoreBatteryOptimizations</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="table-of-contents" tabindex="-1"><a class="header-anchor" href="#table-of-contents" aria-hidden="true">#</a> Table of contents</h2><h3 id="interfaces" tabindex="-1"><a class="header-anchor" href="#interfaces" aria-hidden="true">#</a> Interfaces</h3>`,6),k=n("h3",{id:"type-aliases",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#type-aliases","aria-hidden":"true"},"#"),s(" Type Aliases")],-1),m=n("h3",{id:"functions",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#functions","aria-hidden":"true"},"#"),s(" Functions")],-1),h=p('<h2 id="type-aliases-1" tabindex="-1"><a class="header-anchor" href="#type-aliases-1" aria-hidden="true">#</a> Type Aliases</h2><h3 id="datetime" tabindex="-1"><a class="header-anchor" href="#datetime" aria-hidden="true">#</a> DateTime</h3><p>\u01AC <strong>DateTime</strong>: <code><span class="token property">number</span></code> | <code><span class="token property">string</span></code> | <code><span class="token property">Date</span></code></p><p>DateTime type, could be a number which represents millisecond timestamp; or be a string which represents standard time format; or a Date object.</p><hr><h3 id="daysofweek" tabindex="-1"><a class="header-anchor" href="#daysofweek" aria-hidden="true">#</a> DaysOfWeek</h3><p>\u01AC <strong>DaysOfWeek</strong>: <code><span class="token string">&quot;Sunday&quot;</span></code> | <code><span class="token string">&quot;Monday&quot;</span></code> | <code><span class="token string">&quot;Tuesday&quot;</span></code> | <code><span class="token string">&quot;Wednesday&quot;</span></code> | <code><span class="token string">&quot;Thursday&quot;</span></code> | <code><span class="token string">&quot;Friday&quot;</span></code> | <code><span class="token string">&quot;Saturday&quot;</span></code> | <code><span class="token string">&quot;\u4E00&quot;</span></code> | <code><span class="token string">&quot;\u4E8C&quot;</span></code> | <code><span class="token string">&quot;\u4E09&quot;</span></code> | <code><span class="token string">&quot;\u56DB&quot;</span></code> | <code><span class="token string">&quot;\u4E94&quot;</span></code> | <code><span class="token string">&quot;\u516D&quot;</span></code> | <code><span class="token string">&quot;\u65E5&quot;</span></code></p><hr><h3 id="tasktype" tabindex="-1"><a class="header-anchor" href="#tasktype" aria-hidden="true">#</a> TaskType</h3><p>\u01AC <strong>TaskType</strong>: <code><span class="token string">&quot;TimedTask&quot;</span></code> | <code><span class="token string">&quot;IntentTask&quot;</span></code></p><h2 id="functions-1" tabindex="-1"><a class="header-anchor" href="#functions-1" aria-hidden="true">#</a> Functions</h2><h3 id="addactivityintenttask" tabindex="-1"><a class="header-anchor" href="#addactivityintenttask" aria-hidden="true">#</a> addActivityIntentTask</h3><p>\u25B8 <strong>addActivityIntentTask</strong>(<code><span class="token property">task</span></code>): <code><span class="token property">Promise</span></code>&lt;<code><span class="token property">Task</span></code>&gt;</p><p>Add a task to run when an activity intent is handled.</p><p>For example, when an activity intent is handled, such as opening a file in file manager, the task will be run.</p><p>The first parameter is action, which decides what action will trigger the task. For example:</p>',16),g=p('<li><code>android<span class="token punctuation">.</span>intent<span class="token punctuation">.</span>action<span class="token punctuation">.</span><span class="token constant">VIEW</span></code>: When an activity intent is handled, such as opening a file in file manager, the task will be run.</li><li><code>android<span class="token punctuation">.</span>intent<span class="token punctuation">.</span>action<span class="token punctuation">.</span><span class="token constant">SEND</span></code>: When an activity intent is handled, such as sharing a file, the task will be run.</li>',2),v={href:"https://developer.android.google.cn/reference/android/content/Intent#constants_1",target:"_blank",rel:"noopener noreferrer"},y=p(`<p>The second parameter is dataType, which decides what type of file will trigger the task. For example:</p><ul><li><em>/</em>: All files</li><li>application/vnd.android.package-archive: apk files</li><li>text/plain: Text files</li><li>video/*: Video files</li><li>image/*: Image files</li></ul><p>The following code will add a task to run when an activity intent is handled to open a text file:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> addActivityIntentTask <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;work_manager&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">addActivityIntentTask</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&quot;/sdcard/Scripts/handle_text.js&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">action</span><span class="token operator">:</span> <span class="token string">&#39;android.intent.action.VIEW&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">dataType</span><span class="token operator">:</span> <span class="token string">&quot;text/plain&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">task</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Task </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>task<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> added</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The following code is the content of handle_text.js, which will read the file content and print it:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>// handle_text.js
&quot;nodejs&quot;;
const { myEngine } = require(&#39;engines&#39;);
const { getPathFromUri } = require(&#39;app&#39;);
const { readFileSync } = require(&#39;fs&#39;);
const intent = myEngine().execArgv.intent;
if (!intent) {
    process.exit();
}
const uri = intent.getUri();
const file = getPathFromUri(uri);
console.log(file);
console.log(readFileSync(file, &#39;utf8&#39;));
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h4>`,7),b=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"left"}},"Name"),n("th",{style:{"text-align":"left"}},"Type")])],-1),f=n("td",{style:{"text-align":"left"}},[n("code",null,[n("span",{class:"token property"},"task")])],-1),_={style:{"text-align":"left"}},T=n("code",null,[n("span",{class:"token property"},"IntentTaskConfig")],-1),w=p(`<h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns" aria-hidden="true">#</a> Returns</h4><p><code><span class="token property">Promise</span></code>&lt;<code><span class="token property">Task</span></code>&gt;</p><hr><h3 id="addbroadcastintenttask" tabindex="-1"><a class="header-anchor" href="#addbroadcastintenttask" aria-hidden="true">#</a> addBroadcastIntentTask</h3><p>\u25B8 <strong>addBroadcastIntentTask</strong>(<code><span class="token property">task</span></code>): <code><span class="token property">Promise</span></code>&lt;<code><span class="token property">Task</span></code>&gt;</p><p>Add a broadcast intent task, will run when a specific event (broadcast) happens.</p><p>The most important parameter is the broadcast event&#39;s Action. System will send out a specific Action broadcast when a specific event (such as battery changed) happens.</p><p>For example, create a task that runs a script when battery changed:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> android <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;rhino&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Packages<span class="token punctuation">;</span>
<span class="token keyword">const</span> Intent <span class="token operator">=</span> android<span class="token punctuation">.</span>content<span class="token punctuation">.</span>Intent<span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> addBroadcastIntentTask <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;work_manager&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">addBroadcastIntentTask</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
   <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&quot;/path/to/script.js&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">action</span><span class="token operator">:</span> Intent<span class="token punctuation">.</span><span class="token constant">ACTION_BATTERY_CHANGED</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">task</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Task </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>task<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> added</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9),x={href:"https://developer.android.google.cn/reference/android/content/Intent#constants_1",target:"_blank",rel:"noopener noreferrer"},q=n("code",null,[n("span",{class:"token function"},"require"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'ConnectivityManager'"),n("span",{class:"token punctuation"},")")],-1),I=p(`<p>Here are some common broadcast Actions:</p><ul><li>org.autojs.autojs.action.startup : Auto.js startup</li><li>Intent.ACTION_BOOT_COMPLETED : Boot completed</li><li>Intent.ACTION_SCREEN_OFF : Screen off</li><li>Intent.ACTION_SCREEN_ON : Screen on</li><li>Intent.ACTION_USER_PRESENT : Screen unlock</li><li>Intent.ACTION_BATTERY_CHANGED : Battery changed</li><li>Intent.ACTION_POWER_CONNECTED : Power connected</li><li>Intent.ACTION_POWER_DISCONNECTED : Power disconnected</li><li>ConnectivityManager.CONNECTIVITY_ACTION : Network connectivity changed</li><li>Intent.ACTION_PACKAGE_ADDED : Package added</li><li>Intent.ACTION_PACKAGE_REMOVED : Package removed</li><li>Intent.ACTION_PACKAGE_REPLACED : Package replaced</li><li>Intent.ACTION_HEADSET_PLUG : Headset plugged</li><li>Intent.ACTION_CONFIGURATION_CHANGED : Configuration changed</li><li>Intent.ACTION_TIME_TICK : Time tick on every minute</li></ul><p>When the task runs, you can get the Intent object by <code><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;engines&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">myEngine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>execArgv<span class="token punctuation">.</span>intent</code>.</p><p>The following is an example of getting battery level when battery changed task is run:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> myEngine <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;engines&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> android <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;rhino&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Packages<span class="token punctuation">;</span>

<span class="token keyword">const</span> intent <span class="token operator">=</span> <span class="token function">myEngine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>execArgv<span class="token punctuation">.</span>intent<span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>intent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
   process<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> BatteryManager <span class="token operator">=</span> android<span class="token punctuation">.</span>os<span class="token punctuation">.</span>BatteryManager<span class="token punctuation">;</span>
<span class="token keyword">const</span> level <span class="token operator">=</span> intent<span class="token punctuation">.</span><span class="token function">getIntExtra</span><span class="token punctuation">(</span>BatteryManager<span class="token punctuation">.</span><span class="token constant">EXTRA_LEVEL</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Battery:&quot;</span><span class="token punctuation">,</span> level<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1" aria-hidden="true">#</a> Parameters</h4>`,6),A=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"left"}},"Name"),n("th",{style:{"text-align":"left"}},"Type"),n("th",{style:{"text-align":"left"}},"Description")])],-1),P=n("td",{style:{"text-align":"left"}},[n("code",null,[n("span",{class:"token property"},"task")])],-1),C={style:{"text-align":"left"}},E=n("code",null,[n("span",{class:"token property"},"IntentTaskConfig")],-1),N=n("td",{style:{"text-align":"left"}},"Broadcast intent task configuration",-1),j=p(`<h4 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1" aria-hidden="true">#</a> Returns</h4><p><code><span class="token property">Promise</span></code>&lt;<code><span class="token property">Task</span></code>&gt;</p><p>Promise of added task</p><hr><h3 id="adddailytask" tabindex="-1"><a class="header-anchor" href="#adddailytask" aria-hidden="true">#</a> addDailyTask</h3><p>\u25B8 <strong>addDailyTask</strong>(<code><span class="token property">task</span></code>): <code><span class="token property">Promise</span></code>&lt;<code><span class="token property">Task</span></code>&gt;</p><p>Add a timed task which runs once a day. The time parameter will only keep the time of the day, ignore the year, month and day.</p><p>For example, create a timed task which runs at 1:14 PM every day.</p><p><strong><code><span class="token property">Example</span></code></strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> addDailyTask <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;work_manager&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">addDailyTask</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&quot;/path/to/script.js&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">time</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">task</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>task<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2" aria-hidden="true">#</a> Parameters</h4>`,11),D=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"left"}},"Name"),n("th",{style:{"text-align":"left"}},"Type"),n("th",{style:{"text-align":"left"}},"Description")])],-1),O=n("td",{style:{"text-align":"left"}},[n("code",null,[n("span",{class:"token property"},"task")])],-1),R={style:{"text-align":"left"}},B=n("code",null,[n("span",{class:"token property"},"TimedTaskConfig")],-1),S=n("td",{style:{"text-align":"left"}},"The configuration of the timed task.",-1),W=p('<h4 id="returns-2" tabindex="-1"><a class="header-anchor" href="#returns-2" aria-hidden="true">#</a> Returns</h4><p><code><span class="token property">Promise</span></code>&lt;<code><span class="token property">Task</span></code>&gt;</p><hr><h3 id="addintenttask" tabindex="-1"><a class="header-anchor" href="#addintenttask" aria-hidden="true">#</a> addIntentTask</h3><p>\u25B8 <strong>addIntentTask</strong>(<code><span class="token property">task</span></code>): <code><span class="token property">Promise</span></code>&lt;<code><span class="token property">Task</span></code>&gt;</p><p>Add an intent task. There are two types:</p><ul><li>Broadcast intent task: run at a specific broadcast event.</li><li>Activity intent task: run when opening external files in an external application. For example, when opening files in the file manager, or when sharing files or text in other applications, if the user selects Auto.js, the corresponding task will be triggered.</li></ul>',7),M=n("h4",{id:"parameters-3",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#parameters-3","aria-hidden":"true"},"#"),s(" Parameters")],-1),F=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"left"}},"Name"),n("th",{style:{"text-align":"left"}},"Type")])],-1),G=n("td",{style:{"text-align":"left"}},[n("code",null,[n("span",{class:"token property"},"task")])],-1),Q={style:{"text-align":"left"}},V=n("code",null,[n("span",{class:"token property"},"IntentTaskConfig")],-1),L=p(`<h4 id="returns-3" tabindex="-1"><a class="header-anchor" href="#returns-3" aria-hidden="true">#</a> Returns</h4><p><code><span class="token property">Promise</span></code>&lt;<code><span class="token property">Task</span></code>&gt;</p><hr><h3 id="addonetimetask" tabindex="-1"><a class="header-anchor" href="#addonetimetask" aria-hidden="true">#</a> addOneTimeTask</h3><p>\u25B8 <strong>addOneTimeTask</strong>(<code><span class="token property">task</span></code>): <code><span class="token property">Promise</span></code>&lt;<code><span class="token property">Task</span></code>&gt;</p><p>Add a timed task which runs once.</p><p>For example, create a timed task which runs on May 21, 2021 at 1:14 PM.</p><p><strong><code><span class="token property">Example</span></code></strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> addOneTimeTask <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;work_manager&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">addOneTimeTask</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&quot;/sdcard/to/script.js&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">time</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token number">2021</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">task</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>task<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="parameters-4" tabindex="-1"><a class="header-anchor" href="#parameters-4" aria-hidden="true">#</a> Parameters</h4>`,10),H=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"left"}},"Name"),n("th",{style:{"text-align":"left"}},"Type")])],-1),U=n("td",{style:{"text-align":"left"}},[n("code",null,[n("span",{class:"token property"},"task")])],-1),Y={style:{"text-align":"left"}},K=n("code",null,[n("span",{class:"token property"},"TimedTaskConfig")],-1),z=p(`<h4 id="returns-4" tabindex="-1"><a class="header-anchor" href="#returns-4" aria-hidden="true">#</a> Returns</h4><p><code><span class="token property">Promise</span></code>&lt;<code><span class="token property">Task</span></code>&gt;</p><hr><h3 id="addweeklytask" tabindex="-1"><a class="header-anchor" href="#addweeklytask" aria-hidden="true">#</a> addWeeklyTask</h3><p>\u25B8 <strong>addWeeklyTask</strong>(<code><span class="token property">task</span></code>): <code><span class="token property">Promise</span></code>&lt;<code><span class="token property">Task</span></code>&gt;</p><p>Add a timed task which runs every week.</p><p>For example, create a timed task which runs every Monday and Tuesday at 1:14 PM.</p><p><strong><code><span class="token property">Example</span></code></strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> addWeeklyTask <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;work_manager&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">addWeeklyTask</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&quot;/sdcard/\u811A\u672C/test.js&quot;</span><span class="token punctuation">,</span>
    <span class="token comment">// Mon Jun 21 2021 13:14:00 GMT+0800 </span>
    <span class="token literal-property property">time</span><span class="token operator">:</span> <span class="token number">1624252440000</span><span class="token punctuation">,</span>
    <span class="token literal-property property">daysOfWeek</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;Monday&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Tuesday&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">task</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>task<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="parameters-5" tabindex="-1"><a class="header-anchor" href="#parameters-5" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code><span class="token property">task</span></code></td><td style="text-align:left;"><code><span class="token property">WeeklyTaskConfig</span></code></td><td style="text-align:left;">The configuration of the timed task.</td></tr></tbody></table><h4 id="returns-5" tabindex="-1"><a class="header-anchor" href="#returns-5" aria-hidden="true">#</a> Returns</h4><p><code><span class="token property">Promise</span></code>&lt;<code><span class="token property">Task</span></code>&gt;</p><hr><h3 id="getintenttask" tabindex="-1"><a class="header-anchor" href="#getintenttask" aria-hidden="true">#</a> getIntentTask</h3><p>\u25B8 <strong>getIntentTask</strong>(<code><span class="token property">id</span></code>): <code><span class="token property">Promise</span></code>&lt;<code><span class="token property">Task</span></code> | <code><span class="token keyword">null</span></code>&gt;</p><p>Get the intent task by task ID.</p><p><strong><code><span class="token property">See</span></code></strong></p><p>Task.id</p><h4 id="parameters-6" tabindex="-1"><a class="header-anchor" href="#parameters-6" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code><span class="token property">id</span></code></td><td style="text-align:left;"><code><span class="token property">number</span></code></td><td style="text-align:left;">Task ID</td></tr></tbody></table><h4 id="returns-6" tabindex="-1"><a class="header-anchor" href="#returns-6" aria-hidden="true">#</a> Returns</h4><p><code><span class="token property">Promise</span></code>&lt;<code><span class="token property">Task</span></code> | <code><span class="token keyword">null</span></code>&gt;</p><p>The Promise of the task, if not found, resolve null</p><hr><h3 id="gettimedtask" tabindex="-1"><a class="header-anchor" href="#gettimedtask" aria-hidden="true">#</a> getTimedTask</h3><p>\u25B8 <strong>getTimedTask</strong>(<code><span class="token property">id</span></code>): <code><span class="token property">Promise</span></code>&lt;<code><span class="token property">Task</span></code> | <code><span class="token keyword">null</span></code>&gt;</p><p>Get the timed task by task ID.</p><p><strong><code><span class="token property">See</span></code></strong></p><p>Task.id</p><h4 id="parameters-7" tabindex="-1"><a class="header-anchor" href="#parameters-7" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code><span class="token property">id</span></code></td><td style="text-align:left;"><code><span class="token property">number</span></code></td><td style="text-align:left;">Task ID</td></tr></tbody></table><h4 id="returns-7" tabindex="-1"><a class="header-anchor" href="#returns-7" aria-hidden="true">#</a> Returns</h4><p><code><span class="token property">Promise</span></code>&lt;<code><span class="token property">Task</span></code> | <code><span class="token keyword">null</span></code>&gt;</p><p>The Promise of the task, if not found, resolve null</p><hr><h3 id="queryintenttasks" tabindex="-1"><a class="header-anchor" href="#queryintenttasks" aria-hidden="true">#</a> queryIntentTasks</h3><p>\u25B8 <strong>queryIntentTasks</strong>(<code>query<span class="token operator">?</span></code>): <code><span class="token property">Promise</span></code>&lt;<code><span class="token property">Task</span></code>[]&gt;</p><p>Query intent tasks by script path or Intent Action.</p><p><strong><code><span class="token property">Example</span></code></strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> queryIntentTasks<span class="token punctuation">,</span> addBroadcastIntentTask <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;work_manager&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> task <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">addBroadcastIntentTask</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&quot;/sdcard/to/script.js&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">action</span><span class="token operator">:</span> Intent<span class="token punctuation">.</span><span class="token constant">ACTION_BATTERY_CHANGED</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// Query all intent tasks</span>
    <span class="token keyword">const</span> tasks <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">queryIntentTasks</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>tasks<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="parameters-8" tabindex="-1"><a class="header-anchor" href="#parameters-8" aria-hidden="true">#</a> Parameters</h4>`,42),$=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"left"}},"Name"),n("th",{style:{"text-align":"left"}},"Type"),n("th",{style:{"text-align":"left"}},"Description")])],-1),J=n("td",{style:{"text-align":"left"}},[n("code",null,[s("query"),n("span",{class:"token operator"},"?")])],-1),X={style:{"text-align":"left"}},Z=n("code",null,[n("span",{class:"token property"},"IntentTaskQuery")],-1),nn=n("td",{style:{"text-align":"left"}},"intent task query conditions, empty to query all tasks",-1),sn=p(`<h4 id="returns-8" tabindex="-1"><a class="header-anchor" href="#returns-8" aria-hidden="true">#</a> Returns</h4><p><code><span class="token property">Promise</span></code>&lt;<code><span class="token property">Task</span></code>[]&gt;</p><hr><h3 id="querytimedtasks" tabindex="-1"><a class="header-anchor" href="#querytimedtasks" aria-hidden="true">#</a> queryTimedTasks</h3><p>\u25B8 <strong>queryTimedTasks</strong>(<code>query<span class="token operator">?</span></code>): <code><span class="token property">Promise</span></code>&lt;<code><span class="token property">Task</span></code>[]&gt;</p><p>Query timed tasks by script path.</p><p><strong><code><span class="token property">Example</span></code></strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> work_manager <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;work-manager&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> file <span class="token operator">=</span> <span class="token string">&quot;/path/to/script.js&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token keyword">const</span> task <span class="token operator">=</span> <span class="token keyword">await</span> work_manager<span class="token punctuation">.</span><span class="token function">addWeeklyTask</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">path</span><span class="token operator">:</span> file<span class="token punctuation">,</span>
    <span class="token literal-property property">time</span><span class="token operator">:</span> <span class="token number">1624252440000</span><span class="token punctuation">,</span>
    <span class="token literal-property property">daysOfWeek</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;Sunday&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> tasks <span class="token operator">=</span> <span class="token keyword">await</span> work_manager<span class="token punctuation">.</span><span class="token function">queryTimedTasks</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">path</span><span class="token operator">:</span> file
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
tasks<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">t</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;delete:&quot;</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">await</span> work_manager<span class="token punctuation">.</span><span class="token function">removeTimedTask</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

#### Parameters

<span class="token operator">|</span> Name <span class="token operator">|</span> Type <span class="token operator">|</span> Description <span class="token operator">|</span>
<span class="token operator">|</span> <span class="token operator">:</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span> <span class="token operator">|</span> <span class="token operator">:</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span> <span class="token operator">|</span> <span class="token operator">:</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span> <span class="token operator">|</span>
<span class="token operator">|</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">query?</span><span class="token template-punctuation string">\`</span></span> <span class="token operator">|</span> <span class="token punctuation">[</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">TimedTaskQuery</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">/</span>interfaces<span class="token operator">/</span>work_manager<span class="token punctuation">.</span>TimedTaskQuery<span class="token punctuation">.</span>md<span class="token punctuation">)</span> <span class="token operator">|</span> timed task query conditions<span class="token punctuation">,</span> empty to query all tasks <span class="token operator">|</span>

#### Returns

<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Promise</span><span class="token template-punctuation string">\`</span></span><span class="token operator">&lt;</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Task</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span>\\<span class="token operator">&gt;</span>

___

### removeIntentTask

\u25B8 <span class="token operator">**</span>removeIntentTask<span class="token operator">**</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">id</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Promise</span><span class="token template-punctuation string">\`</span></span><span class="token operator">&lt;</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">boolean</span><span class="token template-punctuation string">\`</span></span>\\<span class="token operator">&gt;</span>

Delete an intent task by id<span class="token punctuation">.</span>

<span class="token operator">**</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">See</span><span class="token template-punctuation string">\`</span></span><span class="token operator">**</span>

Task<span class="token punctuation">.</span>id

#### Parameters

<span class="token operator">|</span> Name <span class="token operator">|</span> Type <span class="token operator">|</span> Description <span class="token operator">|</span>
<span class="token operator">|</span> <span class="token operator">:</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span> <span class="token operator">|</span> <span class="token operator">:</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span> <span class="token operator">|</span> <span class="token operator">:</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span> <span class="token operator">|</span>
<span class="token operator">|</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">id</span><span class="token template-punctuation string">\`</span></span> <span class="token operator">|</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">number</span><span class="token template-punctuation string">\`</span></span> <span class="token operator">|</span> The id <span class="token keyword">of</span> the task<span class="token punctuation">.</span> <span class="token operator">|</span>

#### Returns

<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Promise</span><span class="token template-punctuation string">\`</span></span><span class="token operator">&lt;</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">boolean</span><span class="token template-punctuation string">\`</span></span>\\<span class="token operator">&gt;</span>

Promise that indicates whether the task is deleted successfully<span class="token punctuation">.</span> If the task does not exist<span class="token punctuation">,</span> resolve <span class="token boolean">false</span><span class="token punctuation">,</span> otherwise resolve <span class="token boolean">true</span><span class="token punctuation">.</span>

___

### removeTimedTask

\u25B8 <span class="token operator">**</span>removeTimedTask<span class="token operator">**</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">id</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Promise</span><span class="token template-punctuation string">\`</span></span><span class="token operator">&lt;</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">boolean</span><span class="token template-punctuation string">\`</span></span>\\<span class="token operator">&gt;</span>

Delete a timed task by id<span class="token punctuation">.</span>

<span class="token operator">**</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">See</span><span class="token template-punctuation string">\`</span></span><span class="token operator">**</span>

Task<span class="token punctuation">.</span>id

#### Parameters

<span class="token operator">|</span> Name <span class="token operator">|</span> Type <span class="token operator">|</span> Description <span class="token operator">|</span>
<span class="token operator">|</span> <span class="token operator">:</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span> <span class="token operator">|</span> <span class="token operator">:</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span> <span class="token operator">|</span> <span class="token operator">:</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span> <span class="token operator">|</span>
<span class="token operator">|</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">id</span><span class="token template-punctuation string">\`</span></span> <span class="token operator">|</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">number</span><span class="token template-punctuation string">\`</span></span> <span class="token operator">|</span> The id <span class="token keyword">of</span> the task<span class="token punctuation">.</span> <span class="token operator">|</span>

#### Returns

<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Promise</span><span class="token template-punctuation string">\`</span></span><span class="token operator">&lt;</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">boolean</span><span class="token template-punctuation string">\`</span></span>\\<span class="token operator">&gt;</span>

Promise that indicates whether the task is deleted successfully<span class="token punctuation">.</span> If the task does not exist<span class="token punctuation">,</span> resolve <span class="token boolean">false</span><span class="token punctuation">,</span> otherwise resolve <span class="token boolean">true</span><span class="token punctuation">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8);function an(tn,en){const t=l("RouterLink"),o=l("ExternalLinkIcon");return i(),r("div",null,[n("p",null,[a(t,{to:"/en/v9/generated/"},{default:e(()=>[s("Auto.js Pro 9 Docs")]),_:1}),s(" / work_manager")]),d,n("ul",null,[n("li",null,[a(t,{to:"/en/v9/generated/interfaces/work_manager.IntentTaskConfig.html"},{default:e(()=>[s("IntentTaskConfig")]),_:1})]),n("li",null,[a(t,{to:"/en/v9/generated/interfaces/work_manager.IntentTaskQuery.html"},{default:e(()=>[s("IntentTaskQuery")]),_:1})]),n("li",null,[a(t,{to:"/en/v9/generated/interfaces/work_manager.TaskConfig.html"},{default:e(()=>[s("TaskConfig")]),_:1})]),n("li",null,[a(t,{to:"/en/v9/generated/interfaces/work_manager.TimedTaskConfig.html"},{default:e(()=>[s("TimedTaskConfig")]),_:1})]),n("li",null,[a(t,{to:"/en/v9/generated/interfaces/work_manager.TimedTaskQuery.html"},{default:e(()=>[s("TimedTaskQuery")]),_:1})])]),k,n("ul",null,[n("li",null,[a(t,{to:"/en/v9/generated/modules/work_manager.html#datetime"},{default:e(()=>[s("DateTime")]),_:1})]),n("li",null,[a(t,{to:"/en/v9/generated/modules/work_manager.html#daysofweek"},{default:e(()=>[s("DaysOfWeek")]),_:1})]),n("li",null,[a(t,{to:"/en/v9/generated/modules/work_manager.html#tasktype"},{default:e(()=>[s("TaskType")]),_:1})])]),m,n("ul",null,[n("li",null,[a(t,{to:"/en/v9/generated/modules/work_manager.html#addactivityintenttask"},{default:e(()=>[s("addActivityIntentTask")]),_:1})]),n("li",null,[a(t,{to:"/en/v9/generated/modules/work_manager.html#addbroadcastintenttask"},{default:e(()=>[s("addBroadcastIntentTask")]),_:1})]),n("li",null,[a(t,{to:"/en/v9/generated/modules/work_manager.html#adddailytask"},{default:e(()=>[s("addDailyTask")]),_:1})]),n("li",null,[a(t,{to:"/en/v9/generated/modules/work_manager.html#addintenttask"},{default:e(()=>[s("addIntentTask")]),_:1})]),n("li",null,[a(t,{to:"/en/v9/generated/modules/work_manager.html#addonetimetask"},{default:e(()=>[s("addOneTimeTask")]),_:1})]),n("li",null,[a(t,{to:"/en/v9/generated/modules/work_manager.html#addweeklytask"},{default:e(()=>[s("addWeeklyTask")]),_:1})]),n("li",null,[a(t,{to:"/en/v9/generated/modules/work_manager.html#getintenttask"},{default:e(()=>[s("getIntentTask")]),_:1})]),n("li",null,[a(t,{to:"/en/v9/generated/modules/work_manager.html#gettimedtask"},{default:e(()=>[s("getTimedTask")]),_:1})]),n("li",null,[a(t,{to:"/en/v9/generated/modules/work_manager.html#queryintenttasks"},{default:e(()=>[s("queryIntentTasks")]),_:1})]),n("li",null,[a(t,{to:"/en/v9/generated/modules/work_manager.html#querytimedtasks"},{default:e(()=>[s("queryTimedTasks")]),_:1})]),n("li",null,[a(t,{to:"/en/v9/generated/modules/work_manager.html#removeintenttask"},{default:e(()=>[s("removeIntentTask")]),_:1})]),n("li",null,[a(t,{to:"/en/v9/generated/modules/work_manager.html#removetimedtask"},{default:e(()=>[s("removeTimedTask")]),_:1})])]),h,n("ul",null,[g,n("li",null,[s("More actions can be found in "),n("a",v,[s("Intent: Action"),a(o)])])]),y,n("table",null,[b,n("tbody",null,[n("tr",null,[f,n("td",_,[a(t,{to:"/en/v9/generated/interfaces/work_manager.IntentTaskConfig.html"},{default:e(()=>[T]),_:1})])])])]),w,n("p",null,[s("You can find most of Android system's built-in Intent Action in "),n("a",x,[s("Intent: Action"),a(o)]),s(" in Android document. Some system components also define their own Actions, for example, ConnectivityManager.CONNECTIVITY_ACTION (use "),q,s(" to import it).")]),I,n("table",null,[A,n("tbody",null,[n("tr",null,[P,n("td",C,[a(t,{to:"/en/v9/generated/interfaces/work_manager.IntentTaskConfig.html"},{default:e(()=>[E]),_:1})]),N])])]),j,n("table",null,[D,n("tbody",null,[n("tr",null,[O,n("td",R,[a(t,{to:"/en/v9/generated/interfaces/work_manager.TimedTaskConfig.html"},{default:e(()=>[B]),_:1})]),S])])]),W,n("p",null,[s("It is recommended to use "),a(t,{to:"/en/v9/generated/modules/work_manager.html#addbroadcastintenttask"},{default:e(()=>[s("addBroadcastIntentTask")]),_:1}),s(" and "),a(t,{to:"/en/v9/generated/modules/work_manager.html#addactivityintenttask"},{default:e(()=>[s("addActivityIntentTask")]),_:1}),s(" instead of using this function to add tasks.")]),M,n("table",null,[F,n("tbody",null,[n("tr",null,[G,n("td",Q,[a(t,{to:"/en/v9/generated/interfaces/work_manager.IntentTaskConfig.html"},{default:e(()=>[V]),_:1})])])])]),L,n("table",null,[H,n("tbody",null,[n("tr",null,[U,n("td",Y,[a(t,{to:"/en/v9/generated/interfaces/work_manager.TimedTaskConfig.html"},{default:e(()=>[K]),_:1})])])])]),z,n("table",null,[$,n("tbody",null,[n("tr",null,[J,n("td",X,[a(t,{to:"/en/v9/generated/interfaces/work_manager.IntentTaskQuery.html"},{default:e(()=>[Z]),_:1})]),nn])])]),sn])}const ln=c(u,[["render",an],["__file","work_manager.html.vue"]]);export{ln as default};
