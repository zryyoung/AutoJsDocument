import{_ as c}from"./examples.24463595.js";import{_ as l}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as r,c as u,a as e,b as n,d as s,w as a,e as p,r as i}from"./app.6aa2b576.js";const d="/docs/assets/accessibility-service-drawer.f99106c1.jpg",h="/docs/assets/accessibility-service-downloaded-apps.70865fa3.jpg",m="/docs/assets/accessibility-service-autojspro.07dc3e76.jpg",f="/docs/assets/example-debug-menu.38fc3062.jpg",b="/docs/assets/example-floating-controller.71f6a0c7.jpg",k="/docs/assets/example-tab.9bf21b8b.jpg",v={},g=p(`<h1 id="use-modules-and-functions" tabindex="-1"><a class="header-anchor" href="#use-modules-and-functions" aria-hidden="true">#</a> Use modules and functions</h1><p>After learning the basics of JavaScript, you can try to use the functions and modules that come with Auto.js. Similar to the previous <code><span class="token property">toastLog</span></code> function, Auto.js has many built-in functions and modules. These functions and modules can all be found in the documentation.</p><p>Documentation link: <a href="/docs/zh/v8">API v1 Documentation</a></p><p>On the left menu of the document (the phone needs to click the button in the upper left corner to expand) is a module list, listing the function and name of each module. For example, the app module is used to start other applications, obtain other application information, and so on.</p><p>In the API v1, all modules can be used directly without importing. For example, we need to use the <code><span class="token property">launchApp</span></code> function of the app module to launch other applications:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>$app<span class="token punctuation">.</span><span class="token function">launchApp</span><span class="token punctuation">(</span><span class="token string">&quot;Calendar&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>In this line of code, <code><span class="token property">$app</span></code> represents the app module (the $ symbol in front indicates that this is a built-in module to avoid conflicts with your custom variables), and launchApp is the function of the app module.</p>`,7),w=p('<h2 id="a-small-example" tabindex="-1"><a class="header-anchor" href="#a-small-example" aria-hidden="true">#</a> A small example</h2><p>Here is a small example that will slide the sample page of Auto.js Pro 3 times and click the middle of the page.</p><h3 id="step-1-turn-on-accessibility-permissions" tabindex="-1"><a class="header-anchor" href="#step-1-turn-on-accessibility-permissions" aria-hidden="true">#</a> Step 1: Turn on accessibility permissions</h3><p>In the pull-down menu on the main interface of Auto.js Pro, turn on the switch of the accessibility service. At this point, it will jump to the system&#39;s barrier-free permission interface, find it in the interface, and turn on the switch of Auto.js Pro.</p><p><img src="'+d+'" alt="Accessibility Service Switch" loading="lazy"></p><p>Here is Xiaomi as an example:</p><p><img src="'+h+'" alt="Downloaded Apps" loading="lazy"></p><p>Select AutoJsPro in the downloaded application and open it:</p><p><img src="'+m+`" alt="AutoJsPro Accessibility Service" loading="lazy"></p><p>When opening the permission, the system may prompt that accessibility is a high-risk permission. This is because the accessibility permission allows the application to obtain the content of the screen and simulate operations, so <strong>do not run the code downloaded from the network at will</strong>.</p><h3 id="step-2-create-the-file" tabindex="-1"><a class="header-anchor" href="#step-2-create-the-file" aria-hidden="true">#</a> Step 2: Create the file</h3><p>Create a new file with Auto.js Pro, copy the following code into it, save the file, <strong>do not run</strong>.</p><p>The main content of the code is annotated. It doesn\u2019t matter if you don\u2019t understand it for a while. There will be a document link for each function that will be used later.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// Pause for 2000 milliseconds, or 2 seconds</span>
<span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Bubble tips start running</span>
<span class="token function">toast</span><span class="token punctuation">(</span><span class="token string">&quot;start execution&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// loop 3 times</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Swipe from the screen&#39;s (500, two-thirds height) position to the screen&#39;s (500, one-third height position), and the duration is 300 milliseconds</span>
    <span class="token comment">// This operation is equivalent to sliding up the screen</span>
    <span class="token comment">// device.height is to get the height of the screen</span>
    <span class="token function">swipe</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">,</span> device<span class="token punctuation">.</span> height <span class="token operator">/</span> <span class="token number">3</span> <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">,</span> device<span class="token punctuation">.</span> height <span class="token operator">/</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// Pause for 1 second</span>
    <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// Click on the center of the screen, device.width is to get the width of the screen</span>
<span class="token function">click</span><span class="token punctuation">(</span>device<span class="token punctuation">.</span> width <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span> device<span class="token punctuation">.</span> height <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span>

<span class="token comment">// The bubble prompts the end of execution</span>
<span class="token function">toast</span><span class="token punctuation">(</span><span class="token string">&quot;End of execution&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="step-3-turn-on-hover-controls" tabindex="-1"><a class="header-anchor" href="#step-3-turn-on-hover-controls" aria-hidden="true">#</a> Step 3: Turn on hover controls</h3><p>Click the &quot;Debug&quot; button on the toolbar above the editor and select &quot;Suspended Run&quot;. If you have not granted the floating window permission before, you will be prompted that there is no floating window and jump to the system interface at this time, and you need to grant the floating window (displayed on top of other applications) permission.</p><p><img src="`+f+'" alt="Debug Menu" loading="lazy"></p><p>After authorization, a green floating control bar will pop up, and we can use it to start and stop the running of the code at any time.</p><p><img src="'+b+'" alt="Floating Controller" loading="lazy"></p><h3 id="step-4-run-the-tests" tabindex="-1"><a class="header-anchor" href="#step-4-run-the-tests" aria-hidden="true">#</a> Step 4: Run the tests</h3><p>Exit the editor interface, return to the main interface of Auto.js Pro, and switch to the tab of the example.</p><p><img src="'+k+'" alt="Example Tab" loading="lazy"></p><p>Click the Run \u25B6\uFE0F button of the floating window control bar, and the code will start to be executed at this time, automatically slide the screen 3 times, and click the middle of the screen.</p><p>If it prompts &quot;Accessibility is enabled but not running, this may be an Android bug&quot; when running here, see [FAQ](/docs/zh/guide/qa.html#%E5%B7%B2%E5 %90%AF%E7%94%A8%E6%97%A0%E9%9A%9C%E7%A2%8D%E6%9C%8D%E5%8A%A1-%E4%BD%86%E6% 8F%90%E7%A4%BA-%E6%97%A0%E9%9A%9C%E7%A2%8D%E6%9C%8D%E5%8A%A1%E5%B7%B2%E4%BD %86%E5%B9%B6%E6%9C%AA%E8%BF%90%E8%A1%8C).</p><h3 id="documentation-link-for-the-function" tabindex="-1"><a class="header-anchor" href="#documentation-link-for-the-function" aria-hidden="true">#</a> Documentation link for the function</h3><p>The following are the documentation links for the modules, functions, and variables used in this example:</p>',26),_={href:"https://pro.autojs.org/docs/zh/v8/globals.html#sleep-n",target:"_blank",rel:"noopener noreferrer"},y={href:"https://pro.autojs.org/docs/zh/v8/globals.html#toast-message",target:"_blank",rel:"noopener noreferrer"},x=e("h2",{id:"more-examples",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#more-examples","aria-hidden":"true"},"#"),n(" more examples")],-1),A=e("p",null,"On the main page of Auto.js Pro, switch to the tab of examples, there are a lot of official examples here.",-1),E=e("p",null,[e("img",{src:c,alt:"more examples",loading:"lazy"})],-1);function j(z,B){const t=i("RouterLink"),o=i("ExternalLinkIcon");return r(),u("div",null,[g,e("p",null,[n("By reading "),s(t,{to:"/zh/v8/app.html#app-launchapp-appname"},{default:a(()=>[n("documentation of this function")]),_:1}),n(", we know that the function of this function is to launch an application through the application name, and the calendar application can be launched after running.")]),w,e("ul",null,[e("li",null,[e("a",_,[n("sleep()"),s(o)]),n(" Pause for a period of time")]),e("li",null,[e("a",y,[n("toast()"),s(o)]),n(" Display bubble message")]),e("li",null,[s(t,{to:"/zh/v8/coordinatesBasedAutomation.html#swipe-x1-y1-x2-y2-duration"},{default:a(()=>[n("swipe()")]),_:1}),n(" Swipe screen")]),e("li",null,[s(t,{to:"/zh/v8/coordinatesBasedAutomation.html#click-x-y"},{default:a(()=>[n("click()")]),_:1}),n(" Click on the screen")]),e("li",null,[s(t,{to:"/zh/v8/device.html#device-width"},{default:a(()=>[n("device.width")]),_:1}),n(" device screen width")]),e("li",null,[s(t,{to:"/zh/v8/device.html#device-height"},{default:a(()=>[n("device.height")]),_:1}),n(" device screen height")])]),x,A,E])}const D=l(v,[["render",j],["__file","using-modules.html.vue"]]);export{D as default};
