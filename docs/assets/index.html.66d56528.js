import{_ as l}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as c,c as p,a as n,b as e,d as a,w as u,e as t,r as s}from"./app.6aa2b576.js";const r={},d=t(`<h1 id="reading-instructions" tabindex="-1"><a class="header-anchor" href="#reading-instructions" aria-hidden="true">#</a> Reading Instructions</h1><p>This document is for Auto.js (Pro) and explains the usage, role and examples of the APIs for each of the Auto.js modules.</p><p>The documentation was generated with the help of the Node.js documentation builder and is open source on github (https://github.com/hyb1996/AutoJs-Docs ) and is currently maintained by the developer.</p><h1 id="api-stability" tabindex="-1"><a class="header-anchor" href="#api-stability" aria-hidden="true">#</a> API stability</h1><p>Since Auto.js is in an active state of update and development, the API may change at any time, and we use Stability to mark the stability of modules and functions. These markers include.</p><div class="language-txt ext-txt line-numbers-mode"><pre class="language-txt"><code>Stability: 0 - Deprecated

Deprecated functions, modules or features that will be removed or changed soon in future updates. The use of these functions should be removed from scripts to avoid subsequent unexpected problems.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-txt ext-txt line-numbers-mode"><pre class="language-txt"><code>Stability: 1 - Experimental

Experimental functions, modules, or features that may be changed or removed in future updates. These functions or modules should be used with caution, or only for temporary or experimental purposes.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-txt ext-txt line-numbers-mode"><pre class="language-txt"><code>Stability: 2 - Stable

Stable functions, modules, or features whose existing functions will generally not be changed in future updates and will ensure backward compatibility.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="how-to-read-this-document" tabindex="-1"><a class="header-anchor" href="#how-to-read-this-document" aria-hidden="true">#</a> How to read this document</h1>`,9),h=t('<h2 id="input-i-text" tabindex="-1"><a class="header-anchor" href="#input-i-text" aria-hidden="true">#</a> input([i, ]text)</h2><ul><li><code><span class="token property">i</span></code> {number} means the input is the i + 1th input box</li><li><code><span class="token property">text</span></code> {string} the text to be entered</li></ul><p>input means the name of the function, and the <code><span class="token punctuation">[</span>i<span class="token punctuation">,</span> <span class="token punctuation">]</span>text</code> in parentheses is the parameter of the function. The following is the parameter list, &quot;number&quot; means the parameter i is of type numeric, &quot;string&quot; means the parameter text is of type string.</p><p>For example, input(1, &quot;la la la la&quot;), executing this statement will enter &quot;la la la la&quot; at the second input box on the screen.</p><p>The square brackets [ ] indicate that the argument is optional. That is, you can call input directly without the i. For example, if you call input(&quot;heh heh heh&quot;), this statement will type &quot;heh heh heh&quot; in all the input fields on the screen, according to the documentation.</p><p>Please do not write square brackets when calling functions with optional arguments.</p><p>Let&#39;s look at the second example. Partial description of the detectsColor function in images and color processing.</p><h2 id="images-detectscolor-image-color-x-y-threshold-16-algorithm-diff" tabindex="-1"><a class="header-anchor" href="#images-detectscolor-image-color-x-y-threshold-16-algorithm-diff" aria-hidden="true">#</a> images.detectsColor(image, color, x, y[, threshold = 16, algorithm = &quot;diff&quot;])</h2>',8),m=t('<li><code><span class="token property">image</span></code> {Image} image</li><li><code><span class="token property">color</span></code> {number} | {string} the color to detect</li><li><code><span class="token property">x</span></code> {number} the horizontal coordinate of the position to be detected</li><li><code><span class="token property">y</span></code> {number} the vertical coordinate of the position to be detected</li><li><code><span class="token property">threshold</span></code> {number} The color similarity threshold, default is 16, the range is 0~255.</li>',5),k=n("code",null,[n("span",{class:"token property"},"algorithm")],-1),f=n("li",null,[n("p",null,'"equal": equal match, only match if the color is exactly equal to the given color.')],-1),g=n("li",null,[n("p",null,'"diff": Difference matching. Match when the sum of the absolute value of the difference between R, G and B of the given color is less than the threshold.')],-1),b=n("li",null,[n("p",null,'"rgb": rgb Euler distance similarity. Matches when the rgb Euler distance of the given color is less than or equal to threshold.')],-1),v={href:"https://en.wikipedia.org/wiki/Color_difference",target:"_blank",rel:"noopener noreferrer"},x=n("li",null,[n("p",null,'"hs": hs Eulerian distance matching. hs is the hue value in HSV space.')],-1),y=t('<p>Similarly, <code><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">,</span> threshold <span class="token operator">=</span> <span class="token number">16</span><span class="token punctuation">,</span> algorithm <span class="token operator">=</span> <span class="token string">&quot;rgb&quot;</span><span class="token punctuation">]</span></code> is an optional parameter and, the value after the equal sign = is the default value of the parameter. That is, if the parameter is not specified, the parameter will be this value.</p><p>For example <code>images<span class="token punctuation">.</span><span class="token function">detectsColor</span><span class="token punctuation">(</span><span class="token function">captureScreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;#112233&quot;</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span></code> is equivalent to <code>images<span class="token punctuation">.</span><span class="token function">detectsColor</span><span class="token punctuation">(</span><span class="token function">captureScreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;#112233&quot;</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token string">&quot;rgb&quot;</span><span class="token punctuation">)</span></code>. while <code>images<span class="token punctuation">.</span><span class="token function">detectsColor</span><span class="token punctuation">(</span><span class="token function">captureScreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;#112233&quot;</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">)</span></code> is equivalent to <code>images<span class="token punctuation">.</span><span class="token function">detectsColor</span><span class="token punctuation">(</span><span class="token function">captureScreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;#112233&quot;</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">,</span> <span class="token string">&quot;rgb&quot;</span><span class="token punctuation">)</span></code>.</p><p>Please do not write square brackets and equal signs when calling functions with optional parameters and default values.</p>',3);function q(_,w){const o=s("RouterLink"),i=s("ExternalLinkIcon");return c(),p("div",null,[d,n("p",null,[e("To start with an example, here is part of the description of the input function in the chapter "),a(o,{to:"/en/v8/coordinates-based-automation.html"},{default:u(()=>[e("Control-based-automation simulation")]),_:1}),e(".")]),h,n("ul",null,[m,n("li",null,[k,e(" {string} The color matching algorithm, including: "),n("ul",null,[f,g,b,n("li",null,[n("p",null,[e('"rgb+": weighted rgb Euler distance match ('),n("a",v,[e("LAB Delta E"),a(i)]),e(").")])]),x])])]),y])}const C=l(r,[["render",q],["__file","index.html.vue"]]);export{C as default};
