import{_ as i}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as c,c as r,a as n,d as e,w as a,b as s,e as o,r as p}from"./app.6aa2b576.js";const d={},u=n("h1",{id:"zip",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#zip","aria-hidden":"true"},"#"),s(" zip")],-1),h=n("p",null,"The Zip module provides APIs to handle file compression and decompression, and supports encryption.",-1),k=n("p",null,[n("strong",null,[n("code",null,[n("span",{class:"token property"},"See")])])],-1),f={href:"https://javadoc.io/doc/net.lingala.zip4j/zip4j/1.3.2/index.html",target:"_blank",rel:"noopener noreferrer"},_=n("h2",{id:"table-of-contents",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#table-of-contents","aria-hidden":"true"},"#"),s(" Table of contents")],-1),g=n("h3",{id:"interfaces",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#interfaces","aria-hidden":"true"},"#"),s(" Interfaces")],-1),y=n("h3",{id:"type-aliases",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#type-aliases","aria-hidden":"true"},"#"),s(" Type Aliases")],-1),m=n("h3",{id:"functions",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#functions","aria-hidden":"true"},"#"),s(" Functions")],-1),z=o('<h2 id="type-aliases-1" tabindex="-1"><a class="header-anchor" href="#type-aliases-1" aria-hidden="true">#</a> Type Aliases</h2><h3 id="zipfileattribute" tabindex="-1"><a class="header-anchor" href="#zipfileattribute" aria-hidden="true">#</a> ZipFileAttribute</h3><p>\u01AC <strong>ZipFileAttribute</strong>: <code><span class="token string">&quot;all&quot;</span></code> | <code><span class="token string">&quot;archive&quot;</span></code> | <code><span class="token string">&quot;dateTime&quot;</span></code> | <code><span class="token string">&quot;hidden&quot;</span></code> | <code><span class="token string">&quot;system&quot;</span></code> | <code><span class="token string">&quot;readOnly&quot;</span></code></p><p><strong><code><span class="token property">See</span></code></strong></p>',4),v=n("h2",{id:"functions-1",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#functions-1","aria-hidden":"true"},"#"),s(" Functions")],-1),x=n("h3",{id:"open",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#open","aria-hidden":"true"},"#"),s(" open")],-1),b=n("strong",null,"open",-1),F=n("code",null,[n("span",{class:"token property"},"file")],-1),Z=n("code",null,[n("span",{class:"token property"},"ZipFile")],-1),j=o('<p>Open a zip file and return a <code><span class="token property">ZipFile</span></code> object. You can perform more operations on the returned object.</p><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code><span class="token property">file</span></code></td><td style="text-align:left;"><code><span class="token property">string</span></code></td><td style="text-align:left;">The path of the zip file.</td></tr></tbody></table><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns" aria-hidden="true">#</a> Returns</h4>',4),w=n("code",null,[n("span",{class:"token property"},"ZipFile")],-1),P=o(`<hr><h3 id="unzip" tabindex="-1"><a class="header-anchor" href="#unzip" aria-hidden="true">#</a> unzip</h3><p>\u25B8 <strong>unzip</strong>(<code><span class="token property">zipFile</span></code>, <code><span class="token property">dest</span></code>, <code>options<span class="token operator">?</span></code>): <code><span class="token property">Promise</span></code>&lt;<code><span class="token keyword">void</span></code>&gt;</p><p>Unzip a zip file. If <code><span class="token property">dest</span></code> directory does not exist, create it and unzip the content to it; if <code><span class="token property">dest</span></code> directory exists, create a folder with the same name as <code><span class="token property">zipFile</span></code> in <code><span class="token property">dest</span></code> and unzip the content to it.</p><p><strong><code><span class="token property">Example</span></code></strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> unzip<span class="token punctuation">,</span> zipDir <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;zip&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// create a zip file with password</span>
    <span class="token keyword">const</span> zipFilePath <span class="token operator">=</span> <span class="token string">&#39;./dest.zip&#39;</span><span class="token punctuation">;</span>
    <span class="token keyword">await</span> <span class="token function">zipDir</span><span class="token punctuation">(</span><span class="token string">&#39;./dir&#39;</span><span class="token punctuation">,</span> zipFilePath<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">password</span><span class="token operator">:</span> <span class="token string">&#39;Auto.js Pro&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// unzip the zip file</span>
    <span class="token keyword">await</span> <span class="token function">unzip</span><span class="token punctuation">(</span>zipFilePath<span class="token punctuation">,</span> <span class="token string">&#39;./dest&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">password</span><span class="token operator">:</span> <span class="token string">&#39;Auto.js Pro&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1" aria-hidden="true">#</a> Parameters</h4>`,7),q=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"left"}},"Name"),n("th",{style:{"text-align":"left"}},"Type")])],-1),O=n("tr",null,[n("td",{style:{"text-align":"left"}},[n("code",null,[n("span",{class:"token property"},"zipFile")])]),n("td",{style:{"text-align":"left"}},[n("code",null,[n("span",{class:"token property"},"string")])])],-1),T=n("tr",null,[n("td",{style:{"text-align":"left"}},[n("code",null,[n("span",{class:"token property"},"dest")])]),n("td",{style:{"text-align":"left"}},[n("code",null,[n("span",{class:"token property"},"string")])])],-1),D=n("td",{style:{"text-align":"left"}},[n("code",null,[s("options"),n("span",{class:"token operator"},"?")])],-1),A={style:{"text-align":"left"}},N=n("code",null,[n("span",{class:"token property"},"UnzipOptions")],-1),L=o('<h4 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1" aria-hidden="true">#</a> Returns</h4><p><code><span class="token property">Promise</span></code>&lt;<code><span class="token keyword">void</span></code>&gt;</p><hr><h3 id="zipdir" tabindex="-1"><a class="header-anchor" href="#zipdir" aria-hidden="true">#</a> zipDir</h3>',4),E=n("strong",null,"zipDir",-1),R=n("code",null,[n("span",{class:"token property"},"dir")],-1),U=n("code",null,[n("span",{class:"token property"},"dest")],-1),C=n("code",null,[s("options"),n("span",{class:"token operator"},"?")],-1),I=n("code",null,[n("span",{class:"token property"},"Promise")],-1),V=n("code",null,[n("span",{class:"token property"},"ZipFile")],-1),B=o(`<p>Compress all files and folders under <code><span class="token property">dir</span></code> to <code><span class="token property">dest</span></code>.</p><p><strong><code><span class="token property">Example</span></code></strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> zipDir <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;zip&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">zipDir</span><span class="token punctuation">(</span><span class="token string">&#39;./dir&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;./dest.zip&#39;</span><span class="token punctuation">)</span>
 <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">zipFile</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>zipFile<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2" aria-hidden="true">#</a> Parameters</h4>`,4),S=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"left"}},"Name"),n("th",{style:{"text-align":"left"}},"Type"),n("th",{style:{"text-align":"left"}},"Description")])],-1),Y=n("tr",null,[n("td",{style:{"text-align":"left"}},[n("code",null,[n("span",{class:"token property"},"dir")])]),n("td",{style:{"text-align":"left"}},[n("code",null,[n("span",{class:"token property"},"string")])]),n("td",{style:{"text-align":"left"}},"The path of the folder to be compressed.")],-1),G=n("tr",null,[n("td",{style:{"text-align":"left"}},[n("code",null,[n("span",{class:"token property"},"dest")])]),n("td",{style:{"text-align":"left"}},[n("code",null,[n("span",{class:"token property"},"string")])]),n("td",{style:{"text-align":"left"}},"The path of the target zip file.")],-1),H=n("td",{style:{"text-align":"left"}},[n("code",null,[s("options"),n("span",{class:"token operator"},"?")])],-1),J={style:{"text-align":"left"}},K=n("code",null,[n("span",{class:"token property"},"ZipOptions")],-1),M=n("td",{style:{"text-align":"left"}},"Optional parameters.",-1),Q=n("h4",{id:"returns-2",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#returns-2","aria-hidden":"true"},"#"),s(" Returns")],-1),W=n("code",null,[n("span",{class:"token property"},"Promise")],-1),X=n("code",null,[n("span",{class:"token property"},"ZipFile")],-1),$=n("hr",null,null,-1),nn=n("h3",{id:"zipfile",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#zipfile","aria-hidden":"true"},"#"),s(" zipFile")],-1),sn=n("strong",null,"zipFile",-1),en=n("code",null,[n("span",{class:"token property"},"file")],-1),tn=n("code",null,[n("span",{class:"token property"},"dest")],-1),an=n("code",null,[s("options"),n("span",{class:"token operator"},"?")],-1),on=n("code",null,[n("span",{class:"token property"},"Promise")],-1),pn=n("code",null,[n("span",{class:"token property"},"ZipFile")],-1),ln=o(`<p>Compress a single file <code><span class="token property">file</span></code> to <code><span class="token property">dest</span></code>.</p><p><strong><code><span class="token property">Example</span></code></strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> zipFile <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;zip&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">zipFile</span><span class="token punctuation">(</span><span class="token string">&#39;./file.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;./dest.zip&#39;</span><span class="token punctuation">)</span>
 <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">zipFile</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>zipFile<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="parameters-3" tabindex="-1"><a class="header-anchor" href="#parameters-3" aria-hidden="true">#</a> Parameters</h4>`,4),cn=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"left"}},"Name"),n("th",{style:{"text-align":"left"}},"Type"),n("th",{style:{"text-align":"left"}},"Description")])],-1),rn=n("tr",null,[n("td",{style:{"text-align":"left"}},[n("code",null,[n("span",{class:"token property"},"file")])]),n("td",{style:{"text-align":"left"}},[n("code",null,[n("span",{class:"token property"},"string")])]),n("td",{style:{"text-align":"left"}},"The path of the file to be compressed.")],-1),dn=n("tr",null,[n("td",{style:{"text-align":"left"}},[n("code",null,[n("span",{class:"token property"},"dest")])]),n("td",{style:{"text-align":"left"}},[n("code",null,[n("span",{class:"token property"},"string")])]),n("td",{style:{"text-align":"left"}},"The path of the target zip file.")],-1),un=n("td",{style:{"text-align":"left"}},[n("code",null,[s("options"),n("span",{class:"token operator"},"?")])],-1),hn={style:{"text-align":"left"}},kn=n("code",null,[n("span",{class:"token property"},"ZipOptions")],-1),fn=n("td",{style:{"text-align":"left"}},"Optional parameters.",-1),_n=n("h4",{id:"returns-3",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#returns-3","aria-hidden":"true"},"#"),s(" Returns")],-1),gn=n("code",null,[n("span",{class:"token property"},"Promise")],-1),yn=n("code",null,[n("span",{class:"token property"},"ZipFile")],-1),mn=n("hr",null,null,-1),zn=n("h3",{id:"zipfiles",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#zipfiles","aria-hidden":"true"},"#"),s(" zipFiles")],-1),vn=n("strong",null,"zipFiles",-1),xn=n("code",null,[n("span",{class:"token property"},"fileList")],-1),bn=n("code",null,[n("span",{class:"token property"},"dest")],-1),Fn=n("code",null,[s("options"),n("span",{class:"token operator"},"?")],-1),Zn=n("code",null,[n("span",{class:"token property"},"Promise")],-1),jn=n("code",null,[n("span",{class:"token property"},"ZipFile")],-1),wn=o(`<p>Compress multiple files <code><span class="token property">fileList</span></code> to <code><span class="token property">dest</span></code>. <code><span class="token property">fileList</span></code> cannot contain folders.</p><p><strong><code><span class="token property">Example</span></code></strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> zipFiles <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;zip&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">zipFiles</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;./file1.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;./file2.txt&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39;./dest.zip&#39;</span><span class="token punctuation">)</span>
 <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">zipFile</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>zipFile<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="parameters-4" tabindex="-1"><a class="header-anchor" href="#parameters-4" aria-hidden="true">#</a> Parameters</h4>`,4),Pn=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"left"}},"Name"),n("th",{style:{"text-align":"left"}},"Type"),n("th",{style:{"text-align":"left"}},"Description")])],-1),qn=n("tr",null,[n("td",{style:{"text-align":"left"}},[n("code",null,[n("span",{class:"token property"},"fileList")])]),n("td",{style:{"text-align":"left"}},[n("code",null,[n("span",{class:"token property"},"string")]),s("[]")]),n("td",{style:{"text-align":"left"}},"The array of paths of the files to be compressed.")],-1),On=n("tr",null,[n("td",{style:{"text-align":"left"}},[n("code",null,[n("span",{class:"token property"},"dest")])]),n("td",{style:{"text-align":"left"}},[n("code",null,[n("span",{class:"token property"},"string")])]),n("td",{style:{"text-align":"left"}},"The path of the target zip file.")],-1),Tn=n("td",{style:{"text-align":"left"}},[n("code",null,[s("options"),n("span",{class:"token operator"},"?")])],-1),Dn={style:{"text-align":"left"}},An=n("code",null,[n("span",{class:"token property"},"ZipOptions")],-1),Nn=n("td",{style:{"text-align":"left"}},"Optional parameters.",-1),Ln=n("h4",{id:"returns-4",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#returns-4","aria-hidden":"true"},"#"),s(" Returns")],-1),En=n("code",null,[n("span",{class:"token property"},"Promise")],-1),Rn=n("code",null,[n("span",{class:"token property"},"ZipFile")],-1);function Un(Cn,In){const t=p("RouterLink"),l=p("ExternalLinkIcon");return c(),r("div",null,[n("p",null,[e(t,{to:"/en/v9/generated/"},{default:a(()=>[s("Auto.js Pro 9 Docs")]),_:1}),s(" / zip")]),u,h,k,n("p",null,[n("a",f,[s("zip4j"),e(l)])]),_,g,n("ul",null,[n("li",null,[e(t,{to:"/en/v9/generated/interfaces/zip.UnzipOptions.html"},{default:a(()=>[s("UnzipOptions")]),_:1})]),n("li",null,[e(t,{to:"/en/v9/generated/interfaces/zip.ZipFile.html"},{default:a(()=>[s("ZipFile")]),_:1})]),n("li",null,[e(t,{to:"/en/v9/generated/interfaces/zip.ZipOptions.html"},{default:a(()=>[s("ZipOptions")]),_:1})])]),y,n("ul",null,[n("li",null,[e(t,{to:"/en/v9/generated/modules/zip.html#zipfileattribute"},{default:a(()=>[s("ZipFileAttribute")]),_:1})])]),m,n("ul",null,[n("li",null,[e(t,{to:"/en/v9/generated/modules/zip.html#open"},{default:a(()=>[s("open")]),_:1})]),n("li",null,[e(t,{to:"/en/v9/generated/modules/zip.html#unzip"},{default:a(()=>[s("unzip")]),_:1})]),n("li",null,[e(t,{to:"/en/v9/generated/modules/zip.html#zipdir"},{default:a(()=>[s("zipDir")]),_:1})]),n("li",null,[e(t,{to:"/en/v9/generated/modules/zip.html#zipfile"},{default:a(()=>[s("zipFile")]),_:1})]),n("li",null,[e(t,{to:"/en/v9/generated/modules/zip.html#zipfiles"},{default:a(()=>[s("zipFiles")]),_:1})])]),z,n("p",null,[e(t,{to:"/en/v9/generated/interfaces/zip.UnzipOptions.html#ignoreattributes"},{default:a(()=>[s("ignoreAttributes")]),_:1})]),v,x,n("p",null,[s("\u25B8 "),b,s("("),F,s("): "),e(t,{to:"/en/v9/generated/interfaces/zip.ZipFile.html"},{default:a(()=>[Z]),_:1})]),j,n("p",null,[e(t,{to:"/en/v9/generated/interfaces/zip.ZipFile.html"},{default:a(()=>[w]),_:1})]),P,n("table",null,[q,n("tbody",null,[O,T,n("tr",null,[D,n("td",A,[e(t,{to:"/en/v9/generated/interfaces/zip.UnzipOptions.html"},{default:a(()=>[N]),_:1})])])])]),L,n("p",null,[s("\u25B8 "),E,s("("),R,s(", "),U,s(", "),C,s("): "),I,s("<"),e(t,{to:"/en/v9/generated/interfaces/zip.ZipFile.html"},{default:a(()=>[V]),_:1}),s(">")]),B,n("table",null,[S,n("tbody",null,[Y,G,n("tr",null,[H,n("td",J,[e(t,{to:"/en/v9/generated/interfaces/zip.ZipOptions.html"},{default:a(()=>[K]),_:1})]),M])])]),Q,n("p",null,[W,s("<"),e(t,{to:"/en/v9/generated/interfaces/zip.ZipFile.html"},{default:a(()=>[X]),_:1}),s(">")]),$,nn,n("p",null,[s("\u25B8 "),sn,s("("),en,s(", "),tn,s(", "),an,s("): "),on,s("<"),e(t,{to:"/en/v9/generated/interfaces/zip.ZipFile.html"},{default:a(()=>[pn]),_:1}),s(">")]),ln,n("table",null,[cn,n("tbody",null,[rn,dn,n("tr",null,[un,n("td",hn,[e(t,{to:"/en/v9/generated/interfaces/zip.ZipOptions.html"},{default:a(()=>[kn]),_:1})]),fn])])]),_n,n("p",null,[gn,s("<"),e(t,{to:"/en/v9/generated/interfaces/zip.ZipFile.html"},{default:a(()=>[yn]),_:1}),s(">")]),mn,zn,n("p",null,[s("\u25B8 "),vn,s("("),xn,s(", "),bn,s(", "),Fn,s("): "),Zn,s("<"),e(t,{to:"/en/v9/generated/interfaces/zip.ZipFile.html"},{default:a(()=>[jn]),_:1}),s(">")]),wn,n("table",null,[Pn,n("tbody",null,[qn,On,n("tr",null,[Tn,n("td",Dn,[e(t,{to:"/en/v9/generated/interfaces/zip.ZipOptions.html"},{default:a(()=>[An]),_:1})]),Nn])])]),Ln,n("p",null,[En,s("<"),e(t,{to:"/en/v9/generated/interfaces/zip.ZipFile.html"},{default:a(()=>[Rn]),_:1}),s(">")])])}const Sn=i(d,[["render",Un],["__file","zip.html.vue"]]);export{Sn as default};
