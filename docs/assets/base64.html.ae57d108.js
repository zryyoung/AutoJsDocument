import{_ as o}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as c,c as r,a as n,b as s,d as a,e as t,r as i}from"./app.6aa2b576.js";const p={},d=n("h1",{id:"base64",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#base64","aria-hidden":"true"},"#"),s(" base64")],-1),l=n("p",null,"Provides basic Base64 conversion functions.",-1),u=n("h2",{id:"base64-encode-str-encoding-utf-8",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#base64-encode-str-encoding-utf-8","aria-hidden":"true"},"#"),s(" $base64.encode(str, encoding = 'utf-8')")],-1),g={href:"https://g.pro.autojs.org/",target:"_blank",rel:"noopener noreferrer"},h=t(`<ul><li><code><span class="token property">str</span></code> {string} The string to encode</li><li><code><span class="token property">encoding</span></code> {string} Optional, character encoding</li></ul><p>Encodes the string str using Base64 and returns the encoded string.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>$base64<span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span><span class="token string">&#39;test&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// print &#39;dGVzdA==&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="base64-decode-str-encoding-utf-8" tabindex="-1"><a class="header-anchor" href="#base64-decode-str-encoding-utf-8" aria-hidden="true">#</a> $base64.decode(str, encoding = &#39;utf-8&#39;)</h2>`,4),k={href:"https://g.pro.autojs.org/",target:"_blank",rel:"noopener noreferrer"},_=t(`<ul><li><code><span class="token property">str</span></code> {string} The string to decode</li><li><code><span class="token property">encoding</span></code> {string} Optional, character encoding</li></ul><p>Decodes the string str using Base64 and returns the decoded string.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>$base64<span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span><span class="token string">&#39;dGVzdA==&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// print &#39;test&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,3);function b(f,m){const e=i("ExternalLinkIcon");return c(),r("div",null,[d,l,u,n("p",null,[s("** ["),n("a",g,[s("New in Pro 7.0.4"),a(e)]),s("] **")]),h,n("p",null,[s("** ["),n("a",k,[s("New in Pro 7.0.4"),a(e)]),s("] **")]),_])}const j=o(p,[["render",b],["__file","base64.html.vue"]]);export{j as default};
