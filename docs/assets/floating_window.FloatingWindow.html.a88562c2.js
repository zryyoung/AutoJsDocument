import{_ as i}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as l,c,a as e,d as n,w as o,b as t,e as s,r}from"./app.6aa2b576.js";const h={},p=e("h1",{id:"interface-floatingwindow",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#interface-floatingwindow","aria-hidden":"true"},"#"),t(" Interface: FloatingWindow")],-1),g=s('<p>Floating window object. Used to control the position, size, and content of the floating window.</p><h2 id="hierarchy" tabindex="-1"><a class="header-anchor" href="#hierarchy" aria-hidden="true">#</a> Hierarchy</h2><ul><li><p><code><span class="token property">unknown</span></code></p><p>\u21B3 <strong><code><span class="token property">FloatingWindow</span></code></strong></p></li></ul><h2 id="table-of-contents" tabindex="-1"><a class="header-anchor" href="#table-of-contents" aria-hidden="true">#</a> Table of contents</h2><h3 id="properties" tabindex="-1"><a class="header-anchor" href="#properties" aria-hidden="true">#</a> Properties</h3>',5),u=e("h3",{id:"methods",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#methods","aria-hidden":"true"},"#"),t(" Methods")],-1),f=s('<h2 id="properties-1" tabindex="-1"><a class="header-anchor" href="#properties-1" aria-hidden="true">#</a> Properties</h2><h3 id="isshowing" tabindex="-1"><a class="header-anchor" href="#isshowing" aria-hidden="true">#</a> isShowing</h3><p>\u2022 <code><span class="token property">Readonly</span></code> <strong>isShowing</strong>: <code><span class="token property">boolean</span></code></p><p>Whether the floating window is showing.</p><hr><h3 id="position" tabindex="-1"><a class="header-anchor" href="#position" aria-hidden="true">#</a> position</h3>',6),w=e("code",null,[e("span",{class:"token property"},"Readonly")],-1),_=e("strong",null,"position",-1),m=e("code",null,[e("span",{class:"token property"},"Point")],-1),y=e("p",null,"The current position of the floating window.",-1),v=e("hr",null,null,-1),b=e("h3",{id:"size",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#size","aria-hidden":"true"},"#"),t(" size")],-1),x=e("code",null,[e("span",{class:"token property"},"Readonly")],-1),k=e("strong",null,"size",-1),F=e("code",null,[e("span",{class:"token property"},"Size")],-1),L=s('<hr><h3 id="view" tabindex="-1"><a class="header-anchor" href="#view" aria-hidden="true">#</a> view</h3><p>\u2022 <code><span class="token property">Optional</span></code> <code><span class="token property">Readonly</span></code> <strong>view</strong>: <code><span class="token property">any</span></code></p><p>The content view of the floating window, or undefined if not set.</p><h2 id="methods-1" tabindex="-1"><a class="header-anchor" href="#methods-1" aria-hidden="true">#</a> Methods</h2><h3 id="addflags" tabindex="-1"><a class="header-anchor" href="#addflags" aria-hidden="true">#</a> addFlags</h3><p>\u25B8 <strong>addFlags</strong>(<code><span class="token property">flags</span></code>): <code><span class="token keyword">void</span></code></p>',7),W={href:"https://developer.android.com/reference/android/view/WindowManager.LayoutParams#FLAG_ALLOW_LOCK_WHILE_SCREEN_ON",target:"_blank",rel:"noopener noreferrer"},P=s(`<p><strong><code><span class="token property">Example</span></code></strong></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>&quot;nodejs&quot;;
const { createWindow, FLAG_NOT_TOUCHABLE } = require(&quot;floating_window&quot;);
async function main() {
  const window = createWindow();
  window.setViewFromXml(...);
  window.addFlags(FLAG_NOT_TOUCHABLE)
  window.show();
}
main();
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code><span class="token property">flags</span></code></td><td style="text-align:left;"><code><span class="token property">number</span></code></td></tr></tbody></table><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns" aria-hidden="true">#</a> Returns</h4><p><code><span class="token keyword">void</span></code></p><hr><h3 id="close" tabindex="-1"><a class="header-anchor" href="#close" aria-hidden="true">#</a> close</h3><p>\u25B8 <strong>close</strong>(): <code><span class="token property">Promise</span></code>&lt;<code><span class="token keyword">void</span></code>&gt;</p><p>Close the floating window.</p><h4 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1" aria-hidden="true">#</a> Returns</h4><p><code><span class="token property">Promise</span></code>&lt;<code><span class="token keyword">void</span></code>&gt;</p><hr><h3 id="enabledrag" tabindex="-1"><a class="header-anchor" href="#enabledrag" aria-hidden="true">#</a> enableDrag</h3>`,14),T=e("strong",null,"enableDrag",-1),O=e("code",null,[e("span",{class:"token property"},"view")],-1),A=e("code",null,[t("options"),e("span",{class:"token operator"},"?")],-1),N=e("code",null,[e("span",{class:"token property"},"DragGesture")],-1),S=e("p",null,"Enable drag gesture of the floating window.",-1),V=e("h4",{id:"parameters-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-1","aria-hidden":"true"},"#"),t(" Parameters")],-1),E=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),R=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,[e("span",{class:"token property"},"view")])]),e("td",{style:{"text-align":"left"}},[e("code",null,[e("span",{class:"token property"},"View")])]),e("td",{style:{"text-align":"left"}},"the drag anchor view of the drag gesture, drag the View to drag the whole floating window")],-1),G=e("td",{style:{"text-align":"left"}},[e("code",null,[t("options"),e("span",{class:"token operator"},"?")])],-1),z={style:{"text-align":"left"}},D=e("code",null,[e("span",{class:"token property"},"DragGestureOptions")],-1),C=e("td",{style:{"text-align":"left"}},"drag options of the floating window",-1),q=e("h4",{id:"returns-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-2","aria-hidden":"true"},"#"),t(" Returns")],-1),B=e("code",null,[e("span",{class:"token property"},"DragGesture")],-1),U=e("p",null,"DragGesture object, which can be used to disable the gesture",-1),I=e("hr",null,null,-1),M=e("h3",{id:"on",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#on","aria-hidden":"true"},"#"),t(" on")],-1),X=e("strong",null,"on",-1),H=e("code",null,[e("span",{class:"token property"},"event")],-1),j=e("code",null,[e("span",{class:"token property"},"listener")],-1),Y=e("code",null,[e("span",{class:"token property"},"FloatingWindow")],-1),K=s('<h4 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code><span class="token property">event</span></code></td><td style="text-align:left;"><code><span class="token string">&quot;touch&quot;</span></code></td></tr><tr><td style="text-align:left;"><code><span class="token property">listener</span></code></td><td style="text-align:left;">(<code><span class="token property">event</span></code>: <code><span class="token property">any</span></code>) =&gt; <code><span class="token keyword">void</span></code></td></tr></tbody></table><h4 id="returns-3" tabindex="-1"><a class="header-anchor" href="#returns-3" aria-hidden="true">#</a> Returns</h4>',3),J=e("code",null,[e("span",{class:"token property"},"FloatingWindow")],-1),Q=e("hr",null,null,-1),Z=e("h3",{id:"removeflags",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#removeflags","aria-hidden":"true"},"#"),t(" removeFlags")],-1),$=e("p",null,[t("\u25B8 "),e("strong",null,"removeFlags"),t("("),e("code",null,[e("span",{class:"token property"},"flags")]),t("): "),e("code",null,[e("span",{class:"token keyword"},"void")])],-1),ee={href:"https://developer.android.com/reference/android/view/WindowManager.LayoutParams#FLAG_ALLOW_LOCK_WHILE_SCREEN_ON",target:"_blank",rel:"noopener noreferrer"},te=s(`<p><strong><code><span class="token property">Example</span></code></strong></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>&quot;nodejs&quot;;
const { createWindow, FLAG_LAYOUT_NO_LIMITS, FLAG_NOT_FOCUSABLE } = require(&quot;floating_window&quot;);
async function main() {
  const window = createWindow();
  window.setViewFromXml(...);
  window.removeFlags(FLAG_LAYOUT_NO_LIMITS | FLAG_NOT_FOCUSABLE)
  window.show();
}
main();
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="parameters-3" tabindex="-1"><a class="header-anchor" href="#parameters-3" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code><span class="token property">flags</span></code></td><td style="text-align:left;"><code><span class="token property">number</span></code></td></tr></tbody></table><h4 id="returns-4" tabindex="-1"><a class="header-anchor" href="#returns-4" aria-hidden="true">#</a> Returns</h4><p><code><span class="token keyword">void</span></code></p><hr><h3 id="setposition" tabindex="-1"><a class="header-anchor" href="#setposition" aria-hidden="true">#</a> setPosition</h3><p>\u25B8 <strong>setPosition</strong>(<code><span class="token property">x</span></code>, <code><span class="token property">y</span></code>): <code><span class="token property">Promise</span></code>&lt;<code><span class="token keyword">void</span></code>&gt;</p><p>Set the position of the floating window.</p><h4 id="parameters-4" tabindex="-1"><a class="header-anchor" href="#parameters-4" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code><span class="token property">x</span></code></td><td style="text-align:left;"><code><span class="token property">number</span></code></td><td style="text-align:left;">x coordinate</td></tr><tr><td style="text-align:left;"><code><span class="token property">y</span></code></td><td style="text-align:left;"><code><span class="token property">number</span></code></td><td style="text-align:left;">y coordinate</td></tr></tbody></table><h4 id="returns-5" tabindex="-1"><a class="header-anchor" href="#returns-5" aria-hidden="true">#</a> Returns</h4><p><code><span class="token property">Promise</span></code>&lt;<code><span class="token keyword">void</span></code>&gt;</p><hr><h3 id="setsize" tabindex="-1"><a class="header-anchor" href="#setsize" aria-hidden="true">#</a> setSize</h3><p>\u25B8 <strong>setSize</strong>(<code><span class="token property">width</span></code>, <code><span class="token property">height</span></code>): <code><span class="token property">Promise</span></code>&lt;<code><span class="token keyword">void</span></code>&gt;</p><p>Set the size of the floating window, unit is pixel.</p><h4 id="parameters-5" tabindex="-1"><a class="header-anchor" href="#parameters-5" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code><span class="token property">width</span></code></td><td style="text-align:left;"><code><span class="token property">number</span></code></td><td style="text-align:left;">width, can be negative, see Size</td></tr><tr><td style="text-align:left;"><code><span class="token property">height</span></code></td><td style="text-align:left;"><code><span class="token property">number</span></code></td><td style="text-align:left;">height, can be negative, see Size</td></tr></tbody></table><h4 id="returns-6" tabindex="-1"><a class="header-anchor" href="#returns-6" aria-hidden="true">#</a> Returns</h4><p><code><span class="token property">Promise</span></code>&lt;<code><span class="token keyword">void</span></code>&gt;</p><hr><h3 id="setview" tabindex="-1"><a class="header-anchor" href="#setview" aria-hidden="true">#</a> setView</h3><p>\u25B8 <strong>setView</strong>(<code><span class="token property">view</span></code>): <code><span class="token keyword">void</span></code></p><p>Set the given View as the content of the floating window.</p><h4 id="parameters-6" tabindex="-1"><a class="header-anchor" href="#parameters-6" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code><span class="token property">view</span></code></td><td style="text-align:left;"><code><span class="token property">View</span></code></td></tr></tbody></table><h4 id="returns-7" tabindex="-1"><a class="header-anchor" href="#returns-7" aria-hidden="true">#</a> Returns</h4><p><code><span class="token keyword">void</span></code></p><hr><h3 id="setviewfromxml" tabindex="-1"><a class="header-anchor" href="#setviewfromxml" aria-hidden="true">#</a> setViewFromXml</h3><p>\u25B8 <strong>setViewFromXml</strong>(<code><span class="token property">xml</span></code>): <code><span class="token keyword">void</span></code></p><p>Parse xml to View, set as the content of the floating window.</p><h4 id="parameters-7" tabindex="-1"><a class="header-anchor" href="#parameters-7" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code><span class="token property">xml</span></code></td><td style="text-align:left;"><code><span class="token property">string</span></code></td></tr></tbody></table><h4 id="returns-8" tabindex="-1"><a class="header-anchor" href="#returns-8" aria-hidden="true">#</a> Returns</h4><p><code><span class="token keyword">void</span></code></p><hr><h3 id="setviewfromxmlfile" tabindex="-1"><a class="header-anchor" href="#setviewfromxmlfile" aria-hidden="true">#</a> setViewFromXmlFile</h3><p>\u25B8 <strong>setViewFromXmlFile</strong>(<code><span class="token property">xmlFile</span></code>): <code><span class="token property">Promise</span></code>&lt;<code><span class="token keyword">void</span></code>&gt;</p><p>Parse the given path of xml file to View, set as the content of the floating window. The reading of the file is asynchronous, so this function is also asynchronous.</p><h4 id="parameters-8" tabindex="-1"><a class="header-anchor" href="#parameters-8" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code><span class="token property">xmlFile</span></code></td><td style="text-align:left;"><code><span class="token property">string</span></code></td><td style="text-align:left;">xml file path</td></tr></tbody></table><h4 id="returns-9" tabindex="-1"><a class="header-anchor" href="#returns-9" aria-hidden="true">#</a> Returns</h4><p><code><span class="token property">Promise</span></code>&lt;<code><span class="token keyword">void</span></code>&gt;</p><hr><h3 id="show" tabindex="-1"><a class="header-anchor" href="#show" aria-hidden="true">#</a> show</h3><p>\u25B8 <strong>show</strong>(): <code><span class="token property">Promise</span></code>&lt;<code><span class="token keyword">void</span></code>&gt;</p><p>Show the floating window.</p>`,50),ne=e("h4",{id:"returns-10",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-10","aria-hidden":"true"},"#"),t(" Returns")],-1),ae=e("p",null,[e("code",null,[e("span",{class:"token property"},"Promise")]),t("<"),e("code",null,[e("span",{class:"token keyword"},"void")]),t(">")],-1);function oe(se,de){const a=r("RouterLink"),d=r("ExternalLinkIcon");return l(),c("div",null,[e("p",null,[n(a,{to:"/en/v9/generated/"},{default:o(()=>[t("Auto.js Pro 9 Docs")]),_:1}),t(" / "),n(a,{to:"/en/v9/generated/modules/floating_window.html"},{default:o(()=>[t("floating_window")]),_:1}),t(" / FloatingWindow")]),p,e("p",null,[n(a,{to:"/en/v9/generated/modules/floating_window.html"},{default:o(()=>[t("floating_window")]),_:1}),t(".FloatingWindow")]),g,e("ul",null,[e("li",null,[n(a,{to:"/en/v9/generated/interfaces/floating_window.FloatingWindow.html#isshowing"},{default:o(()=>[t("isShowing")]),_:1})]),e("li",null,[n(a,{to:"/en/v9/generated/interfaces/floating_window.FloatingWindow.html#position"},{default:o(()=>[t("position")]),_:1})]),e("li",null,[n(a,{to:"/en/v9/generated/interfaces/floating_window.FloatingWindow.html#size"},{default:o(()=>[t("size")]),_:1})]),e("li",null,[n(a,{to:"/en/v9/generated/interfaces/floating_window.FloatingWindow.html#view"},{default:o(()=>[t("view")]),_:1})])]),u,e("ul",null,[e("li",null,[n(a,{to:"/en/v9/generated/interfaces/floating_window.FloatingWindow.html#addflags"},{default:o(()=>[t("addFlags")]),_:1})]),e("li",null,[n(a,{to:"/en/v9/generated/interfaces/floating_window.FloatingWindow.html#close"},{default:o(()=>[t("close")]),_:1})]),e("li",null,[n(a,{to:"/en/v9/generated/interfaces/floating_window.FloatingWindow.html#enabledrag"},{default:o(()=>[t("enableDrag")]),_:1})]),e("li",null,[n(a,{to:"/en/v9/generated/interfaces/floating_window.FloatingWindow.html#on"},{default:o(()=>[t("on")]),_:1})]),e("li",null,[n(a,{to:"/en/v9/generated/interfaces/floating_window.FloatingWindow.html#removeflags"},{default:o(()=>[t("removeFlags")]),_:1})]),e("li",null,[n(a,{to:"/en/v9/generated/interfaces/floating_window.FloatingWindow.html#setposition"},{default:o(()=>[t("setPosition")]),_:1})]),e("li",null,[n(a,{to:"/en/v9/generated/interfaces/floating_window.FloatingWindow.html#setsize"},{default:o(()=>[t("setSize")]),_:1})]),e("li",null,[n(a,{to:"/en/v9/generated/interfaces/floating_window.FloatingWindow.html#setview"},{default:o(()=>[t("setView")]),_:1})]),e("li",null,[n(a,{to:"/en/v9/generated/interfaces/floating_window.FloatingWindow.html#setviewfromxml"},{default:o(()=>[t("setViewFromXml")]),_:1})]),e("li",null,[n(a,{to:"/en/v9/generated/interfaces/floating_window.FloatingWindow.html#setviewfromxmlfile"},{default:o(()=>[t("setViewFromXmlFile")]),_:1})]),e("li",null,[n(a,{to:"/en/v9/generated/interfaces/floating_window.FloatingWindow.html#show"},{default:o(()=>[t("show")]),_:1})])]),f,e("p",null,[t("\u2022 "),w,t(),_,t(": "),n(a,{to:"/en/v9/generated/interfaces/ui.Point.html"},{default:o(()=>[m]),_:1})]),y,v,b,e("p",null,[t("\u2022 "),x,t(),k,t(": "),n(a,{to:"/en/v9/generated/interfaces/ui.Size.html"},{default:o(()=>[F]),_:1})]),L,e("p",null,[t("Add specific flags to floating windows, such as "),n(a,{to:"/en/v9/generated/modules/floating_window.html#flag_not_touchable"},{default:o(()=>[t("FLAG_NOT_TOUCHABLE")]),_:1}),t(" to make the window untouchable, "),n(a,{to:"/en/v9/generated/modules/floating_window.html#flag_not_focusable"},{default:o(()=>[t("FLAG_NOT_FOCUSABLE")]),_:1}),t(" to make the window unfocusable.")]),e("p",null,[t("This module comes with some commonly used flags, but the complete flags need to visit the Android documentation "),e("a",W,[t("WindowManager.LayoutParams"),n(d)]),t(".")]),P,e("p",null,[t("\u25B8 "),T,t("("),O,t(", "),A,t("): "),n(a,{to:"/en/v9/generated/interfaces/floating_window.DragGesture.html"},{default:o(()=>[N]),_:1})]),S,V,e("table",null,[E,e("tbody",null,[R,e("tr",null,[G,e("td",z,[n(a,{to:"/en/v9/generated/interfaces/floating_window.DragGestureOptions.html"},{default:o(()=>[D]),_:1})]),C])])]),q,e("p",null,[n(a,{to:"/en/v9/generated/interfaces/floating_window.DragGesture.html"},{default:o(()=>[B]),_:1})]),U,I,M,e("p",null,[t("\u25B8 "),X,t("("),H,t(", "),j,t("): "),n(a,{to:"/en/v9/generated/interfaces/floating_window.FloatingWindow.html"},{default:o(()=>[Y]),_:1})]),K,e("p",null,[n(a,{to:"/en/v9/generated/interfaces/floating_window.FloatingWindow.html"},{default:o(()=>[J]),_:1})]),Q,Z,$,e("p",null,[t("Remove certain flags for floating windows, such as "),n(a,{to:"/en/v9/generated/modules/floating_window.html#flag_not_touchable"},{default:o(()=>[t("FLAG_NOT_TOUCHABLE")]),_:1}),t(" to make the window touchable, "),n(a,{to:"/en/v9/generated/modules/floating_window.html#flag_not_focusable"},{default:o(()=>[t("FLAG_NOT_FOCUSABLE")]),_:1}),t(" to make the window focusable.")]),e("p",null,[t("This module comes with some commonly used flags, but the complete flags need to visit the Android documentation "),e("a",ee,[t("WindowManager.LayoutParams"),n(d)]),t(".")]),te,e("p",null,[t("Note that showing the floating window needs to start the floating window service, which may not be possible if the application is in the background. Also, showing the floating window needs floating window permission, if it does not have permission, the floating window may not be displayed. You can use "),n(a,{to:"/en/v9/generated/modules/floating_window.html#managedrawoverlays"},{default:o(()=>[t("manageDrawOverlays")]),_:1}),t(" and "),n(a,{to:"/en/v9/generated/modules/floating_window.html#candrawoverlays"},{default:o(()=>[t("canDrawOverlays")]),_:1}),t(" to query and jump to floating window permission.")]),ne,ae])}const le=i(h,[["render",oe],["__file","floating_window.FloatingWindow.html.vue"]]);export{le as default};
