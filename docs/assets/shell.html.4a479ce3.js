import{_ as c}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as i,c as u,a as n,d as e,w as a,b as s,e as o,r as l}from"./app.6aa2b576.js";const r={},d=n("h1",{id:"shell",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#shell","aria-hidden":"true"},"#"),s(" shell")],-1),h=n("p",null,"Shell is Unix shell, which provides a set of commands for interacting with the operating system. Many programs can use shell to execute shell commands, such as terminal emulator.",-1),k=n("code",null,[n("span",{class:"token property"},"node")],-1),m=n("code",null,[n("span",{class:"token property"},"npm")],-1),f=n("code",null,[n("span",{class:"token constant"},"PATH")],-1),y=n("h2",{id:"table-of-contents",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#table-of-contents","aria-hidden":"true"},"#"),s(" Table of contents")],-1),g=n("h3",{id:"interfaces",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#interfaces","aria-hidden":"true"},"#"),s(" Interfaces")],-1),v=n("h3",{id:"type-aliases",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#type-aliases","aria-hidden":"true"},"#"),s(" Type Aliases")],-1),_=n("h3",{id:"functions",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#functions","aria-hidden":"true"},"#"),s(" Functions")],-1),b=o('<h2 id="type-aliases-1" tabindex="-1"><a class="header-anchor" href="#type-aliases-1" aria-hidden="true">#</a> Type Aliases</h2><h3 id="exitresult" tabindex="-1"><a class="header-anchor" href="#exitresult" aria-hidden="true">#</a> ExitResult</h3><p>\u01AC <strong>ExitResult</strong>: <code><span class="token property">string</span></code> | <code><span class="token property">number</span></code></p><hr><h3 id="privilegetype" tabindex="-1"><a class="header-anchor" href="#privilegetype" aria-hidden="true">#</a> PrivilegeType</h3><p>\u01AC <strong>PrivilegeType</strong>: <code><span class="token string">&quot;root&quot;</span></code> | <code><span class="token string">&quot;adb&quot;</span></code></p><hr><h3 id="standardoutputtype" tabindex="-1"><a class="header-anchor" href="#standardoutputtype" aria-hidden="true">#</a> StandardOutputType</h3><p>\u01AC <strong>StandardOutputType</strong>: <code><span class="token string">&quot;stderr&quot;</span></code> | <code><span class="token string">&quot;stdout&quot;</span></code></p><h2 id="functions-1" tabindex="-1"><a class="header-anchor" href="#functions-1" aria-hidden="true">#</a> Functions</h2><h3 id="inputtext" tabindex="-1"><a class="header-anchor" href="#inputtext" aria-hidden="true">#</a> InputText</h3><p>\u25B8 <strong>InputText</strong>(<code><span class="token property">text</span></code>): <code><span class="token property">Promise</span></code>&lt;<code><span class="token keyword">void</span></code>&gt;</p><p>Use default shell instance to execute <code>input text</code> command, simulate inputting text.</p>',13),x=o(`<p>These functions start with uppercase letter, which means they require root or adb permission, otherwise they only work in this app.</p><p><strong><code><span class="token property">Example</span></code></strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> InputText <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;shell&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">await</span> <span class="token function">InputText</span><span class="token punctuation">(</span><span class="token string">&quot;Hello, World&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code><span class="token property">text</span></code></td><td style="text-align:left;"><code><span class="token property">string</span></code></td><td style="text-align:left;">Text to input, only support ASCII characters</td></tr></tbody></table><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns" aria-hidden="true">#</a> Returns</h4><p><code><span class="token property">Promise</span></code>&lt;<code><span class="token keyword">void</span></code>&gt;</p><hr><h3 id="sendkey" tabindex="-1"><a class="header-anchor" href="#sendkey" aria-hidden="true">#</a> SendKey</h3><p>\u25B8 <strong>SendKey</strong>(<code><span class="token property">key</span></code>): <code><span class="token property">Promise</span></code>&lt;<code><span class="token keyword">void</span></code>&gt;</p><p>Use default shell instance to execute <code>input keyevent key</code> command, simulate sending key.</p>`,11),w=o(`<p>These functions start with uppercase letter, which means they require root or adb permission, otherwise they only work in this app.</p><p><strong><code><span class="token property">Example</span></code></strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> SendKey<span class="token punctuation">,</span> setDefaultShellOptions <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;shell&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">setDefaultShellOptions</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
       <span class="token literal-property property">adb</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">await</span> <span class="token function">SendKey</span><span class="token punctuation">(</span><span class="token string">&quot;HOME&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1" aria-hidden="true">#</a> Parameters</h4>`,4),S=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"left"}},"Name"),n("th",{style:{"text-align":"left"}},"Type"),n("th",{style:{"text-align":"left"}},"Description")])],-1),q=n("td",{style:{"text-align":"left"}},[n("code",null,[n("span",{class:"token property"},"key")])],-1),T=n("td",{style:{"text-align":"left"}},[n("code",null,[n("span",{class:"token property"},"string")]),s(" | "),n("code",null,[n("span",{class:"token property"},"number")])],-1),j={style:{"text-align":"left"}},R={href:"https://developer.android.com/reference/android/view/KeyEvent#KEYCODE_HOME",target:"_blank",rel:"noopener noreferrer"},O=o('<h4 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1" aria-hidden="true">#</a> Returns</h4><p><code><span class="token property">Promise</span></code>&lt;<code><span class="token keyword">void</span></code>&gt;</p><hr><h3 id="swipe" tabindex="-1"><a class="header-anchor" href="#swipe" aria-hidden="true">#</a> Swipe</h3><p>\u25B8 <strong>Swipe</strong>(<code><span class="token property">x1</span></code>, <code><span class="token property">y1</span></code>, <code><span class="token property">x2</span></code>, <code><span class="token property">y2</span></code>, <code>duration<span class="token operator">?</span></code>): <code><span class="token property">Promise</span></code>&lt;<code><span class="token keyword">void</span></code>&gt;</p><p>Use default shell instance to execute <code>input swipe x1 y1 x2 y2 duration</code> command, simulate sliding from position (x1, y1) to position (x2, y2).</p>',6),P=o(`<p>These functions start with uppercase letter, which means they require root or adb permission, otherwise they only work in this app.</p><p><strong><code><span class="token property">Example</span></code></strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> Swipe <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;shell&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">await</span> <span class="token function">Swipe</span><span class="token punctuation">(</span><span class="token number">800</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">800</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code><span class="token property">x1</span></code></td><td style="text-align:left;"><code><span class="token property">number</span></code></td><td style="text-align:left;">-</td></tr><tr><td style="text-align:left;"><code><span class="token property">y1</span></code></td><td style="text-align:left;"><code><span class="token property">number</span></code></td><td style="text-align:left;">-</td></tr><tr><td style="text-align:left;"><code><span class="token property">x2</span></code></td><td style="text-align:left;"><code><span class="token property">number</span></code></td><td style="text-align:left;">-</td></tr><tr><td style="text-align:left;"><code><span class="token property">y2</span></code></td><td style="text-align:left;"><code><span class="token property">number</span></code></td><td style="text-align:left;">-</td></tr><tr><td style="text-align:left;"><code>duration<span class="token operator">?</span></code></td><td style="text-align:left;"><code><span class="token property">number</span></code></td><td style="text-align:left;">Swipe duration, unit is millisecond</td></tr></tbody></table><h4 id="returns-2" tabindex="-1"><a class="header-anchor" href="#returns-2" aria-hidden="true">#</a> Returns</h4><p><code><span class="token property">Promise</span></code>&lt;<code><span class="token keyword">void</span></code>&gt;</p><hr><h3 id="tap" tabindex="-1"><a class="header-anchor" href="#tap" aria-hidden="true">#</a> Tap</h3><p>\u25B8 <strong>Tap</strong>(<code><span class="token property">x</span></code>, <code><span class="token property">y</span></code>): <code><span class="token property">Promise</span></code>&lt;<code><span class="token keyword">void</span></code>&gt;</p><p>Use default shell instance to execute <code>input tab</code> command, simulate clicking position (x, y).</p>`,11),E=o(`<p>These functions start with uppercase letter, which means they require root or adb permission, otherwise they only work in this app.</p><p><strong><code><span class="token property">Example</span></code></strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> Tap <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;shell&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">await</span> <span class="token function">Tap</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="parameters-3" tabindex="-1"><a class="header-anchor" href="#parameters-3" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code><span class="token property">x</span></code></td><td style="text-align:left;"><code><span class="token property">number</span></code></td></tr><tr><td style="text-align:left;"><code><span class="token property">y</span></code></td><td style="text-align:left;"><code><span class="token property">number</span></code></td></tr></tbody></table><h4 id="returns-3" tabindex="-1"><a class="header-anchor" href="#returns-3" aria-hidden="true">#</a> Returns</h4><p><code><span class="token property">Promise</span></code>&lt;<code><span class="token keyword">void</span></code>&gt;</p><hr><h3 id="checkaccess" tabindex="-1"><a class="header-anchor" href="#checkaccess" aria-hidden="true">#</a> checkAccess</h3><p>\u25B8 <strong>checkAccess</strong>(<code><span class="token property">type</span></code>): <code><span class="token property">Promise</span></code>&lt;<code><span class="token property">boolean</span></code>&gt;</p><p>Check if there is a specific privilege, such as whether there is root permission.</p><p><strong><code><span class="token property">Example</span></code></strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token punctuation">{</span> checkAccess <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;shell&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token keyword">const</span> hasRoot <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">checkAccess</span><span class="token punctuation">(</span><span class="token string">&quot;root&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token keyword">const</span> hasAdb <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">checkAccess</span><span class="token punctuation">(</span><span class="token string">&quot;adb&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">hasRoot: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>hasRoot<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">, hasAdb: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>hasAdb<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="parameters-4" tabindex="-1"><a class="header-anchor" href="#parameters-4" aria-hidden="true">#</a> Parameters</h4>`,14),A=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"left"}},"Name"),n("th",{style:{"text-align":"left"}},"Type"),n("th",{style:{"text-align":"left"}},"Description")])],-1),D=n("td",{style:{"text-align":"left"}},[n("code",null,[n("span",{class:"token property"},"type")])],-1),I={style:{"text-align":"left"}},K=n("code",null,[n("span",{class:"token property"},"PrivilegeType")],-1),N=n("td",{style:{"text-align":"left"}},'Privilege type, such as "root" or "adb"',-1),C=o('<h4 id="returns-4" tabindex="-1"><a class="header-anchor" href="#returns-4" aria-hidden="true">#</a> Returns</h4><p><code><span class="token property">Promise</span></code>&lt;<code><span class="token property">boolean</span></code>&gt;</p><p>Whether there is a specific privilege</p><hr><h3 id="createshell" tabindex="-1"><a class="header-anchor" href="#createshell" aria-hidden="true">#</a> createShell</h3>',5),H=n("strong",null,"createShell",-1),U=n("code",null,[s("options"),n("span",{class:"token operator"},"?")],-1),$=n("code",null,[n("span",{class:"token property"},"Shell")],-1),L=n("p",null,"Create a Shell instance.",-1),M=o(`<p>We can also listen to Shell&#39;s output by using Shell object.</p><p><strong><code><span class="token property">Example</span></code></strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> createShell <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;shell&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> shell <span class="token operator">=</span> <span class="token function">createShell</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
shell<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;line&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">line</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>line<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
shell<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">&quot;ls&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> id <span class="token operator">=</span> $autojs<span class="token punctuation">.</span><span class="token function">keepRunning</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
shell<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> $autojs<span class="token punctuation">.</span><span class="token function">cancelKeepRunning</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="parameters-5" tabindex="-1"><a class="header-anchor" href="#parameters-5" aria-hidden="true">#</a> Parameters</h4>`,4),V=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"left"}},"Name"),n("th",{style:{"text-align":"left"}},"Type"),n("th",{style:{"text-align":"left"}},"Description")])],-1),W=n("td",{style:{"text-align":"left"}},[n("code",null,[s("options"),n("span",{class:"token operator"},"?")])],-1),B={style:{"text-align":"left"}},F=n("code",null,[n("span",{class:"token property"},"ShellOptions")],-1),G=n("td",{style:{"text-align":"left"}},"Shell options, will override default options",-1),Y=n("h4",{id:"returns-5",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#returns-5","aria-hidden":"true"},"#"),s(" Returns")],-1),z=n("code",null,[n("span",{class:"token property"},"Shell")],-1),J=n("p",null,"New shell instance",-1),Q=n("hr",null,null,-1),X=n("h3",{id:"exec",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#exec","aria-hidden":"true"},"#"),s(" exec")],-1),Z=n("strong",null,"exec",-1),nn=n("code",null,[n("span",{class:"token property"},"cmd")],-1),sn=n("code",null,[s("options"),n("span",{class:"token operator"},"?")],-1),en=n("code",null,[n("span",{class:"token property"},"Promise")],-1),tn=n("code",null,[n("span",{class:"token property"},"ExecutionResult")],-1),an=o(`<p>Create a new shell process, and execute a command, return the result asynchronously.</p><p><strong><code><span class="token property">Example</span></code></strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> exec<span class="token punctuation">,</span> isRootAvailable <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;shell&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">await</span> <span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">&quot;npm&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">await</span> <span class="token function">isRootAvailable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
       console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">await</span> <span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">&quot;ls /data&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">root</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="parameters-6" tabindex="-1"><a class="header-anchor" href="#parameters-6" aria-hidden="true">#</a> Parameters</h4>`,4),on=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"left"}},"Name"),n("th",{style:{"text-align":"left"}},"Type"),n("th",{style:{"text-align":"left"}},"Description")])],-1),ln=n("tr",null,[n("td",{style:{"text-align":"left"}},[n("code",null,[n("span",{class:"token property"},"cmd")])]),n("td",{style:{"text-align":"left"}},[n("code",null,[n("span",{class:"token property"},"string")])]),n("td",{style:{"text-align":"left"}},"Command to execute")],-1),pn=n("td",{style:{"text-align":"left"}},[n("code",null,[s("options"),n("span",{class:"token operator"},"?")])],-1),cn={style:{"text-align":"left"}},un=n("code",null,[n("span",{class:"token property"},"ShellOptions")],-1),rn=n("td",{style:{"text-align":"left"}},"Shell options, will override default options",-1),dn=n("h4",{id:"returns-6",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#returns-6","aria-hidden":"true"},"#"),s(" Returns")],-1),hn=n("code",null,[n("span",{class:"token property"},"Promise")],-1),kn=n("code",null,[n("span",{class:"token property"},"ExecutionResult")],-1),mn=n("p",null,"Promise of execution result",-1),fn=n("hr",null,null,-1),yn=n("h3",{id:"getdefaultshelloptions",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#getdefaultshelloptions","aria-hidden":"true"},"#"),s(" getDefaultShellOptions")],-1),gn=n("strong",null,"getDefaultShellOptions",-1),vn=n("code",null,[n("span",{class:"token property"},"ShellOptions")],-1),_n=n("p",null,"Get default options for Shell.",-1),bn=n("p",null,[n("strong",null,[n("code",null,[n("span",{class:"token property"},"See")])])],-1),xn=n("h4",{id:"returns-7",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#returns-7","aria-hidden":"true"},"#"),s(" Returns")],-1),wn=n("code",null,[n("span",{class:"token property"},"ShellOptions")],-1),Sn=o(`<hr><h3 id="isrootavailable" tabindex="-1"><a class="header-anchor" href="#isrootavailable" aria-hidden="true">#</a> isRootAvailable</h3><p>\u25B8 <strong>isRootAvailable</strong>(): <code><span class="token property">Promise</span></code>&lt;<code><span class="token property">boolean</span></code>&gt;</p><p>Check if device is rooted. Note that device is rooted does not mean this app has root permission.</p><p><strong><code><span class="token property">Example</span></code></strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token punctuation">{</span> isRootAvailable <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;shell&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token keyword">const</span> rootAvailable <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">isRootAvailable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">rootAvailable: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>rootAvailable<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="returns-8" tabindex="-1"><a class="header-anchor" href="#returns-8" aria-hidden="true">#</a> Returns</h4><p><code><span class="token property">Promise</span></code>&lt;<code><span class="token property">boolean</span></code>&gt;</p><hr><h3 id="setdefaultshelloptions" tabindex="-1"><a class="header-anchor" href="#setdefaultshelloptions" aria-hidden="true">#</a> setDefaultShellOptions</h3><p>\u25B8 <strong>setDefaultShellOptions</strong>(<code><span class="token property">options</span></code>): <code><span class="token keyword">void</span></code></p><p>Set default options for Shell. These options include whether to use Root permission, adb permission, environment variables, etc. They will be used when creating new Shell or RootAutomator instance.</p><h4 id="parameters-7" tabindex="-1"><a class="header-anchor" href="#parameters-7" aria-hidden="true">#</a> Parameters</h4>`,13),qn=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"left"}},"Name"),n("th",{style:{"text-align":"left"}},"Type"),n("th",{style:{"text-align":"left"}},"Description")])],-1),Tn=n("td",{style:{"text-align":"left"}},[n("code",null,[n("span",{class:"token property"},"options")])],-1),jn={style:{"text-align":"left"}},Rn=n("code",null,[n("span",{class:"token property"},"ShellOptions")],-1),On=n("td",{style:{"text-align":"left"}},"Shell options",-1),Pn=n("h4",{id:"returns-9",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#returns-9","aria-hidden":"true"},"#"),s(" Returns")],-1),En=n("p",null,[n("code",null,[n("span",{class:"token keyword"},"void")])],-1);function An(Dn,In){const t=l("RouterLink"),p=l("ExternalLinkIcon");return i(),u("div",null,[n("p",null,[e(t,{to:"/en/v9/generated/"},{default:a(()=>[s("Auto.js Pro 9 Docs")]),_:1}),s(" / shell")]),d,h,n("p",null,[s("Auto.js Pro 9 also includes a terminal emulator for executing npm, node commands. This module creates a Shell object or executes a shell command using "),e(t,{to:"/en/v9/generated/modules/shell.html#exec"},{default:a(()=>[s("exec")]),_:1}),s(" function, which supports "),k,s(" and "),m,s(" commands unless you modify the "),f,s(" environment variable.")]),n("p",null,[s("This module provides functions "),e(t,{to:"/en/v9/generated/modules/shell.html#createshell"},{default:a(()=>[s("createShell")]),_:1}),s(" to create a new Shell object and "),e(t,{to:"/en/v9/generated/modules/shell.html#exec"},{default:a(()=>[s("exec")]),_:1}),s(" function to execute a shell command once.")]),y,g,n("ul",null,[n("li",null,[e(t,{to:"/en/v9/generated/interfaces/shell.ExecutionResult.html"},{default:a(()=>[s("ExecutionResult")]),_:1})]),n("li",null,[e(t,{to:"/en/v9/generated/interfaces/shell.Shell.html"},{default:a(()=>[s("Shell")]),_:1})]),n("li",null,[e(t,{to:"/en/v9/generated/interfaces/shell.ShellOptions.html"},{default:a(()=>[s("ShellOptions")]),_:1})])]),v,n("ul",null,[n("li",null,[e(t,{to:"/en/v9/generated/modules/shell.html#exitresult"},{default:a(()=>[s("ExitResult")]),_:1})]),n("li",null,[e(t,{to:"/en/v9/generated/modules/shell.html#privilegetype"},{default:a(()=>[s("PrivilegeType")]),_:1})]),n("li",null,[e(t,{to:"/en/v9/generated/modules/shell.html#standardoutputtype"},{default:a(()=>[s("StandardOutputType")]),_:1})])]),_,n("ul",null,[n("li",null,[e(t,{to:"/en/v9/generated/modules/shell.html#inputtext"},{default:a(()=>[s("InputText")]),_:1})]),n("li",null,[e(t,{to:"/en/v9/generated/modules/shell.html#sendkey"},{default:a(()=>[s("SendKey")]),_:1})]),n("li",null,[e(t,{to:"/en/v9/generated/modules/shell.html#swipe"},{default:a(()=>[s("Swipe")]),_:1})]),n("li",null,[e(t,{to:"/en/v9/generated/modules/shell.html#tap"},{default:a(()=>[s("Tap")]),_:1})]),n("li",null,[e(t,{to:"/en/v9/generated/modules/shell.html#checkaccess"},{default:a(()=>[s("checkAccess")]),_:1})]),n("li",null,[e(t,{to:"/en/v9/generated/modules/shell.html#createshell"},{default:a(()=>[s("createShell")]),_:1})]),n("li",null,[e(t,{to:"/en/v9/generated/modules/shell.html#exec"},{default:a(()=>[s("exec")]),_:1})]),n("li",null,[e(t,{to:"/en/v9/generated/modules/shell.html#getdefaultshelloptions"},{default:a(()=>[s("getDefaultShellOptions")]),_:1})]),n("li",null,[e(t,{to:"/en/v9/generated/modules/shell.html#isrootavailable"},{default:a(()=>[s("isRootAvailable")]),_:1})]),n("li",null,[e(t,{to:"/en/v9/generated/modules/shell.html#setdefaultshelloptions"},{default:a(()=>[s("setDefaultShellOptions")]),_:1})])]),b,n("p",null,[s("Default shell instance will be created automatically when using "),e(t,{to:"/en/v9/generated/modules/shell.html#tap"},{default:a(()=>[s("Tap")]),_:1}),s(", "),e(t,{to:"/en/v9/generated/modules/shell.html#swipe"},{default:a(()=>[s("Swipe")]),_:1}),s(", "),e(t,{to:"/en/v9/generated/modules/shell.html#sendkey"},{default:a(()=>[s("SendKey")]),_:1}),s(", "),e(t,{to:"/en/v9/generated/modules/shell.html#inputtext"},{default:a(()=>[s("InputText")]),_:1}),s(" etc. If you want to use adb permission or specific shell options, you should use "),e(t,{to:"/en/v9/generated/modules/shell.html#setdefaultshelloptions"},{default:a(()=>[s("setDefaultShellOptions")]),_:1}),s(" before using these functions.")]),x,n("p",null,[s("Default shell instance will be created automatically when using "),e(t,{to:"/en/v9/generated/modules/shell.html#tap"},{default:a(()=>[s("Tap")]),_:1}),s(", "),e(t,{to:"/en/v9/generated/modules/shell.html#swipe"},{default:a(()=>[s("Swipe")]),_:1}),s(", "),e(t,{to:"/en/v9/generated/modules/shell.html#sendkey"},{default:a(()=>[s("SendKey")]),_:1}),s(", "),e(t,{to:"/en/v9/generated/modules/shell.html#inputtext"},{default:a(()=>[s("InputText")]),_:1}),s(" etc. If you want to use adb permission or specific shell options, you should use "),e(t,{to:"/en/v9/generated/modules/shell.html#setdefaultshelloptions"},{default:a(()=>[s("setDefaultShellOptions")]),_:1}),s(" before using these functions.")]),w,n("table",null,[S,n("tbody",null,[n("tr",null,[q,T,n("td",j,[s('Key name or key code, like "HOME" or 3, see '),n("a",R,[s("KeyEvent"),e(p)])])])])]),O,n("p",null,[s("Default shell instance will be created automatically when using "),e(t,{to:"/en/v9/generated/modules/shell.html#tap"},{default:a(()=>[s("Tap")]),_:1}),s(", "),e(t,{to:"/en/v9/generated/modules/shell.html#swipe"},{default:a(()=>[s("Swipe")]),_:1}),s(", "),e(t,{to:"/en/v9/generated/modules/shell.html#sendkey"},{default:a(()=>[s("SendKey")]),_:1}),s(", "),e(t,{to:"/en/v9/generated/modules/shell.html#inputtext"},{default:a(()=>[s("InputText")]),_:1}),s(" etc. If you want to use adb permission or specific shell options, you should use "),e(t,{to:"/en/v9/generated/modules/shell.html#setdefaultshelloptions"},{default:a(()=>[s("setDefaultShellOptions")]),_:1}),s(" before using these functions.")]),P,n("p",null,[s("Default shell instance will be created automatically when using "),e(t,{to:"/en/v9/generated/modules/shell.html#tap"},{default:a(()=>[s("Tap")]),_:1}),s(", "),e(t,{to:"/en/v9/generated/modules/shell.html#swipe"},{default:a(()=>[s("Swipe")]),_:1}),s(", "),e(t,{to:"/en/v9/generated/modules/shell.html#sendkey"},{default:a(()=>[s("SendKey")]),_:1}),s(", "),e(t,{to:"/en/v9/generated/modules/shell.html#inputtext"},{default:a(()=>[s("InputText")]),_:1}),s(" etc. If you want to use adb permission or specific shell options, you should use "),e(t,{to:"/en/v9/generated/modules/shell.html#setdefaultshelloptions"},{default:a(()=>[s("setDefaultShellOptions")]),_:1}),s(" before using these functions.")]),E,n("table",null,[A,n("tbody",null,[n("tr",null,[D,n("td",I,[e(t,{to:"/en/v9/generated/modules/shell.html#privilegetype"},{default:a(()=>[K]),_:1})]),N])])]),C,n("p",null,[s("\u25B8 "),H,s("("),U,s("): "),e(t,{to:"/en/v9/generated/interfaces/shell.Shell.html"},{default:a(()=>[$]),_:1})]),L,n("p",null,[s("We usually use "),e(t,{to:"/en/v9/generated/modules/shell.html#exec"},{default:a(()=>[s("exec")]),_:1}),s(" function to execute a single command and get the result, but if there are multiple commands to execute, the efficiency of Shell object is higher. This is because we don't need to create a new shell process every time we execute.")]),M,n("table",null,[V,n("tbody",null,[n("tr",null,[W,n("td",B,[e(t,{to:"/en/v9/generated/interfaces/shell.ShellOptions.html"},{default:a(()=>[F]),_:1})]),G])])]),Y,n("p",null,[e(t,{to:"/en/v9/generated/interfaces/shell.Shell.html"},{default:a(()=>[z]),_:1})]),J,Q,X,n("p",null,[s("\u25B8 "),Z,s("("),nn,s(", "),sn,s("): "),en,s("<"),e(t,{to:"/en/v9/generated/interfaces/shell.ExecutionResult.html"},{default:a(()=>[tn]),_:1}),s(">")]),an,n("table",null,[on,n("tbody",null,[ln,n("tr",null,[pn,n("td",cn,[e(t,{to:"/en/v9/generated/interfaces/shell.ShellOptions.html"},{default:a(()=>[un]),_:1})]),rn])])]),dn,n("p",null,[hn,s("<"),e(t,{to:"/en/v9/generated/interfaces/shell.ExecutionResult.html"},{default:a(()=>[kn]),_:1}),s(">")]),mn,fn,yn,n("p",null,[s("\u25B8 "),gn,s("(): "),e(t,{to:"/en/v9/generated/interfaces/shell.ShellOptions.html"},{default:a(()=>[vn]),_:1})]),_n,bn,n("p",null,[e(t,{to:"/en/v9/generated/modules/shell.html#setdefaultshelloptions"},{default:a(()=>[s("setDefaultShellOptions")]),_:1})]),xn,n("p",null,[e(t,{to:"/en/v9/generated/interfaces/shell.ShellOptions.html"},{default:a(()=>[wn]),_:1})]),Sn,n("table",null,[qn,n("tbody",null,[n("tr",null,[Tn,n("td",jn,[e(t,{to:"/en/v9/generated/interfaces/shell.ShellOptions.html"},{default:a(()=>[Rn]),_:1})]),On])])]),Pn,En])}const Cn=c(r,[["render",An],["__file","shell.html.vue"]]);export{Cn as default};
