import{_ as n}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as s,c as a,e as t}from"./app.6aa2b576.js";const e={},p=t(`<h1 id="dialogs" tabindex="-1"><a class="header-anchor" href="#dialogs" aria-hidden="true">#</a> dialogs</h1><blockquote><p>Stability: 2-Stable</p></blockquote><p>The dialogs module provides simple dialog support, which can interact with users through dialogs. The simplest example is as follows:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;Hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>This code will pop up a message prompt box to display &quot;Hello&quot;, and continue to run after the user clicks &quot;OK&quot;. A slightly more complicated example is as follows:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> clear <span class="token operator">=</span> <span class="token function">confirm</span><span class="token punctuation">(</span><span class="token string">&quot;Do you want to clear all caches?&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span><span class="token punctuation">(</span>clear<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;Clear successfully!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code><span class="token function">confirm</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code> will pop up a dialog box and let the user choose &quot;Yes&quot; or &quot;No&quot;, and return true if &quot;Yes&quot; is selected.</p><p>It is important to note that the dialog box cannot be used as usual in ui mode, and the callback function should be used or [Promise](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects /Promise). It may be slightly difficult to understand this. for example:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&quot;ui&quot;</span><span class="token punctuation">;</span>
<span class="token comment">//Callback form</span>
 <span class="token function">confirm</span><span class="token punctuation">(</span><span class="token string">&quot;Do you want to clear all caches?&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">clear</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
     <span class="token keyword">if</span><span class="token punctuation">(</span>clear<span class="token punctuation">)</span><span class="token punctuation">{</span>
          <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;Clear successfully!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token punctuation">}</span>
 <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//Promise form</span>
<span class="token function">confirm</span><span class="token punctuation">(</span><span class="token string">&quot;Do you want to clear all caches?&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">clear</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>clear<span class="token punctuation">)</span><span class="token punctuation">{</span>
          <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;Clear successfully!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="dialogs-alert-title-content-callback" tabindex="-1"><a class="header-anchor" href="#dialogs-alert-title-content-callback" aria-hidden="true">#</a> dialogs.alert(title[, content, callback])</h2><ul><li><code><span class="token property">title</span></code> {string} The title of the dialog box.</li><li><code><span class="token property">content</span></code> {string} Optional, the content of the dialog box. The default is empty.</li><li><code><span class="token property">callback</span></code> {Function} Callback function, optional. Called when the user clicks OK, generally used in ui mode.</li></ul><p>A prompt dialog box containing only the &quot;OK&quot; button is displayed. The script does not continue to run until the user clicks OK.</p><p>This function can also be used as a global function.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;An error occurred~&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;An unknown error occurred, please contact the script author&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>In ui mode, this function returns a <code><span class="token property">Promise</span></code>. E.g:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&quot;ui&quot;</span><span class="token punctuation">;</span>
<span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;hehehe&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    <span class="token comment">//When you click OK, it will execute here</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="dialogs-confirm-title-content-callback" tabindex="-1"><a class="header-anchor" href="#dialogs-confirm-title-content-callback" aria-hidden="true">#</a> dialogs.confirm(title[, content, callback])</h2><ul><li><code><span class="token property">title</span></code> {string} The title of the dialog box.</li><li><code><span class="token property">content</span></code> {string} Optional, the content of the dialog box. The default is empty.</li><li><code><span class="token property">callback</span></code> {Function} Callback function, optional. Called when the user clicks OK, generally used in ui mode.</li></ul><p>A prompt dialog box containing &quot;OK&quot; and &quot;Cancel&quot; buttons is displayed. If the user clicks &quot;OK&quot;, it returns <code><span class="token boolean">true</span></code>, otherwise it returns <code><span class="token boolean">false</span></code>.</p><p>This function can also be used as a global function.</p><p>In ui mode, this function returns a <code><span class="token property">Promise</span></code>. E.g:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&quot;ui&quot;</span><span class="token punctuation">;</span>
<span class="token function">confirm</span><span class="token punctuation">(</span><span class="token string">&quot;Are you sure&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    <span class="token comment">//When you click OK, it will execute here, the value is true or false, which means you click &quot;OK&quot; or &quot;Cancel&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="dialogs-rawinput-title-prefill-callback" tabindex="-1"><a class="header-anchor" href="#dialogs-rawinput-title-prefill-callback" aria-hidden="true">#</a> dialogs.rawInput(title[, prefill, callback])</h2><ul><li><code><span class="token property">title</span></code> {string} The title of the dialog box.</li><li><code><span class="token property">prefill</span></code> {string} The initial content of the input box, optional, and empty by default.</li><li><code><span class="token property">callback</span></code> {Function} Callback function, optional. Called when the user clicks OK, generally used in ui mode.</li></ul><p>Display a dialog box containing an input box, wait for the user to input content, and return the input string when the user clicks OK. If the user cancels the input, null is returned.</p><p>This function can also be used as a global function.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> name <span class="token operator">=</span> <span class="token function">rawInput</span><span class="token punctuation">(</span><span class="token string">&quot;Please enter your name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\u5C0F\u660E&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;Your name is&quot;</span> <span class="token operator">+</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>In ui mode, this function returns a <code><span class="token property">Promise</span></code>. E.g:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&quot;ui&quot;</span><span class="token punctuation">;</span>
<span class="token function">rawInput</span><span class="token punctuation">(</span><span class="token string">&quot;Please enter your name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\u5C0F\u660E&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">name</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;Your name is&quot;</span> <span class="token operator">+</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Of course, you can also use callback functions, for example:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">rawInput</span><span class="token punctuation">(</span><span class="token string">&quot;Please enter your name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Xiaoming&quot;</span><span class="token punctuation">,</span> <span class="token parameter">name</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
     <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;Your name is&quot;</span> <span class="token operator">+</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="dialogs-input-title-prefill-callback" tabindex="-1"><a class="header-anchor" href="#dialogs-input-title-prefill-callback" aria-hidden="true">#</a> dialogs.input(title[, prefill, callback])</h2><p>Equivalent to <code><span class="token function">eval</span><span class="token punctuation">(</span>dialogs<span class="token punctuation">.</span><span class="token function">rawInput</span><span class="token punctuation">(</span>title<span class="token punctuation">,</span> prefill<span class="token punctuation">,</span> callback<span class="token punctuation">)</span><span class="token punctuation">)</span></code>, the difference between this function and rawInput is that the input string will be calculated by eval and then returned. The returned string may not be a string.</p><p>You can use this function to input numbers, arrays, etc. E.g:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> age <span class="token operator">=</span> dialogs<span class="token punctuation">.</span><span class="token function">input</span><span class="token punctuation">(</span><span class="token string">&quot;Please enter your age&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;18&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// new Date().getYear() + 1900 can get the current year</span>
<span class="token keyword">var</span> year <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1900</span><span class="token operator">-</span>age<span class="token punctuation">;</span>
<span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;Your year of birth is&quot;</span> <span class="token operator">+</span> year<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>In ui mode, this function returns a <code><span class="token property">Promise</span></code>. E.g:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&quot;ui&quot;</span><span class="token punctuation">;</span>
dialogs<span class="token punctuation">.</span><span class="token function">input</span><span class="token punctuation">(</span><span class="token string">&quot;Please enter your age&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;18&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">age</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> year <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1900</span><span class="token operator">-</span>age<span class="token punctuation">;</span>
    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;Your year of birth is&quot;</span> <span class="token operator">+</span> year<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="dialogs-prompt-title-prefill-callback" tabindex="-1"><a class="header-anchor" href="#dialogs-prompt-title-prefill-callback" aria-hidden="true">#</a> dialogs.prompt(title[, prefill, callback])</h2><p>Equivalent to <code>dialogs<span class="token punctuation">.</span><span class="token function">rawInput</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code>;</p><h2 id="dialogs-select-title-items-callback" tabindex="-1"><a class="header-anchor" href="#dialogs-select-title-items-callback" aria-hidden="true">#</a> dialogs.select(title, items, callback)</h2><ul><li><code><span class="token property">title</span></code> {string} The title of the dialog box.</li><li><code><span class="token property">items</span></code> {Array} The option list of the dialog box is an array of strings.</li><li><code><span class="token property">callback</span></code> {Function} Callback function, optional. Called when the user clicks OK, generally used in ui mode.</li></ul><p>Display a dialog box with a list of options, wait for the user to select, and return the index of the option selected by the user (0 ~ item.length-1). If the user cancels the selection, return -1.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> options <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;Option A&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Option B&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Option C&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Option D&quot;</span><span class="token punctuation">]</span>
<span class="token keyword">var</span> i <span class="token operator">=</span> dialogs<span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token string">&quot;Please select an option&quot;</span><span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span><span class="token punctuation">(</span>i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token function">toast</span><span class="token punctuation">(</span><span class="token string">&quot;Your choice is&quot;</span> <span class="token operator">+</span> options<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
    <span class="token function">toast</span><span class="token punctuation">(</span><span class="token string">&quot;You canceled the selection&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>In ui mode, this function returns a <code><span class="token property">Promise</span></code>. E.g:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&quot;ui&quot;</span><span class="token punctuation">;</span>
dialogs<span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token string">&quot;Please select an option&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&quot;Option A&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Option B&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Option C&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Option D&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">i</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">toast</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="dialogs-singlechoice-title-items-index-callback" tabindex="-1"><a class="header-anchor" href="#dialogs-singlechoice-title-items-index-callback" aria-hidden="true">#</a> dialogs.singleChoice(title, items[, index, callback])</h2><ul><li><code><span class="token property">title</span></code> {string} The title of the dialog box.</li><li><code><span class="token property">items</span></code> {Array} The option list of the dialog box is an array of strings.</li><li><code><span class="token property">index</span></code> {number} The position of the initial option of the dialog box, the default is 0.</li><li><code><span class="token property">callback</span></code> {Function} Callback function, optional. Called when the user clicks OK, generally used in ui mode.</li></ul><p>Display a single-selection list dialog box, wait for the user to select, and return the index of the option selected by the user (0 ~ item.length-1). If the user cancels the selection, return -1.</p><p>In ui mode, this function returns a <code><span class="token property">Promise</span></code>.</p><h2 id="dialogs-multichoice-title-items-indices-callback" tabindex="-1"><a class="header-anchor" href="#dialogs-multichoice-title-items-indices-callback" aria-hidden="true">#</a> dialogs.multiChoice(title, items[, indices, callback])</h2><ul><li><code><span class="token property">title</span></code> {string} The title of the dialog box.</li><li><code><span class="token property">items</span></code> {Array} The option list of the dialog box is an array of strings.</li><li><code><span class="token property">indices</span></code> {Array} The array of the index of the initially selected item in the option list. The default is an empty array.</li><li><code><span class="token property">callback</span></code> {Function} Callback function, optional. Called when the user clicks OK, generally used in ui mode.</li></ul><p>Display a multiple-selection list dialog box, wait for the user to select, and return an array of the index of the option selected by the user. If the user cancels the selection, return to <code><span class="token punctuation">[</span><span class="token punctuation">]</span></code>.</p><p>In ui mode, this function returns a <code><span class="token property">Promise</span></code>.</p><h2 id="dialogs-build-properties" tabindex="-1"><a class="header-anchor" href="#dialogs-build-properties" aria-hidden="true">#</a> dialogs.build(properties)</h2><ul><li><code><span class="token property">properties</span></code> {Object} Dialog properties, used to configure dialogs.</li><li>Back to {Dialog}</li></ul><p>Create a customizable dialog box, for example:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>dialogs<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token comment">//Dialog title</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&quot;New Version Found&quot;</span><span class="token punctuation">,</span>
    <span class="token comment">//Dialog content</span>
    <span class="token literal-property property">content</span><span class="token operator">:</span> <span class="token string">&quot;Update log: Several new bugs have been added&quot;</span><span class="token punctuation">,</span>
    <span class="token comment">//Determine the key content</span>
    <span class="token literal-property property">positive</span><span class="token operator">:</span> <span class="token string">&quot;Download&quot;</span><span class="token punctuation">,</span>
    <span class="token comment">//Cancel key content</span>
    <span class="token literal-property property">negative</span><span class="token operator">:</span> <span class="token string">&quot;Cancel&quot;</span><span class="token punctuation">,</span>
    <span class="token comment">//Neutral key content</span>
    <span class="token literal-property property">neutral</span><span class="token operator">:</span> <span class="token string">&quot;Download to browser&quot;</span><span class="token punctuation">,</span>
    <span class="token comment">//Check box content</span>
    <span class="token literal-property property">checkBoxPrompt</span><span class="token operator">:</span> <span class="token string">&quot;Don&#39;t prompt anymore&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;positive&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    <span class="token comment">//Monitor confirm key</span>
    <span class="token function">toast</span><span class="token punctuation">(</span><span class="token string">&quot;Start downloading...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;neutral&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    <span class="token comment">//Monitor the neutral key</span>
    app<span class="token punctuation">.</span><span class="token function">openUrl</span><span class="token punctuation">(</span><span class="token string">&quot;https://www.autojs.org&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;check&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">checked</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    <span class="token comment">//Monitor check box</span>
    <span class="token function">log</span><span class="token punctuation">(</span>checked<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The items that can be configured with the option properties are:</p><ul><li><code><span class="token property">title</span></code> {string} dialog title</li><li><code><span class="token property">titleColor</span></code> {string} | {number} The color of the dialog title</li><li><code><span class="token property">buttonRippleColor</span></code> {string} | {number} The ripple effect color of the dialog button</li><li><code><span class="token property">icon</span></code> {string} | {Image} The icon of the dialog box, which is a URL or image object</li><li><code><span class="token property">content</span></code> {string} dialog box text content</li><li><code><span class="token property">contentColor</span></code>{string} | {number} The color of the text content of the dialog box</li><li><code><span class="token property">contentLineSpacing</span></code>{number} The line height multiple of the dialog box text content, 1.0 is double the line height</li><li><code><span class="token property">customView</span></code> {android.view.View} The custom view for dialog</li><li><code><span class="token property">items</span></code> {Array} dialog box list options</li><li><code><span class="token property">itemsColor</span></code> {string} | {number} The text color of the options in the dialog box list</li><li><code><span class="token property">itemsSelectMode</span></code> {string} The option selection mode of the dialog box list, which can be: <ul><li><code><span class="token property">select</span></code> normal selection mode</li><li><code><span class="token property">single</span></code> single selection mode</li><li><code><span class="token property">multi</span></code> multiple selection mode</li></ul></li><li><code><span class="token property">itemsSelectedIndex</span></code> {number} | {Array} The index of the pre-selected item in the dialog box list, if it is a single-selection mode, it is an index; if it is a multiple-selection mode, it is an array</li><li><code><span class="token property">positive</span></code> {string} The text content of the dialog box confirm button (the rightmost button)</li><li><code><span class="token property">positiveColor</span></code> {string} | {number} The text color of the dialog box confirm button (the rightmost button)</li><li><code><span class="token property">neutral</span></code> {string} The text content of the neutral button in the dialog box (the leftmost button)</li><li><code><span class="token property">neutralColor</span></code> {string} | {number} The text color of the neutral button in the dialog box (the leftmost button)</li><li><code><span class="token property">negative</span></code> {string} The text content of the cancel button of the dialog box (the button to the left of the OK button)</li><li><code><span class="token property">negativeColor</span></code> {string} | {number} The text color of the cancel button in the dialog box (the button to the left of the OK button)</li><li><code><span class="token property">checkBoxPrompt</span></code> {string} Check box text content</li><li><code><span class="token property">checkBoxChecked</span></code> {boolean} Whether the check box is checked</li><li><code><span class="token property">progress</span></code> {Object} Configure the object of the progress bar of the dialog box: <ul><li><code><span class="token property">max</span></code> {number} The maximum value of the progress bar, if it is -1, it is an endless loop progress bar</li><li><code><span class="token property">horizontal</span></code> {boolean} If true, the infinite loop progress bar of the dialog is a horizontal progress bar</li><li><code><span class="token property">showMinMax</span></code> {boolean} Whether to display the maximum and minimum values \u200B\u200Bof the progress bar</li></ul></li><li><code><span class="token property">cancelable</span></code> {boolean} Whether the dialog box can be cancelled, if it is false, the dialog box can only be cancelled manually with code</li><li><code><span class="token property">canceledOnTouchOutside</span></code> {boolean} Whether the dialog box is automatically cancelled when clicking outside the dialog box, the default is true</li><li><code><span class="token property">inputHint</span></code> {string} The input prompt of the input box of the dialog box</li><li><code><span class="token property">inputPrefill</span></code> {string} The default input content of the dialog input box</li></ul><p>Through these options, you can customize a dialog box, and realize the interaction by monitoring the keystrokes and input events of the returned Dialog object. Here are some examples.</p><p>Simulate alert dialog:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>dialogs<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&quot;Hello&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">content</span><span class="token operator">:</span> <span class="token string">&quot;Today also be full of vitality&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">positive</span><span class="token operator">:</span> <span class="token string">&quot;OK&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Simulate confirm dialog:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>dialogs<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&quot;Hello&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">content</span><span class="token operator">:</span> <span class="token string">&quot;Are you a fool?&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">positive</span><span class="token operator">:</span> <span class="token string">&quot;Yes&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">negative</span><span class="token operator">:</span> <span class="token string">&quot;I am a fool&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;positive&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;Hahaha fool&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;negative&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;Hahaha fool&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Simulate radio buttons:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>dialogs<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&quot;Single Selection&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">items</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;Option 1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Option 2&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Option 3&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Option 4&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token literal-property property">itemsSelectMode</span><span class="token operator">:</span> <span class="token string">&quot;single&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">itemsSelectedIndex</span><span class="token operator">:</span> <span class="token number">3</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;single_choice&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">index<span class="token punctuation">,</span> item</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    <span class="token function">toast</span><span class="token punctuation">(</span><span class="token string">&quot;Your choice is&quot;</span> <span class="token operator">+</span> item<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>&quot;Processing&quot; dialog:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> d <span class="token operator">=</span> dialogs<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&quot;Downloading...&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">progress</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">max</span><span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">cancelable</span><span class="token operator">:</span> <span class="token boolean">false</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    d<span class="token punctuation">.</span><span class="token function">dismiss</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Input dialog:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>dialogs<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&quot;Please enter your age&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">inputPrefill</span><span class="token operator">:</span> <span class="token string">&quot;18&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;input&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">input</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    <span class="token keyword">var</span> age <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>input<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">toastLog</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Using this function to construct a dialog box, one obvious difference is that you need to use a callback function instead of returning results synchronously like other dialogs functions; but it can also be achieved through the threads module. For example, display an input box and get the input result as:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> input <span class="token operator">=</span> threads<span class="token punctuation">.</span><span class="token function">disposable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
dialogs<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&quot;Please enter your age&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">inputPrefill</span><span class="token operator">:</span> <span class="token string">&quot;18&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;input&quot;</span><span class="token punctuation">,</span> <span class="token parameter">text</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    input<span class="token punctuation">.</span><span class="token function">setAndNotify</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> age <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>input<span class="token punctuation">.</span><span class="token function">blockedGet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">toastLog</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="dialog" tabindex="-1"><a class="header-anchor" href="#dialog" aria-hidden="true">#</a> Dialog</h1><p>The dialog object returned by <code>dialogs<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code> has some built-in events to respond to user interaction, and you can also get the status and information of the dialog.</p><h2 id="event-show" tabindex="-1"><a class="header-anchor" href="#event-show" aria-hidden="true">#</a> Event: <code><span class="token property">show</span></code></h2><ul><li><code><span class="token property">dialog</span></code> {Dialog} dialog</li></ul><p>The event that will be triggered when the dialog box is displayed. E.g:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>dialogs<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&quot;Title&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;show&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">dialog</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    <span class="token function">toast</span><span class="token punctuation">(</span><span class="token string">&quot;The dialog box is displayed&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="event-cancel" tabindex="-1"><a class="header-anchor" href="#event-cancel" aria-hidden="true">#</a> Event: <code><span class="token property">cancel</span></code></h2><ul><li><code><span class="token property">dialog</span></code> {Dialog} dialog</li></ul><p>The event that will be triggered when the dialog is cancelled. A dialog box may be canceled by pressing the cancel button, the return key, or by clicking outside the dialog box. E.g:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>dialogs<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&quot;Title&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">positive</span><span class="token operator">:</span> <span class="token string">&quot;OK&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">negative</span><span class="token operator">:</span> <span class="token string">&quot;Cancel&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;cancel&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">dialog</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    <span class="token function">toast</span><span class="token punctuation">(</span><span class="token string">&quot;The dialog is cancelled&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="event-dismiss" tabindex="-1"><a class="header-anchor" href="#event-dismiss" aria-hidden="true">#</a> Event: <code><span class="token property">dismiss</span></code></h2><ul><li><code><span class="token property">dialog</span></code> {Dialog} dialog</li></ul><p>The event that will be triggered when the dialog box disappears. The event will be triggered when the dialog is cancelled or the <code>dialog<span class="token punctuation">.</span><span class="token function">dismiss</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code> function is manually called. E.g:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> d <span class="token operator">=</span> dialogs<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&quot;Title&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">positive</span><span class="token operator">:</span> <span class="token string">&quot;OK&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">negative</span><span class="token operator">:</span> <span class="token string">&quot;Cancel&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;dismiss&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">dialog</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    <span class="token function">toast</span><span class="token punctuation">(</span><span class="token string">&quot;The dialog box disappeared&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    d<span class="token punctuation">.</span><span class="token function">dismiss</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="event-positive" tabindex="-1"><a class="header-anchor" href="#event-positive" aria-hidden="true">#</a> Event: <code><span class="token property">positive</span></code></h2><ul><li><code><span class="token property">dialog</span></code> {Dialog} dialog</li></ul><p>Determines the event that is triggered when the button is pressed. E.g:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> d <span class="token operator">=</span> dialogs<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&quot;Title&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">positive</span><span class="token operator">:</span> <span class="token string">&quot;OK&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">negative</span><span class="token operator">:</span> <span class="token string">&quot;Cancel&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;positive&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">dialog</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    <span class="token function">toast</span><span class="token punctuation">(</span><span class="token string">&quot;You clicked OK&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="event-negative" tabindex="-1"><a class="header-anchor" href="#event-negative" aria-hidden="true">#</a> Event: <code><span class="token property">negative</span></code></h2><ul><li><code><span class="token property">dialog</span></code> {Dialog} dialog</li></ul><p>The event triggered when the cancel button is pressed. E.g:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> d <span class="token operator">=</span> dialogs<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&quot;Title&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">positive</span><span class="token operator">:</span> <span class="token string">&quot;OK&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">negative</span><span class="token operator">:</span> <span class="token string">&quot;Cancel&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;negative&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">dialog</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    <span class="token function">toast</span><span class="token punctuation">(</span><span class="token string">&quot;You clicked to cancel&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="event-neutral" tabindex="-1"><a class="header-anchor" href="#event-neutral" aria-hidden="true">#</a> Event: <code><span class="token property">neutral</span></code></h2><ul><li><code><span class="token property">dialog</span></code> {Dialog} dialog</li></ul><p>Event triggered when the neutral button is pressed. E.g:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> d <span class="token operator">=</span> dialogs<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&quot;Title&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">positive</span><span class="token operator">:</span> <span class="token string">&quot;OK&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">negative</span><span class="token operator">:</span> <span class="token string">&quot;Cancel&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">neutral</span><span class="token operator">:</span> <span class="token string">&quot;Reminder later&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;positive&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">dialog</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    <span class="token function">toast</span><span class="token punctuation">(</span><span class="token string">&quot;You clicked and prompt later&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="event-any" tabindex="-1"><a class="header-anchor" href="#event-any" aria-hidden="true">#</a> Event: <code><span class="token property">any</span></code></h2><ul><li><code><span class="token property">dialog</span></code> {Dialog} dialog</li><li><code><span class="token property">action</span></code> {string} The button that was clicked, the possible values \u200B\u200Bare: <ul><li><code><span class="token property">positive</span></code> OK button</li><li><code><span class="token property">negative</span></code> cancel button</li><li><code><span class="token property">neutral</span></code> button</li></ul></li></ul><p>Event triggered when any button is pressed. E.g:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> d <span class="token operator">=</span> dialogs<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&quot;Title&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">positive</span><span class="token operator">:</span> <span class="token string">&quot;OK&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">negative</span><span class="token operator">:</span> <span class="token string">&quot;Cancel&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">neutral</span><span class="token operator">:</span> <span class="token string">&quot;Reminder later&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;any&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">action<span class="token punctuation">,</span> dialog</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>action <span class="token operator">==</span> <span class="token string">&quot;positive&quot;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token function">toast</span><span class="token punctuation">(</span><span class="token string">&quot;You clicked OK&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>action <span class="token operator">==</span> <span class="token string">&quot;negative&quot;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token function">toast</span><span class="token punctuation">(</span><span class="token string">&quot;You clicked to cancel&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="event-item-select" tabindex="-1"><a class="header-anchor" href="#event-item-select" aria-hidden="true">#</a> Event: <code><span class="token property">item_select</span></code></h2><ul><li><code><span class="token property">index</span></code> {number} The index of the selected item, starting from 0</li><li><code><span class="token property">item</span></code> {Object} the selected item</li><li><code><span class="token property">dialog</span></code> {Dialog} dialog</li></ul><p>The event that is triggered when an item in the dialog box list (itemsSelectMode is &quot;select&quot;) is clicked and selected. E.g:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> d <span class="token operator">=</span> dialogs<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&quot;Please select&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">positive</span><span class="token operator">:</span> <span class="token string">&quot;OK&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">negative</span><span class="token operator">:</span> <span class="token string">&quot;Cancel&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">items</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;A&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;B&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;C&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;D&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token literal-property property">itemsSelectMode</span><span class="token operator">:</span> <span class="token string">&quot;select&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;item_select&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">index<span class="token punctuation">,</span> item<span class="token punctuation">,</span> dialog</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    <span class="token function">toast</span><span class="token punctuation">(</span><span class="token string">&quot;Your choice is the first&quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>index <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;item, the option is &quot;</span><span class="token operator">+</span> item<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="event-single-choice" tabindex="-1"><a class="header-anchor" href="#event-single-choice" aria-hidden="true">#</a> Event: <code><span class="token property">single_choice</span></code></h2><ul><li><code><span class="token property">index</span></code> {number} The index of the selected item, starting from 0</li><li><code><span class="token property">item</span></code> {Object} the selected item</li><li><code><span class="token property">dialog</span></code> {Dialog} dialog</li></ul><p>The event that is triggered when an item in the dialog box single-selection list (itemsSelectMode is &quot;singleChoice&quot;) is selected and OK is clicked. E.g:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> d <span class="token operator">=</span> dialogs<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&quot;Please select&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">positive</span><span class="token operator">:</span> <span class="token string">&quot;OK&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">negative</span><span class="token operator">:</span> <span class="token string">&quot;Cancel&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">items</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;A&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;B&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;C&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;D&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token literal-property property">itemsSelectMode</span><span class="token operator">:</span> <span class="token string">&quot;singleChoice&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;item_select&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">index<span class="token punctuation">,</span> item<span class="token punctuation">,</span> dialog</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    <span class="token function">toast</span><span class="token punctuation">(</span><span class="token string">&quot;Your choice is the first&quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>index <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;item, the option is &quot;</span><span class="token operator">+</span> item<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="event-multi-choice" tabindex="-1"><a class="header-anchor" href="#event-multi-choice" aria-hidden="true">#</a> Event: <code><span class="token property">multi_choice</span></code></h2><ul><li><code><span class="token property">indices</span></code> {Array} Array of indexes of selected items</li><li><code><span class="token property">items</span></code> {Array} Array of selected items</li><li><code><span class="token property">dialog</span></code> {Dialog} dialog</li></ul><p>The event that is triggered when an item in the dialog box multi-selection list (itemsSelectMode is &quot;multiChoice&quot;) is selected and clicked OK. E.g:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> d <span class="token operator">=</span> dialogs<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&quot;Please select&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">positive</span><span class="token operator">:</span> <span class="token string">&quot;OK&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">negative</span><span class="token operator">:</span> <span class="token string">&quot;Cancel&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">items</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;A&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;B&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;C&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;D&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token literal-property property">itemsSelectMode</span><span class="token operator">:</span> <span class="token string">&quot;multiChoice&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;item_select&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">indices<span class="token punctuation">,</span> items<span class="token punctuation">,</span> dialog</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    <span class="token function">toast</span><span class="token punctuation">(</span>util<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;The item you selected is %o, the option is %o&quot;</span><span class="token punctuation">,</span> indices<span class="token punctuation">,</span> items<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="event-input" tabindex="-1"><a class="header-anchor" href="#event-input" aria-hidden="true">#</a> Event: <code><span class="token property">input</span></code></h2><ul><li><code><span class="token property">text</span></code> {string}The content of the input box</li><li><code><span class="token property">dialog</span></code> {Dialog} dialog</li></ul><p>The event that will be triggered when the dialog box with the input box is clicked. E.g:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>dialogs<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&quot;Please enter&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">positive</span><span class="token operator">:</span> <span class="token string">&quot;OK&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">negative</span><span class="token operator">:</span> <span class="token string">&quot;Cancel&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">inputPrefill</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;input&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">text<span class="token punctuation">,</span> dialog</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    <span class="token function">toast</span><span class="token punctuation">(</span><span class="token string">&quot;What you entered is&quot;</span> <span class="token operator">+</span> text<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="event-input-change" tabindex="-1"><a class="header-anchor" href="#event-input-change" aria-hidden="true">#</a> Event: <code><span class="token property">input_change</span></code></h2><ul><li><code><span class="token property">text</span></code> {string} the content of the input box</li><li><code><span class="token property">dialog</span></code> {Dialog} dialog</li></ul><p>An event that is triggered when the text of the input box of the dialog box changes. E.g:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>dialogs<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&quot;Please enter&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">positive</span><span class="token operator">:</span> <span class="token string">&quot;OK&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">negative</span><span class="token operator">:</span> <span class="token string">&quot;Cancel&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">inputPrefill</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;input_change&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">text<span class="token punctuation">,</span> dialog</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    <span class="token function">toast</span><span class="token punctuation">(</span><span class="token string">&quot;What you entered is&quot;</span> <span class="token operator">+</span> text<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="dialog-getprogress" tabindex="-1"><a class="header-anchor" href="#dialog-getprogress" aria-hidden="true">#</a> dialog.getProgress()</h2><ul><li>Return {number}</li></ul><p>Get the progress value of the current progress bar, which is an integer</p><h2 id="dialog-getmaxprogress" tabindex="-1"><a class="header-anchor" href="#dialog-getmaxprogress" aria-hidden="true">#</a> dialog.getMaxProgress()</h2><ul><li>Return {number}</li></ul><p>Get the maximum progress value of the current progress bar, as an integer</p><h2 id="dialog-getactionbutton-action" tabindex="-1"><a class="header-anchor" href="#dialog-getactionbutton-action" aria-hidden="true">#</a> dialog.getActionButton(action)</h2><ul><li><code><span class="token property">action</span></code> {string} Action, including: <ul><li><code><span class="token property">positive</span></code></li><li><code><span class="token property">negative</span></code></li><li><code><span class="token property">neutral</span></code></li></ul></li></ul>`,130),o=[p];function c(i,l){return s(),a("div",null,o)}const d=n(e,[["render",c],["__file","dialogs.html.vue"]]);export{d as default};
