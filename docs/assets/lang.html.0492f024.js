import{_ as p}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as c,c as l,a as n,d as t,w as e,b as s,e as o,r as i}from"./app.6aa2b576.js";const r={},d=o('<h1 id="lang-\u8BED\u8A00" tabindex="-1"><a class="header-anchor" href="#lang-\u8BED\u8A00" aria-hidden="true">#</a> lang - \u8BED\u8A00</h1><p>lang\u63D0\u4F9B\u8BED\u8A00\u76F8\u5173\u7684API\uFF0C\u6BD4\u5982<code><span class="token property">delay</span></code>(\u5EF6\u65F6)\u3002</p><h2 id="\u76EE\u5F55" tabindex="-1"><a class="header-anchor" href="#\u76EE\u5F55" aria-hidden="true">#</a> \u76EE\u5F55</h2><h3 id="\u7C7B" tabindex="-1"><a class="header-anchor" href="#\u7C7B" aria-hidden="true">#</a> \u7C7B</h3>',4),u=n("h3",{id:"\u63A5\u53E3",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u63A5\u53E3","aria-hidden":"true"},"#"),s(" \u63A5\u53E3")],-1),k=n("h3",{id:"\u51FD\u6570",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u51FD\u6570","aria-hidden":"true"},"#"),s(" \u51FD\u6570")],-1),h=o(`<h2 id="\u51FD\u6570-1" tabindex="-1"><a class="header-anchor" href="#\u51FD\u6570-1" aria-hidden="true">#</a> \u51FD\u6570</h2><h3 id="delay" tabindex="-1"><a class="header-anchor" href="#delay" aria-hidden="true">#</a> delay</h3><p>\u25B8 <strong>delay</strong>(<code><span class="token property">timeout</span></code>): <code><span class="token property">Promise</span></code>&lt;<code><span class="token keyword">void</span></code>&gt;</p><p>\u8FD4\u56DE\u4E00\u4E2APromise\uFF0C\u5C06\u5728timeout\u65F6\u95F4\u540Eresolve\u3002\u4F8B\u5982<code><span class="token keyword">await</span> <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span></code>\u4F1A\u57281\u79D2\u540E\u6267\u884C\u3002\u4E0D\u540C\u4E8EPro 8\u7684<code><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code>\uFF0C\u6B64\u51FD\u6570\u5E76\u4E0D\u4F1A\u771F\u6B63\u963B\u585E\u7EBF\u7A0B/\u4E8B\u4EF6\u5FAA\u73AF\u3002</p><p><strong><code>\u793A\u4F8B</code></strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> delay <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;lang&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u53C2\u6570" tabindex="-1"><a class="header-anchor" href="#\u53C2\u6570" aria-hidden="true">#</a> \u53C2\u6570</h4><table><thead><tr><th style="text-align:left;">\u540D\u79F0</th><th style="text-align:left;">\u7C7B\u578B</th><th style="text-align:left;">\u63CF\u8FF0</th></tr></thead><tbody><tr><td style="text-align:left;"><code><span class="token property">timeout</span></code></td><td style="text-align:left;"><code><span class="token property">number</span></code></td><td style="text-align:left;">\u8D85\u65F6\u65F6\u95F4\uFF0C\u82E5\u5C0F\u4E8E\u6216\u7B49\u4E8E0\uFF0C\u5219\u6B64\u51FD\u6570\u8FD4\u56DE\u4E00\u4E2A\u7ACB\u5373resolve\u7684Promise\u3002</td></tr></tbody></table><h4 id="\u8FD4\u56DE\u503C" tabindex="-1"><a class="header-anchor" href="#\u8FD4\u56DE\u503C" aria-hidden="true">#</a> \u8FD4\u56DE\u503C</h4><p><code><span class="token property">Promise</span></code>&lt;<code><span class="token keyword">void</span></code>&gt;</p><hr><h3 id="lazy" tabindex="-1"><a class="header-anchor" href="#lazy" aria-hidden="true">#</a> lazy</h3><p>\u25B8 <strong>lazy</strong>(<code><span class="token property">target</span></code>, <code><span class="token property">name</span></code>, <code>__namedParameters<span class="token operator">?</span></code>): <code><span class="token property">any</span></code></p><p>TypeScript\u88C5\u9970\u5668\uFF0C\u5728JavaScript\u4E2D\u65E0\u6CD5\u4F7F\u7528\u3002</p><p>\u7528\u4E8E\u88C5\u9970\u7C7B\u7684getter\u5C5E\u6027\uFF0C\u88C5\u9970\u540E\u7684\u5C5E\u6027\u5728\u7B2C\u4E00\u4E2A\u8C03\u7528\u65F6\u4F1A\u88AB\u81EA\u52A8\u6267\u884C\u5E76\u4FDD\u5B58\u503C\uFF0C\u4EE5\u540E\u8C03\u7528\u65F6\u4F1A\u4F7F\u7528\u4E4B\u524D\u4FDD\u5B58\u7684\u503C\u3002</p><p><strong><code>\u793A\u4F8B</code></strong></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> lazy <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;lang&#39;</span>

<span class="token keyword">class</span> <span class="token class-name">Sum</span> <span class="token punctuation">{</span>
   <span class="token keyword">private</span> n<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>

   <span class="token function">constructor</span><span class="token punctuation">(</span>n<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token keyword">this</span><span class="token punctuation">.</span>n <span class="token operator">=</span> n<span class="token punctuation">;</span>
   <span class="token punctuation">}</span>

   <span class="token decorator"><span class="token at operator">@</span><span class="token function">lazy</span></span>
   <span class="token keyword">get</span> <span class="token function">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;calculating sum...&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
     <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          result <span class="token operator">+=</span> i<span class="token punctuation">;</span>
     <span class="token punctuation">}</span>
     <span class="token keyword">return</span> result<span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> sum <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Sum</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>sum<span class="token punctuation">.</span>sum<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// calculating sum...55</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>sum<span class="token punctuation">.</span>sum<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 55</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u53C2\u6570-1" tabindex="-1"><a class="header-anchor" href="#\u53C2\u6570-1" aria-hidden="true">#</a> \u53C2\u6570</h4><table><thead><tr><th style="text-align:left;">\u540D\u79F0</th><th style="text-align:left;">\u7C7B\u578B</th></tr></thead><tbody><tr><td style="text-align:left;"><code><span class="token property">target</span></code></td><td style="text-align:left;"><code><span class="token property">any</span></code></td></tr><tr><td style="text-align:left;"><code><span class="token property">name</span></code></td><td style="text-align:left;"><code><span class="token property">string</span></code></td></tr><tr><td style="text-align:left;"><code><span class="token property">__namedParameters</span></code></td><td style="text-align:left;"><code><span class="token property">PropertyDescriptor</span></code></td></tr></tbody></table><h4 id="\u8FD4\u56DE\u503C-1" tabindex="-1"><a class="header-anchor" href="#\u8FD4\u56DE\u503C-1" aria-hidden="true">#</a> \u8FD4\u56DE\u503C</h4><p><code><span class="token property">any</span></code></p><hr><h3 id="lazyprop" tabindex="-1"><a class="header-anchor" href="#lazyprop" aria-hidden="true">#</a> lazyProp</h3>`,23),m=n("strong",null,"lazyProp",-1),y=n("code",null,[n("span",{class:"token constant"},"T")],-1),v=n("code",null,[n("span",{class:"token property"},"evaluator")],-1),b=n("code",null,[n("span",{class:"token property"},"ReadOnlyProperty")],-1),g=n("code",null,[n("span",{class:"token constant"},"T")],-1),f=o('<h4 id="\u7C7B\u578B\u53C2\u6570" tabindex="-1"><a class="header-anchor" href="#\u7C7B\u578B\u53C2\u6570" aria-hidden="true">#</a> \u7C7B\u578B\u53C2\u6570</h4><table><thead><tr><th style="text-align:left;">\u540D\u79F0</th></tr></thead><tbody><tr><td style="text-align:left;"><code><span class="token constant">T</span></code></td></tr></tbody></table><h4 id="\u53C2\u6570-2" tabindex="-1"><a class="header-anchor" href="#\u53C2\u6570-2" aria-hidden="true">#</a> \u53C2\u6570</h4><table><thead><tr><th style="text-align:left;">\u540D\u79F0</th><th style="text-align:left;">\u7C7B\u578B</th></tr></thead><tbody><tr><td style="text-align:left;"><code><span class="token property">evaluator</span></code></td><td style="text-align:left;">() =&gt; <code><span class="token constant">T</span></code></td></tr></tbody></table><h4 id="\u8FD4\u56DE\u503C-2" tabindex="-1"><a class="header-anchor" href="#\u8FD4\u56DE\u503C-2" aria-hidden="true">#</a> \u8FD4\u56DE\u503C</h4>',5),x=n("code",null,[n("span",{class:"token property"},"ReadOnlyProperty")],-1),_=n("code",null,[n("span",{class:"token constant"},"T")],-1),w=o(`<hr><h3 id="promise" tabindex="-1"><a class="header-anchor" href="#promise" aria-hidden="true">#</a> promise</h3><p>\u25B8 <strong>promise</strong>&lt;<code><span class="token constant">T</span></code>&gt;(<code><span class="token property">executor</span></code>): <code><span class="token property">Promise</span></code>&lt;<code><span class="token constant">T</span></code>&gt;</p><p>\u521B\u5EFA\u4E00\u4E2APromise\uFF0C\u4E0E<code><span class="token keyword">new</span> <span class="token class-name">Promise</span></code>\u7C7B\u4F3C\uFF0C\u552F\u4E00\u4E0D\u540C\u7684\u662F\u5728\u6B64Promise\u72B6\u6001\u5728pending\u72B6\u6001\u65F6\uFF08\u4E5F\u5373resolve/reject\u4E4B\u524D\uFF09\uFF0Cautojs\u4F1A\u4FDD\u6301\u5F15\u64CE\u4E0D\u9000\u51FA\u3002</p><p>\u7531\u4E8Enodejs\u5E76\u4E0D\u611F\u77E5Java\u7684\u4E00\u4E9B\u5F02\u6B65API\u7684\u6267\u884C\uFF0C\u6B64\u51FD\u6570\u901A\u5E38\u7528\u4E8E\u521B\u5EFA\u548CJava API\u76F8\u5173\u7684Promise\uFF0C\u5728Java API\u8FD4\u56DE\u4E4B\u524D\u4FDD\u6301\u7A0B\u5E8F\u8FD0\u884C\u3002</p><p><strong><code>\u793A\u4F8B</code></strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> promise <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;lang&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> android <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;android&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">loadAudioAsync</span><span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> SoundPool <span class="token operator">=</span> android<span class="token punctuation">.</span>media<span class="token punctuation">.</span>SoundPool<span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token function">promise</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token keyword">const</span> soundPool <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SoundPool</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> SoundPool<span class="token punctuation">.</span><span class="token constant">STREAM_MUSIC</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     soundPool<span class="token punctuation">.</span><span class="token function">setOnLoadCompleteListener</span><span class="token punctuation">(</span>$autojs<span class="token punctuation">.</span>java<span class="token punctuation">.</span><span class="token function">wrap</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">resolve</span><span class="token punctuation">(</span>soundPool<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     soundPool<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u7C7B\u578B\u53C2\u6570-1" tabindex="-1"><a class="header-anchor" href="#\u7C7B\u578B\u53C2\u6570-1" aria-hidden="true">#</a> \u7C7B\u578B\u53C2\u6570</h4><table><thead><tr><th style="text-align:left;">\u540D\u79F0</th></tr></thead><tbody><tr><td style="text-align:left;"><code><span class="token constant">T</span></code></td></tr></tbody></table><h4 id="\u53C2\u6570-3" tabindex="-1"><a class="header-anchor" href="#\u53C2\u6570-3" aria-hidden="true">#</a> \u53C2\u6570</h4><table><thead><tr><th style="text-align:left;">\u540D\u79F0</th><th style="text-align:left;">\u7C7B\u578B</th></tr></thead><tbody><tr><td style="text-align:left;"><code><span class="token property">executor</span></code></td><td style="text-align:left;">(<code><span class="token property">resolve</span></code>: (<code><span class="token property">value</span></code>: <code><span class="token constant">T</span></code> | <code><span class="token property">PromiseLike</span></code>&lt;<code><span class="token constant">T</span></code>&gt;) =&gt; <code><span class="token keyword">void</span></code>, <code><span class="token property">reject</span></code>: (<code>reason<span class="token operator">?</span></code>: <code><span class="token property">any</span></code>) =&gt; <code><span class="token keyword">void</span></code>) =&gt; <code><span class="token keyword">void</span></code></td></tr></tbody></table><h4 id="\u8FD4\u56DE\u503C-3" tabindex="-1"><a class="header-anchor" href="#\u8FD4\u56DE\u503C-3" aria-hidden="true">#</a> \u8FD4\u56DE\u503C</h4><p><code><span class="token property">Promise</span></code>&lt;<code><span class="token constant">T</span></code>&gt;</p>`,13);function P(z,T){const a=i("RouterLink");return c(),l("div",null,[d,n("ul",null,[n("li",null,[t(a,{to:"/zh/v9/generated/classes/lang.Deferred.html"},{default:e(()=>[s("Deferred")]),_:1})]),n("li",null,[t(a,{to:"/zh/v9/generated/classes/lang.TimeoutError.html"},{default:e(()=>[s("TimeoutError")]),_:1})])]),u,n("ul",null,[n("li",null,[t(a,{to:"/zh/v9/generated/interfaces/lang.ReadOnlyProperty.html"},{default:e(()=>[s("ReadOnlyProperty")]),_:1})])]),k,n("ul",null,[n("li",null,[t(a,{to:"/zh/v9/generated/modules/lang.html#delay"},{default:e(()=>[s("delay")]),_:1})]),n("li",null,[t(a,{to:"/zh/v9/generated/modules/lang.html#lazy"},{default:e(()=>[s("lazy")]),_:1})]),n("li",null,[t(a,{to:"/zh/v9/generated/modules/lang.html#lazyprop"},{default:e(()=>[s("lazyProp")]),_:1})]),n("li",null,[t(a,{to:"/zh/v9/generated/modules/lang.html#promise"},{default:e(()=>[s("promise")]),_:1})])]),h,n("p",null,[s("\u25B8 "),m,s("<"),y,s(">("),v,s("): "),t(a,{to:"/zh/v9/generated/interfaces/lang.ReadOnlyProperty.html"},{default:e(()=>[b]),_:1}),s("<"),g,s(">")]),f,n("p",null,[t(a,{to:"/zh/v9/generated/interfaces/lang.ReadOnlyProperty.html"},{default:e(()=>[x]),_:1}),s("<"),_,s(">")]),w])}const R=p(r,[["render",P],["__file","lang.html.vue"]]);export{R as default};
