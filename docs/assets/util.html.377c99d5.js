import{_ as c}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as l,c as i,a as n,d as e,b as s,w as u,e as a,r as t}from"./app.6aa2b576.js";const r={},d=a(`<h1 id="util-\u5DE5\u5177" tabindex="-1"><a class="header-anchor" href="#util-\u5DE5\u5177" aria-hidden="true">#</a> util - \u5DE5\u5177</h1><p>util\u6A21\u5757\u662F\u5BF9\u9F50\u65E9\u671FNode.js\u7684util\u6A21\u5757\u800C\u5B9E\u73B0\u7684\uFF0C\u53E6\u5916\u4E3A\u65B9\u4FBFJava\u4EA4\u4E92\u800C\u589E\u52A0\u4E86<code>$util<span class="token punctuation">.</span>java</code>\u5BF9\u8C61\u3002</p><h2 id="util-java" tabindex="-1"><a class="header-anchor" href="#util-java" aria-hidden="true">#</a> $util.java</h2><p>\u63D0\u4F9BJava\u4EA4\u4E92\u7684\u8F85\u52A9\u5DE5\u5177\u3002</p><h3 id="util-java-instanceof-obj-clazz" tabindex="-1"><a class="header-anchor" href="#util-java-instanceof-obj-clazz" aria-hidden="true">#</a> $util.java.instanceOf(obj, clazz)</h3><ul><li><code><span class="token property">obj</span></code> {any} Java\u5BF9\u8C61</li><li><code><span class="token property">clazz</span></code> {string} \u7C7B\u540D</li><li>\u8FD4\u56DE {boolean}</li></ul><p>\u5224\u65AD\u4E00\u4E2A\u5BF9\u8C61\u662F\u5426\u5C5E\u4E8E\u67D0\u4E2A\u6307\u5B9A\u7684\u7C7B\u7684\u5B9E\u4F8B\uFF0C\u5982\u679C\u662F\uFF0C\u8FD4\u56DE<code><span class="token boolean">true</span></code>\uFF0C\u5426\u5219\u8FD4\u56DE<code><span class="token boolean">false</span></code>\u3002</p><h3 id="util-java-array-type-size" tabindex="-1"><a class="header-anchor" href="#util-java-array-type-size" aria-hidden="true">#</a> $util.java.array(type, size)</h3><ul><li><code><span class="token property">type</span></code> {string} \u6570\u7EC4\u7C7B\u578B\uFF0C\u53EF\u4EE5\u662F\u4E00\u4E2AJava\u7C7B\u540D\uFF0C\u6216\u8005\u662F\u4EE5\u4E0B\u521D\u59CB\u7C7B\u578B\u7684\u540D\u79F0\uFF1A <ul><li><code><span class="token string">&quot;int&quot;</span></code></li><li><code><span class="token string">&quot;long&quot;</span></code></li><li><code><span class="token string">&quot;double&quot;</span></code></li><li><code><span class="token string">&quot;char&quot;</span></code></li><li><code><span class="token string">&quot;byte&quot;</span></code></li><li><code><span class="token string">&quot;float&quot;</span></code></li></ul></li><li><code><span class="token property">size</span></code> {number} \u6570\u7EC4\u5927\u5C0F</li><li>\u8FD4\u56DE {Java\u6570\u7EC4}</li></ul><p>\u521B\u5EFA\u4E00\u4E2AJava\u6570\u7EC4\u5E76\u8FD4\u56DE\u3002\u4F8B\u5982\u521B\u5EFA\u4E8C\u8FDB\u5236byte\u6570\u7EC4<code><span class="token keyword">let</span> bytes <span class="token operator">=</span> $util<span class="token punctuation">.</span>java<span class="token punctuation">.</span><span class="token function">array</span><span class="token punctuation">(</span><span class="token string">&#39;byte&#39;</span><span class="token punctuation">,</span> <span class="token number">1024</span><span class="token punctuation">)</span></code>\u3002</p><h3 id="util-java-tojsarray-list-nulllisttoemptyarray" tabindex="-1"><a class="header-anchor" href="#util-java-tojsarray-list-nulllisttoemptyarray" aria-hidden="true">#</a> $util.java.toJsArray(list, nullListToEmptyArray)</h3><ul><li><code><span class="token property">list</span></code> {List} <code>java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List</code>\u5217\u8868\u5BF9\u8C61</li><li><code><span class="token property">nullListToEmptyArray</span></code> {boolean} null\u5217\u8868\u5BF9\u8C61\u662F\u5426\u8F6C\u5316\u4E3A\u7A7A\u6570\u7EC4</li><li>\u8FD4\u56DE {Array}</li></ul><p>\u5C06Java\u5217\u8868\u8F6C\u6362\u4E3Ajavascript\u6570\u7EC4\u3002</p><h3 id="util-java-objecttomap-obj" tabindex="-1"><a class="header-anchor" href="#util-java-objecttomap-obj" aria-hidden="true">#</a> $util.java.objectToMap(obj)</h3><ul><li><code><span class="token property">obj</span></code> {any} \u5BF9\u8C61</li><li>\u8FD4\u56DE {java.util.Map}</li></ul><p>\u5C06JavaScript object\u5BF9\u8C61\u8F6C\u6362\u6210<code>java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Map</code>\u3002</p><h3 id="util-java-maptoobject" tabindex="-1"><a class="header-anchor" href="#util-java-maptoobject" aria-hidden="true">#</a> $util.java.mapToObject</h3><ul><li><code><span class="token property">map</span></code> {Map} Java Map\u5BF9\u8C61</li><li>\u8FD4\u56DE {obj}</li></ul><p>\u5C06<code>java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Map</code>\u7684java\u5BF9\u8C61\u8F6C\u6362\u6210JavaScript object\u5BF9\u8C61\u3002</p><h2 id="util-format-format-args" tabindex="-1"><a class="header-anchor" href="#util-format-format-args" aria-hidden="true">#</a> $util.format(format[, ...args])</h2><ul><li><code><span class="token property">format</span></code> {string} \u7C7B\u4F3C<code><span class="token property">printf</span></code>\u7684\u683C\u5F0F\u5B57\u7B26\u4E32\u3002</li></ul><p><code>$util<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code> \u65B9\u6CD5\u4F7F\u7528\u7B2C\u4E00\u4E2A\u53C2\u6570\u8FD4\u56DE\u4E00\u4E2A\u683C\u5F0F\u5316\u7684\u5B57\u7B26\u4E32\u4F5C\u4E3A\u7C7B\u4F3C<code><span class="token property">printf</span></code>\u7684\u683C\u5F0F\u3002</p><p>\u7B2C\u4E00\u4E2A\u53C2\u6570\u662F\u4E00\u4E2A\u5305\u542B\u96F6\u4E2A\u6216\u591A\u4E2A <em>placeholder</em> \u6807\u8BB0\u7684\u5B57\u7B26\u4E32\u3002 \u6BCF\u4E2A\u5360\u4F4D\u7B26\u6807\u8BB0\u90FD\u66FF\u6362\u4E3A\u4ECE\u5BF9\u5E94\u7684\u8BBA\u636E\u3002 \u652F\u6301\u7684\u5360\u4F4D\u7B26\u6709\uFF1A</p><ul><li><code><span class="token operator">%</span>s</code> - \u5B57\u7B26\u4E32\u3002</li><li><code><span class="token operator">%</span>d</code> - \u6570\u5B57\uFF08\u6574\u6570\u6216\u6D6E\u70B9\u503C\uFF09\u3002</li><li><code><span class="token operator">%</span>i</code> - \u6574\u6570\u3002</li><li><code><span class="token operator">%</span>f</code> - \u6D6E\u70B9\u503C\u3002</li><li><code><span class="token operator">%</span>j</code> - JSON\u3002 \u5982\u679C\u53C2\u6570\u88AB\u66FF\u6362\u4E3A\u5B57\u7B26\u4E32 <code><span class="token string">&#39;[Circular]&#39;</span></code>\u5305\u542B\u5FAA\u73AF\u5F15\u7528\u3002</li><li><code><span class="token operator">%</span>o</code> - \u5BF9\u8C61\u3002 \u5BF9\u8C61\u7684\u5B57\u7B26\u4E32\u8868\u793A\uFF1A \u4F7F\u7528\u901A\u7528\u7684 JavaScript \u5BF9\u8C61\u683C\u5F0F\u3002 \u7C7B\u4F3C\u4E8E <code>$util<span class="token punctuation">.</span><span class="token function">inspect</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code>\uFF0C\u5E26\u6709\u9009\u9879 <code><span class="token punctuation">{</span> <span class="token literal-property property">showHidden</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token literal-property property">depth</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token literal-property property">showProxy</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span></code>\u3002 \u8FD9\u5C06\u663E\u793A\u5B8C\u6574\u7684\u5BF9\u8C61\uFF0C\u5305\u62EC\u4E0D\u53EF\u679A\u4E3E\u7684\u7B26\u53F7\u548C\u5C5E\u6027\u3002</li><li><code><span class="token operator">%</span><span class="token constant">O</span></code> - \u5BF9\u8C61\u3002 \u5177\u6709\u901A\u7528 JavaScript \u5BF9\u8C61\u683C\u5F0F\u7684\u5BF9\u8C61\u7684\u5B57\u7B26\u4E32\u8868\u793A\u5F62\u5F0F\u3002 \u7C7B\u4F3C\u4E8E <code>$util<span class="token punctuation">.</span><span class="token function">inspect</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code> \u6CA1\u6709\u9009\u9879\u3002 \u8FD9\u5C06\u663E\u793A\u4E0D\u5305\u62EC\u4E0D\u53EF\u679A\u4E3E\u7B26\u53F7\u548C\u5C5E\u6027\u7684\u5B8C\u6574\u5BF9\u8C61\u3002</li><li><code><span class="token operator">%</span><span class="token operator">%</span></code> - \u5355\u4E2A\u767E\u5206\u53F7\uFF08<code><span class="token string">&#39;%&#39;</span></code>\uFF09\u3002 \u8FD9\u4E0D\u4F1A\u6D88\u8017\u4E00\u4E2A\u8BBA\u70B9\u3002</li></ul><p>\u5982\u679C\u5360\u4F4D\u7B26\u6CA1\u6709\u5BF9\u5E94\u7684\u53C2\u6570\uFF0C\u5219\u5360\u4F4D\u7B26\u4E3A\u6CA1\u6709\u88AB\u66FF\u6362\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>$util<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&#39;%s:%s&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Returns: &#39;foo:%s&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u4F20\u9012\u7ED9 <code>$util<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code> \u65B9\u6CD5\u7684\u53C2\u6570\u591A\u4E8E\u5360\u4F4D\u7B26\u7684\u6570\u91CF\uFF0C\u5219\u989D\u5916\u7684\u53C2\u6570\u5C06\u88AB\u5F3A\u5236\u8F6C\u6362\u4E3A\u5B57\u7B26\u4E32\uFF0C\u7136\u540E\u8FDE\u63A5\u5230\u8FD4\u56DE\u7684\u5B57\u7B26\u4E32\uFF0C\u6BCF\u4E2A\u5B57\u7B26\u4E32\u7531\u7A7A\u683C\u5206\u9694\u3002 <code><span class="token keyword">typeof</span></code> \u4E3A <code><span class="token string">&#39;object&#39;</span></code> \u6216 <code><span class="token string">&#39;symbol&#39;</span></code> \u7684\u8FC7\u591A\u53C2\u6570\uFF08<code><span class="token keyword">null</span></code> \u9664\u5916\uFF09\u5C06\u7531 <code>$util<span class="token punctuation">.</span><span class="token function">inspect</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code> \u8F6C\u6362\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>$util<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&#39;%s:%s&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;foo&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;bar&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;baz&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#39;foo:bar baz&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u5982\u679C\u7B2C\u4E00\u4E2A\u53C2\u6570\u4E0D\u662F\u5B57\u7B26\u4E32\uFF0C\u5219 <code>$util<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code> \u8FD4\u56DE\u4E00\u4E2A\u5B57\u7B26\u4E32\uFF0C\u8BE5\u5B57\u7B26\u4E32\u662F\u7531\u7A7A\u683C\u5206\u9694\u7684\u6240\u6709\u53C2\u6570\u7684\u4E32\u8054\u3002 \u4F7F\u7528 $util.inspect() \u5C06\u6BCF\u4E2A\u53C2\u6570\u8F6C\u6362\u4E3A\u5B57\u7B26\u4E32\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>$util<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#39;1 2 3&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u5982\u679C\u53EA\u6709\u4E00\u4E2A\u53C2\u6570\u88AB\u4F20\u9012\u7ED9 $util.format() \uFF0C\u5B83\u4F1A\u6309\u539F\u6837\u8FD4\u56DE\uFF0C\u6CA1\u6709\u4EFB\u4F55\u683C\u5F0F\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>$util<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&#39;%% %s&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#39;%% %s&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="util-inspect-object-options" tabindex="-1"><a class="header-anchor" href="#util-inspect-object-options" aria-hidden="true">#</a> $util.inspect(object[, options])</h2><ul><li><code><span class="token property">object</span></code> {any} \u4EFB\u4F55 JavaScript \u539F\u8BED\u6216\u5BF9\u8C61\u3002</li><li><code>\u9009\u9879</code> {\u5BF9\u8C61} <ul><li><code><span class="token property">showHidden</span></code> {boolean} \u5982\u679C\u4E3A <code><span class="token boolean">true</span></code>\uFF0C\u5219 <code><span class="token property">object</span></code> \u7684\u4E0D\u53EF\u679A\u4E3E\u7B26\u53F7\u548C\u5C5E\u6027\u5C06\u5305\u542B\u5728\u683C\u5F0F\u5316\u7ED3\u679C\u4E2D\u3002 \u9ED8\u8BA4\u4E3A<code><span class="token boolean">false</span></code>\u3002</li><li><code><span class="token property">depth</span></code> {number} \u6307\u5B9A\u683C\u5F0F\u5316<code><span class="token property">object</span></code>\u65F6\u9012\u5F52\u7684\u6B21\u6570\u3002 \u8FD9\u5BF9\u4E8E\u68C0\u67E5\u5927\u578B\u590D\u6742\u5BF9\u8C61\u5F88\u6709\u7528\u3002\u9ED8\u8BA4\u4E3A<code><span class="token number">2</span></code>\u3002 \u4E3A\u4E86\u8BA9\u5B83\u65E0\u9650\u671F\u5730\u9012\u5F52\uFF0C\u4F20\u9012<code><span class="token keyword">null</span></code>\u3002</li></ul></li><li><code><span class="token property">colors</span></code> {boolean} \u5982\u679C\u4E3A <code><span class="token boolean">true</span></code>\uFF0C\u8F93\u51FA\u5C06\u4F7F\u7528 ANSI \u989C\u8272\u6837\u5F0F\u4EE3\u7801\u3002 \u9ED8\u8BA4\u4E3A<code><span class="token boolean">false</span></code>\u3002 \u989C\u8272\u662F\u53EF\u81EA\u5B9A\u4E49\u7684\uFF0C\u8BF7\u53C2\u9605 <a href="#util_customizing_util_inspect_colors">Customizing <code>$util<span class="token punctuation">.</span>inspect</code> colors</a>\u3002</li><li><code><span class="token property">customInspect</span></code> {boolean} \u5982\u679C\u4E3A <code><span class="token boolean">false</span></code>\uFF0C\u5219\u4E0D\u4F1A\u8C03\u7528\u5728\u88AB\u68C0\u67E5\u7684<code><span class="token property">object</span></code>\u4E0A\u5BFC\u51FA\u7684\u81EA\u5B9A\u4E49<code><span class="token function">inspect</span><span class="token punctuation">(</span>depth<span class="token punctuation">,</span> opts<span class="token punctuation">)</span></code>\u51FD\u6570\u3002\u9ED8\u8BA4\u4E3A<code><span class="token boolean">true</span></code>\u3002</li></ul><p><code>$util<span class="token punctuation">.</span><span class="token function">inspect</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code> \u65B9\u6CD5\u8FD4\u56DE <code><span class="token property">object</span></code> \u7684\u5B57\u7B26\u4E32\u8868\u793A\u5F62\u5F0F\uFF0C\u4E3B\u8981\u7528\u4E8E\u8C03\u8BD5\u3002 \u53EF\u4EE5\u4F20\u9012\u989D\u5916\u7684 <code><span class="token property">options</span></code>\u6765\u6539\u53D8\u683C\u5F0F\u5316\u5B57\u7B26\u4E32\u7684\u67D0\u4E9B\u65B9\u9762\u3002</p><p>\u4EE5\u4E0B\u793A\u4F8B\u68C0\u67E5 <code><span class="token property">$util</span></code> \u5BF9\u8C61\u7684\u6240\u6709\u5C5E\u6027\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>$util<span class="token punctuation">.</span><span class="token function">inspect</span><span class="token punctuation">(</span>$util<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">showHidden</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token literal-property property">depth</span><span class="token operator">:</span> <span class="token keyword">null</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u503C\u53EF\u4EE5\u63D0\u4F9B\u5B83\u4EEC\u81EA\u5DF1\u7684\u81EA\u5B9A\u4E49<code><span class="token function">inspect</span><span class="token punctuation">(</span>depth<span class="token punctuation">,</span> opts<span class="token punctuation">)</span></code>\u51FD\u6570\uFF0C\u5F53\u8C03\u7528\u8FD9\u4E9B\u51FD\u6570\u65F6\uFF0C\u5B83\u4EEC\u4F1A\u5728\u9012\u5F52\u68C0\u67E5\u4E2D\u63A5\u6536\u5F53\u524D\u7684 <code><span class="token property">depth</span></code> \uFF0C\u4EE5\u53CA\u4F20\u9012\u7ED9<code>$util<span class="token punctuation">.</span><span class="token function">inspect</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code>\u7684\u9009\u9879\u5BF9\u8C61\u3002</p><h2 id="util-extend-target-source" tabindex="-1"><a class="header-anchor" href="#util-extend-target-source" aria-hidden="true">#</a> $util.extend(target, source)</h2><ul><li><code><span class="token property">target</span></code> {object} \u76EE\u6807\u6784\u9020\u51FD\u6570</li><li><code><span class="token property">source</span></code> {object} \u8981\u7EE7\u627F\u7684\u6784\u9020\u51FD\u6570</li></ul><p>\u5C06\u539F\u578B\u65B9\u6CD5\u4ECE\u4E00\u4E2A\u6784\u9020\u51FD\u6570\u7EE7\u627F\u5230\u53E6\u4E00\u4E2A\u6784\u9020\u51FD\u6570\u3002\u7C7B\u4F3C\u4E8ENode.js\u4E2D\u7684<code>util<span class="token punctuation">.</span>inherits</code>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">SuperClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token class-name">SuperClass</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">increment</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token operator">++</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

$util<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span>ChildClass<span class="token punctuation">,</span> SuperClass<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">ChildClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">SuperClass</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token class-name">ChildClass</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">print</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>


<span class="token keyword">let</span> child <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ChildClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
child<span class="token punctuation">.</span><span class="token function">increment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
child<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="util-isarray-object" tabindex="-1"><a class="header-anchor" href="#util-isarray-object" aria-hidden="true">#</a> $util.isArray(object)</h2><blockquote><p>\u7A33\u5B9A\u6027\uFF1A0 - \u5DF2\u5F03\u7528</p></blockquote><ul><li><code><span class="token property">object</span></code> {any}</li></ul>`,45),k={href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/isArray",target:"_blank",rel:"noopener noreferrer"},v=n("code",null,[s("Array"),n("span",{class:"token punctuation"},"."),s("isArray")],-1),b=a(`<p>\u5982\u679C\u7ED9\u5B9A\u7684 <code><span class="token property">object</span></code> \u662F <code><span class="token property">Array</span></code>\uFF0C\u5219\u8FD4\u56DE <code><span class="token boolean">true</span></code>\u3002 \u5426\u5219\uFF0C\u8FD4\u56DE <code><span class="token boolean">false</span></code>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>$util<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Returns: true</span>
$util<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Returns: true</span>
$util<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Returns: false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="util-isboolean-object" tabindex="-1"><a class="header-anchor" href="#util-isboolean-object" aria-hidden="true">#</a> $util.isBoolean(object)</h2><blockquote><p>\u7A33\u5B9A\u6027\uFF1A0 - \u5DF2\u5F03\u7528</p></blockquote><ul><li><code><span class="token property">object</span></code> {any}</li></ul><p>\u5982\u679C\u7ED9\u5B9A\u7684 <code><span class="token property">object</span></code> \u662F <code><span class="token property">Boolean</span></code>\uFF0C\u5219\u8FD4\u56DE <code><span class="token boolean">true</span></code>\u3002 \u5426\u5219\uFF0C\u8FD4\u56DE <code><span class="token boolean">false</span></code>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>$util<span class="token punctuation">.</span><span class="token function">isBoolean</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Returns: false</span>
$util<span class="token punctuation">.</span><span class="token function">isBoolean</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Returns: false</span>
$util<span class="token punctuation">.</span><span class="token function">isBoolean</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Returns: true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="util-isdate-object" tabindex="-1"><a class="header-anchor" href="#util-isdate-object" aria-hidden="true">#</a> $util.isDate(object)</h2><blockquote><p>\u7A33\u5B9A\u6027\uFF1A0 - \u5DF2\u5F03\u7528</p></blockquote><ul><li><code><span class="token property">object</span></code> {any}</li></ul><p>\u5982\u679C\u7ED9\u5B9A\u7684 <code><span class="token property">object</span></code> \u662F <code><span class="token property">Date</span></code>\uFF0C\u5219\u8FD4\u56DE <code><span class="token boolean">true</span></code>\u3002 \u5426\u5219\uFF0C\u8FD4\u56DE <code><span class="token boolean">false</span></code>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>$util<span class="token punctuation">.</span><span class="token function">isDate</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Returns: true</span>
$util<span class="token punctuation">.</span><span class="token function">isDate</span><span class="token punctuation">(</span><span class="token function">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// false (without &#39;new&#39; returns a String)</span>
$util<span class="token punctuation">.</span><span class="token function">isDate</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Returns: false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="util-iserror-object" tabindex="-1"><a class="header-anchor" href="#util-iserror-object" aria-hidden="true">#</a> $util.isError(object)</h2><blockquote><p>\u7A33\u5B9A\u6027\uFF1A0 - \u5DF2\u5F03\u7528</p></blockquote><ul><li><code><span class="token property">object</span></code> {any}</li></ul>`,15),m=n("code",null,[n("span",{class:"token property"},"object")],-1),f=n("code",null,[n("span",{class:"token property"},"Error")],-1),h=n("code",null,[n("span",{class:"token boolean"},"true")],-1),j=n("code",null,[n("span",{class:"token boolean"},"false")],-1),y=a(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>$util<span class="token punctuation">.</span><span class="token function">isError</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Returns: true</span>
$util<span class="token punctuation">.</span><span class="token function">isError</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Returns: true</span>
$util<span class="token punctuation">.</span><span class="token function">isError</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Error&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;an error occurred&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Returns: false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8BF7\u6CE8\u610F\uFF0C\u6B64\u65B9\u6CD5\u4F9D\u8D56\u4E8E <code><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code> \u884C\u4E3A\u3002 \u5F53 <code><span class="token property">object</span></code> \u53C2\u6570\u64CD\u4F5C <code>@@toStringTag</code> \u65F6\uFF0C\u53EF\u80FD\u4F1A\u83B7\u5F97\u4E0D\u6B63\u786E\u7684\u7ED3\u679C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Error&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;an error occurred&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

$util<span class="token punctuation">.</span><span class="token function">isError</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Returns: false</span>
obj<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>toStringTag<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;Error&#39;</span><span class="token punctuation">;</span>
$util<span class="token punctuation">.</span><span class="token function">isError</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Returns: true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="util-isfunction-object" tabindex="-1"><a class="header-anchor" href="#util-isfunction-object" aria-hidden="true">#</a> $util.isFunction(object)</h2><blockquote><p>\u7A33\u5B9A\u6027\uFF1A0 - \u5DF2\u5F03\u7528</p></blockquote><ul><li><code><span class="token property">object</span></code> {any}</li></ul><p>\u5982\u679C\u7ED9\u5B9A\u7684 <code><span class="token property">object</span></code> \u662F <code><span class="token property">Function</span></code>\uFF0C\u5219\u8FD4\u56DE <code><span class="token boolean">true</span></code>\u3002 \u5426\u5219\uFF0C\u8FD4\u56DE <code><span class="token boolean">false</span></code>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>
<span class="token keyword">function</span> <span class="token function">Foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">let</span> <span class="token function-variable function">Bar</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

$util<span class="token punctuation">.</span><span class="token function">isFunction</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Returns: false</span>
$util<span class="token punctuation">.</span><span class="token function">isFunction</span><span class="token punctuation">(</span>Foo<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Returns: true</span>
$util<span class="token punctuation">.</span><span class="token function">isFunction</span><span class="token punctuation">(</span>Bar<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Returns: true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="util-isnull-object" tabindex="-1"><a class="header-anchor" href="#util-isnull-object" aria-hidden="true">#</a> $util.isNull(object)</h2><blockquote><p>\u7A33\u5B9A\u6027\uFF1A0 - \u5DF2\u5F03\u7528</p></blockquote><ul><li><code><span class="token property">object</span></code> {any}</li></ul><p>\u5982\u679C\u7ED9\u5B9A\u7684 <code><span class="token property">object</span></code> \u4E25\u683C\u4E3A <code><span class="token keyword">null</span></code>\uFF0C\u5219\u8FD4\u56DE <code><span class="token boolean">true</span></code>\u3002 \u5426\u5219\uFF0C\u8FD4\u56DE <code><span class="token boolean">false</span></code>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>
$util<span class="token punctuation">.</span><span class="token function">isNull</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Returns: false</span>
$util<span class="token punctuation">.</span><span class="token function">isNull</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Returns: false</span>
$util<span class="token punctuation">.</span><span class="token function">isNull</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Returns: true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="util-isnullorundefined-object" tabindex="-1"><a class="header-anchor" href="#util-isnullorundefined-object" aria-hidden="true">#</a> $util.isNullOrUndefined(object)</h2><blockquote><p>\u7A33\u5B9A\u6027\uFF1A0 - \u5DF2\u5F03\u7528</p></blockquote><ul><li><code><span class="token property">object</span></code> {any}</li></ul><p>\u5982\u679C\u7ED9\u5B9A\u7684 <code><span class="token property">object</span></code> \u662F <code><span class="token keyword">null</span></code> \u6216 <code><span class="token keyword">undefined</span></code>\uFF0C\u5219\u8FD4\u56DE <code><span class="token boolean">true</span></code>\u3002 \u5426\u5219\uFF0C \u8FD4\u56DE <code><span class="token boolean">false</span></code>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>
$util<span class="token punctuation">.</span><span class="token function">isNullOrUndefined</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Returns: false</span>
$util<span class="token punctuation">.</span><span class="token function">isNullOrUndefined</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Returns: true</span>
$util<span class="token punctuation">.</span><span class="token function">isNullOrUndefined</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Returns: true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="util-isnumber-object" tabindex="-1"><a class="header-anchor" href="#util-isnumber-object" aria-hidden="true">#</a> $util.isNumber(object)</h2><blockquote><p>\u7A33\u5B9A\u6027\uFF1A0 - \u5DF2\u5F03\u7528</p></blockquote><ul><li><code><span class="token property">object</span></code> {any}</li></ul><p>\u5982\u679C\u7ED9\u5B9A\u7684 <code><span class="token property">object</span></code> \u662F <code><span class="token property">Number</span></code>\uFF0C\u5219\u8FD4\u56DE <code><span class="token boolean">true</span></code>\u3002 \u5426\u5219\uFF0C\u8FD4\u56DE <code><span class="token boolean">false</span></code>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>
$util<span class="token punctuation">.</span><span class="token function">isNumber</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Returns: false</span>
$util<span class="token punctuation">.</span><span class="token function">isNumber</span><span class="token punctuation">(</span><span class="token number">Infinity</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Returns: true</span>
$util<span class="token punctuation">.</span><span class="token function">isNumber</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Returns: true</span>
$util<span class="token punctuation">.</span><span class="token function">isNumber</span><span class="token punctuation">(</span><span class="token number">NaN</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Returns: true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="util-isobject-object" tabindex="-1"><a class="header-anchor" href="#util-isobject-object" aria-hidden="true">#</a> $util.isObject(object)</h2><blockquote><p>\u7A33\u5B9A\u6027\uFF1A0 - \u5DF2\u5F03\u7528</p></blockquote><ul><li><code><span class="token property">object</span></code> {any}</li></ul><p>\u5982\u679C\u7ED9\u5B9A\u7684 <code><span class="token property">object</span></code> \u4E25\u683C\u6765\u8BF4\u662F <code><span class="token property">Object</span></code> <strong>\u5E76\u4E14</strong> \u4E0D\u662F <code><span class="token property">Function</span></code>\uFF0C\u5219\u8FD4\u56DE <code><span class="token boolean">true</span></code>\u3002 \u5426\u5219\uFF0C\u8FD4\u56DE <code><span class="token boolean">false</span></code>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>
$util<span class="token punctuation">.</span><span class="token function">isObject</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Returns: false</span>
$util<span class="token punctuation">.</span><span class="token function">isObject</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Returns: false</span>
$util<span class="token punctuation">.</span><span class="token function">isObject</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Returns: true</span>
$util<span class="token punctuation">.</span><span class="token function">isObject</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Returns: false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="util-isprimitive-object" tabindex="-1"><a class="header-anchor" href="#util-isprimitive-object" aria-hidden="true">#</a> $util.isPrimitive(object)</h2><blockquote><p>\u7A33\u5B9A\u6027\uFF1A0 - \u5DF2\u5F03\u7528</p></blockquote><ul><li><code><span class="token property">object</span></code> {any}</li></ul><p>\u5982\u679C\u7ED9\u5B9A\u7684 <code><span class="token property">object</span></code> \u662F\u539F\u59CB\u7C7B\u578B\uFF0C\u5219\u8FD4\u56DE <code><span class="token boolean">true</span></code>\u3002 \u5426\u5219\uFF0C\u8FD4\u56DE <code><span class="token boolean">false</span></code>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>$util<span class="token punctuation">.</span><span class="token function">isPrimitive</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Returns: true</span>
$util<span class="token punctuation">.</span><span class="token function">isPrimitive</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Returns: true</span>
$util<span class="token punctuation">.</span><span class="token function">isPrimitive</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Returns: true</span>
$util<span class="token punctuation">.</span><span class="token function">isPrimitive</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Returns: true</span>
$util<span class="token punctuation">.</span><span class="token function">isPrimitive</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Returns: true</span>
$util<span class="token punctuation">.</span><span class="token function">isPrimitive</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Returns: false</span>
$util<span class="token punctuation">.</span><span class="token function">isPrimitive</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Returns: false</span>
$util<span class="token punctuation">.</span><span class="token function">isPrimitive</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Returns: false</span>
$util<span class="token punctuation">.</span><span class="token function">isPrimitive</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Returns: false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="util-isregexp-object" tabindex="-1"><a class="header-anchor" href="#util-isregexp-object" aria-hidden="true">#</a> $util.isRegExp(object)</h2><blockquote><p>\u7A33\u5B9A\u6027\uFF1A0 - \u5DF2\u5F03\u7528</p></blockquote><ul><li><code><span class="token property">object</span></code> {any}</li></ul><p>\u5982\u679C\u7ED9\u5B9A\u7684 <code><span class="token property">object</span></code> \u662F <code><span class="token property">RegExp</span></code>\uFF0C\u5219\u8FD4\u56DE <code><span class="token boolean">true</span></code>\u3002 \u5426\u5219\uFF0C\u8FD4\u56DE <code><span class="token boolean">false</span></code>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>$util<span class="token punctuation">.</span><span class="token function">isRegExp</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">some regexp</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Returns: true</span>
$util<span class="token punctuation">.</span><span class="token function">isRegExp</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token string">&#39;another regexp&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Returns: true</span>
$util<span class="token punctuation">.</span><span class="token function">isRegExp</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Returns: false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="util-isstring-object" tabindex="-1"><a class="header-anchor" href="#util-isstring-object" aria-hidden="true">#</a> $util.isString(object)</h2><blockquote><p>\u7A33\u5B9A\u6027\uFF1A0 - \u5DF2\u5F03\u7528</p></blockquote><ul><li><code><span class="token property">object</span></code> {any}</li></ul><p>\u5982\u679C\u7ED9\u5B9A\u7684 <code><span class="token property">object</span></code> \u662F <code><span class="token property">string</span></code>\uFF0C\u5219\u8FD4\u56DE <code><span class="token boolean">true</span></code>\u3002 \u5426\u5219\uFF0C\u8FD4\u56DE <code><span class="token boolean">false</span></code>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>$util<span class="token punctuation">.</span><span class="token function">isString</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Returns: true</span>
$util<span class="token punctuation">.</span><span class="token function">isString</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Returns: true</span>
$util<span class="token punctuation">.</span><span class="token function">isString</span><span class="token punctuation">(</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Returns: true</span>
$util<span class="token punctuation">.</span><span class="token function">isString</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Returns: false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="util-isundefined-object" tabindex="-1"><a class="header-anchor" href="#util-isundefined-object" aria-hidden="true">#</a> $util.isUndefined(object)</h2><blockquote><p>\u7A33\u5B9A\u6027\uFF1A0 - \u5DF2\u5F03\u7528</p></blockquote><ul><li><code><span class="token property">object</span></code> {any}</li></ul><p>\u5982\u679C\u7ED9\u5B9A\u7684 <code><span class="token property">object</span></code> \u662F <code><span class="token keyword">undefined</span></code>\uFF0C\u5219\u8FD4\u56DE <code><span class="token boolean">true</span></code>\u3002 \u5426\u5219\uFF0C\u8FD4\u56DE <code><span class="token boolean">false</span></code>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> foo <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
$util<span class="token punctuation">.</span><span class="token function">isUndefined</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Returns: false</span>
$util<span class="token punctuation">.</span><span class="token function">isUndefined</span><span class="token punctuation">(</span>foo<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Returns: true</span>
$util<span class="token punctuation">.</span><span class="token function">isUndefined</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Returns: false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,48);function g($,x){const p=t("ExternalLinkIcon"),o=t("RouterLink");return l(),i("div",null,[d,n("p",null,[n("a",k,[v,e(p)]),s(" \u7684\u5185\u90E8\u522B\u540D\u3002")]),b,n("p",null,[s("\u5982\u679C\u7ED9\u5B9A\u7684 "),m,s(" \u662F "),e(o,{to:"/zh/v8/errors.html#errors_class_error"},{default:u(()=>[f]),_:1}),s("\uFF0C\u5219\u8FD4\u56DE "),h,s("\u3002 \u5426\u5219\uFF0C\u8FD4\u56DE"),j,s("\u3002")]),y])}const _=c(r,[["render",g],["__file","util.html.vue"]]);export{_ as default};
